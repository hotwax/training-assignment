
Case 1: Inserting values in hashmap

Input : 
Inserting : (1, 10),(2, 20) (3, 30)

Output : 
Hashmap- capacity(10)

0:
1: (1,10)
2: (2,20)
3: (3,30)
4:
5:
6:
7:
8:
9:




Case 2: Inserting a value to test collision

Input : 
Inserting : (11,40)

Output : Key-value pair inserted successfully.
Hashmap- 

1:(1,10)
2:(2,20)
3:(3,30)
4:(11,40)
5:
6:
7:
8:
9:




Case 3: Collision Test.

Input : calling getCollision()

Output : 1





Case 4: Inserting a value to test updation if key is present

Input : 
Inserting : (1,50)

Output : Key-value pair updated.
Hashmap- 

0:
1: (1,50)
2: (2,20)
3: (3,30)
4: (11,40)
5: 
6:
7:
8:
9:




Case 5: Inserting after the capacity is full,when size = capacity (load factor =1)

Input : 
Inserting : (5,70),(50,600),(36,80),(7,70),(8,88),(9,90)	

Output : Capacity is full

Hashmap- 
0:(50,600)
1:(1,10)
2:(2,20)
3:(3,30)
4:(11,40)
5:(5,70)
6:(36,80)
7:(7,70)
8:(8,88)
9:(9,90)




Case 6: Deletion when key is not present

Input : 
Deleting : 400

Output : Key not found.





Case 7: Deletion when key present

Input : 
Deleting : 11

Output : Value Deleted :40

0: (9,90)
1: (1,50)
2: (2,20)
3: (3,30)
4: (10,100)
5: (-1,-1)
6: (5,70)
7: (6,60)
8: (7,70)
9: (8,80)





Case 8: Getting the value of key passed (key not present)

Input : 
getValue : 400

Output : Key not found





Case 9: Getting the value of key passed (key is present)

Input : 
getValue : 2

Output : Value :20





Case 10: Searching the key passed (key is present).

Input : 50

Output : Key Found





Case 11: Searching the key passed (key is not present).

Input : 8

Output : Key not Found





Case 12: Invalid Input in menu

Input: asjx

Output: Invalid choice


