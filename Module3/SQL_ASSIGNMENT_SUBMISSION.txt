1.List all the columns of the Salespeople table. 

mysql> DESC SALESPEOPLE;
+-------+--------------+------+-----+---------+-------+
| Field | Type         | Null | Key | Default | Extra |
+-------+--------------+------+-----+---------+-------+
| SNUM  | int(11)      | YES  |     | NULL    |       |
| SNAME | varchar(100) | YES  |     | NULL    |       |
| CITY  | varchar(100) | YES  |     | NULL    |       |
| COMM  | int(11)      | YES  |     | NULL    |       |
+-------+--------------+------+-----+---------+-------+
4 rows in set (0.02 sec)


OR


mysql> SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SALESPEOPLE';
+-------------+
| COLUMN_NAME |
+-------------+
| SNUM        |
| SNAME       |
| CITY        |
| COMM        |
+-------------+
4 rows in set (0.02 sec)


OR

mysql> SHOW COLUMNS FROM SALESPEOPLE;
+-------+--------------+------+-----+---------+-------+
| Field | Type         | Null | Key | Default | Extra |
+-------+--------------+------+-----+---------+-------+
| SNUM  | int(11)      | YES  |     | NULL    |       |
| SNAME | varchar(100) | YES  |     | NULL    |       |
| CITY  | varchar(100) | YES  |     | NULL    |       |
| COMM  | int(11)      | YES  |     | NULL    |       |
+-------+--------------+------+-----+---------+-------+
4 rows in set (0.02 sec)

2. List all customers with a rating of 100. 
mysql> SELECT * FROM CUSTOMERS WHERE RATING = 100;
+------+---------+--------+--------+------+
| CNUM | CNAME   | CITY   | RATING | SNUM |
+------+---------+--------+--------+------+
| 2001 | Hoffman | London |    100 | 1001 |
| 2006 | Ciemens | London |    100 | 1001 |
| 2007 | Pereira | Rome   |    100 | 1004 |
+------+---------+--------+--------+------+
3 rows in set (0.00 sec)

3. Find the largest order taken by each salesperson on each date. 

mysql> SELECT SALESPEOPLE.SNUM, SALESPEOPLE.SNAME, MAX(ORDERS.AMT) AS AMOUNT,ORDERS.ODATE  FROM SAL
ESPEOPLE INNER JOIN ORDERS ON ORDERS.SNUM=SALESPEOPLE.SNUM GROUP BY ORDERS.ODATE,SALESPEOPLE.SNAME;

+------+---------+---------+----------+
| SNUM | SNAME   | AMOUNT  | ODATE    |
+------+---------+---------+----------+
| 1004 | Motika  | 1900.10 | 10/03/90 |
| 1001 | Peel    |  767.19 | 10/03/90 |
| 1007 | Rifkin  | 1098.16 | 10/03/90 |
| 1002 | Serres  | 5160.45 | 10/03/90 |
| 1003 | AxelRod | 1713.23 | 10/04/90 |
| 1002 | Serres  |   75.75 | 10/04/90 |
| 1001 | Peel    | 9891.88 | 10/05/90 |
| 1002 | Serres  | 1309.95 | 10/05/90 |
+------+---------+---------+----------+
8 rows in set (0.00 sec)

4. Arrange the Order table by descending customer number. 


mysql> SELECT * FROM ORDERS ORDER BY CNUM DESC;
+------+---------+----------+------+------+
| ONUM | AMT     | ODATE    | CNUM | SNUM |
+------+---------+----------+------+------+
| 3001 |   18.69 | 10/03/90 | 2008 | 1007 |
| 3006 | 1098.16 | 10/03/90 | 2008 | 1007 |
| 3002 | 1900.10 | 10/03/90 | 2007 | 1004 |
| 3011 | 9891.88 | 10/05/90 | 2006 | 1001 |
| 3008 | 4723.00 | 10/05/90 | 2006 | 1001 |
| 3010 | 1309.95 | 10/05/90 | 2004 | 1002 |
| 3007 |   75.75 | 10/04/90 | 2004 | 1002 |
| 3005 | 5160.45 | 10/03/90 | 2003 | 1002 |
| 3009 | 1713.23 | 10/04/90 | 2002 | 1003 |
| 3003 |  767.19 | 10/03/90 | 2001 | 1001 |
+------+---------+----------+------+------+
10 rows in set (0.00 sec)

5. Find which salespeople currently have orders in the order table. 
mysql> SELECT DISTINCT(SALESPEOPLE.SNAME) FROM SALESPEOPLE INNER JOIN ORDERS
 ON SALESPEOPLE.SNUM=ORDERS.SNUM;
+---------+
| SNAME   |
+---------+
| Rifkin  |
| Peel    |
| Motika  |
| Serres  |
| AxelRod |
+---------+
5 rows in set (0.00 sec)


OR

mysql> SELECT SNAME FROM SALESPEOPLE WHERE SNUM IN (SELECT DISTINCT SNUM FROM ORDERS);
+---------+
| SNAME   |
+---------+
| Peel    |
| Serres  |
| Motika  |
| Rifkin  |
| AxelRod |
+---------+

6. List names of all customers matched with the salespeople serving them. 

mysql> SELECT CUSTOMERS.CNAME FROM CUSTOMERS INNER JOIN SALE
SPEOPLE ON CUSTOMERS.SNUM=SALESPEOPLE.SNUM;
+----------+
| CNAME    |
+----------+
| Hoffman  |
| Giovanni |
| Liu      |
| Grass    |
| Ciemens  |
| Cisneros |
| Pereira  |
+----------+
7 rows in set (0.00 sec)

7. Find the names and numbers of all salespeople who have more than one customer. 


mysql> SELECT SALESPEOPLE.SNAME , COUNT(CUSTOMERS.SNUM)  FROM SALESPEOPLE INNER JOIN CUSTOMERS ON SALESPEOPLE.SNUM=CUSTOMERS.SNUM GROUP BY CUSTOMERS.SNUM HAVING COUNT(CUSTOMERS.SNUM)>1;
+--------+-----------------------+
| SNAME  | COUNT(CUSTOMERS.SNUM) |
+--------+-----------------------+
| Peel   |                     2 |
| Serres |                     2 |
+--------+-----------------------+
2 rows in set (0.00 sec)

8. Count the orders of each of the salespeople and output the results in descending order. 

mysql> SELECT  SALESPEOPLE.SNUM,COUNT(ORDERS.SNUM) AS "NO. OF ORDERS OF EACH SALESPEOPLE" FROM ORDERS INNER JOIN SALESPEOPLE ON SALESPEOPLE.SNUM=ORDERS.SNUM  GROUP BY ORDERS.SNUM ORDER BY COUNT(ORDERS.SNUM) DESC;
+------+-----------------------------------+
| SNUM | NO. OF ORDERS OF EACH SALESPEOPLE |
+------+-----------------------------------+
| 1001 |                                 3 |
| 1002 |                                 3 |
| 1007 |                                 2 |
| 1004 |                                 1 |
| 1003 |                                 1 |
+------+-----------------------------------+
5 rows in set (0.00 sec)

9. List the customer table if and only if one or more of the customers in the Customer table are located in SanJose.

mysql> SELECT * FROM CUSTOMERS WHERE EXISTS (SELECT CITY FROM CUSTOMERS WHERE CITY="SanJose")
    -> ;
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2001 | Hoffman  | London  |    100 | 1001 |
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2006 | Ciemens  | London  |    100 | 1001 |
| 2006 | Cisneros | SanJose |    300 | 1007 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
+------+----------+---------+--------+------+
7 rows in set (0.00 sec)

10. Match salespeople to customers according to what city they live in. 

mysql> SELECT SALESPEOPLE.SNAME, CUSTOMERS.CNAME, CUSTOMERS.CITY FROM SALESP
EOPLE INNER JOIN CUSTOMERS ON CUSTOMERS.CITY=SALESPEOPLE.CITY;
+--------+----------+---------+
| SNAME  | CNAME    | CITY    |
+--------+----------+---------+
| Peel   | Hoffman  | London  |
| Motika | Hoffman  | London  |
| Fran   | Hoffman  | London  |
| Serres | Liu      | SanJose |
| Peel   | Ciemens  | London  |
| Motika | Ciemens  | London  |
| Fran   | Ciemens  | London  |
| Serres | Cisneros | SanJose |
+--------+----------+---------+
8 rows in set (0.00 sec)

11.Find all the customers in SanJose who have a rating above 200. 

mysql> SELECT * FROM CUSTOMERS WHERE CITY="SanJose" and RATING>200;
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2006 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+
1 row in set (0.00 sec)

12. List the names and commissions of all salespeople in London. 

mysql> SELECT SNAME,CITY,COMM FROM SALESPEOPLE WHERE CITY="London";
+--------+--------+------+
| SNAME  | CITY   | COMM |
+--------+--------+------+
| Peel   | London |   12 |
| Motika | London |   11 |
| Fran   | London |   25 |
+--------+--------+------+
3 rows in set (0.00 sec)

13. List all the orders of Salesperson Motika from the orders table.


mysql> SELECT ORDERS.ONUM,ORDERS.AMT,ORDERS.ODATE,ORDERS.CNUM,ORDERS.SNUM FROM ORDERS INNER JOIN SALESPEOPLE ON SALESPEOPLE.SNUM = ORDERS.SNUM WHERE SALESPEOPLE.SNAME="Motika";
+------+---------+----------+------+------+
| ONUM | AMT     | ODATE    | CNUM | SNUM |
+------+---------+----------+------+------+
| 3002 | 1900.10 | 10/03/90 | 2007 | 1004 |
+------+---------+----------+------+------+
1 row in set (0.00 sec)

14. Find all customers who booked orders on October 3. 


mysql> SELECT DISTINCT CNUM, ODATE FROM ORDERS WHERE ODATE LIKE '10/03%';
+------+----------+
| CNUM | ODATE    |
+------+----------+
| 2008 | 10/03/90 |
| 2001 | 10/03/90 |
| 2007 | 10/03/90 |
| 2003 | 10/03/90 |
+------+----------+
4 rows in set (0.00 sec)

 SELECT DISTINCT C.CNAME,C.CNUM, O.ODATE FROM CUSTOMERS AS C JOIN ORDE
RS AS O ON C.CNUM = O.CNUM AND O.ODATE = '10/03/90';
+---------+------+----------+
| CNAME   | CNUM | ODATE    |
+---------+------+----------+
| Hoffman | 2001 | 10/03/90 |
| Pereira | 2007 | 10/03/90 |
| Liu     | 2003 | 10/03/90 |
+---------+------+----------+
3 rows in set (0.00 sec)



 SELECT DISTINCT C.CNAME,C.CNUM, O.ODATE FROM CUSTOMERS AS C JOIN ORDE
RS AS O ON C.CNUM = O.CNUM WHERE O.ODATE = '10/03/90';
+---------+------+----------+
| CNAME   | CNUM | ODATE    |
+---------+------+----------+
| Hoffman | 2001 | 10/03/90 |
| Pereira | 2007 | 10/03/90 |
| Liu     | 2003 | 10/03/90 |
+---------+------+----------+
3 rows in set (0.00 sec)


15. Give the sums of the amounts from the Orders table, grouped by date, eliminating all those dates where the SUM was not at least 2000 above the maximum Amount. 


mysql>  SELECT SUM(AMT) FROM ORDERS GROUP BY ODATE HAVING SUM(AMT)>=2000;
+----------+
| SUM(AMT) |
+----------+
|  8944.59 |
|  4723.00 |
| 11201.83 |
+----------+
3 rows in set (0.00 sec)

16.Select all orders that had amounts that were greater than at least one of the orders from October 6. 


mysql> SELECT * FROM ORDERS WHERE AMT>= (SELECT MIN(AMT) FROM ORDERS WHERE ODATE LIKE '10/06%' );
+------+---------+----------+------+------+
| ONUM | AMT     | ODATE    | CNUM | SNUM |
+------+---------+----------+------+------+
| 3002 | 1900.10 | 10/03/90 | 2007 | 1004 |
| 3005 | 5160.45 | 10/03/90 | 2003 | 1002 |
| 3009 | 1713.23 | 10/04/90 | 2002 | 1003 |
| 3008 | 4723.00 | 10/05/90 | 2006 | 1001 |
| 3010 | 1309.95 | 10/06/90 | 2004 | 1002 |
| 3011 | 9891.88 | 10/06/90 | 2006 | 1001 |
+------+---------+----------+------+------+
6 rows in set (0.00 sec)


17. Write a query that uses the EXISTS operator to extract all salespeople who have customers with a rating of 300.
mysql> SELECT * FROM SALESPEOPLE WHERE EXISTS (SELECT * FROM CUSTOMERS WHERE SALESPEOPLE.SNUM = CUSTOMERS.SNUM AND RATING =300);
+------+--------+-----------+------+
| SNUM | SNAME  | CITY      | COMM |
+------+--------+-----------+------+
| 1002 | Serres | SanJose   |   13 |
| 1007 | Rifkin | Barcelona |   15 |
+------+--------+-----------+------+
2 rows in set (0.00 sec)


18.Find all customers whose cnum is 1000 above the snum of Serres. 


mysql> SELECT CUSTOMERS.CNAME FROM CUSTOMERS INNER JOIN SALESPEOPLE ON SALESPEOPLE.SNUM =CUSTOMERS.SNUM WHERE CUSTOMERS.CNUM>1000 + (SELECT SALESPEOPLE.
SNUM FROM SALESPEOPLE WHERE SALESPEOPLE.SNAME = "Serres");
+----------+
| CNAME    |
+----------+
| Liu      |
| Grass    |
| Ciemens  |
| Cisneros |
| Pereira  |
+----------+
5 rows in set (0.00 sec)


19.Give the salespeople’s commissions as percentages instead of decimal numbers. 

Database changed
mysql> SELECT snum, sname, CONCAT(comm, '%') as comm_in_percentage
FROM salespeople;
+------+---------+--------------------+
| snum | sname   | comm_in_percentage |
+------+---------+--------------------+
| 1001 | Peel    | 12%                |
| 1002 | Serres  | 13%                |
| 1003 | AxelRod | 10%                |
| 1004 | Motika  | 11%                |
| 1007 | Rifkin  | 15%                |
| 1008 | Fran    | 25%                |
+------+---------+--------------------+


20.Find the largest order taken by each salesperson on each date, eliminating those Maximum orders, which are less than 3000.

mysql> SELECT SALESPEOPLE.SNUM, SALESPEOPLE.SNAME, MAX(ORDERS.AMT) AS AMOUNT, ORDERS.ODATE FROM SALESPEOPLE INNER JOIN ORDERS ON ORDERS.SNUM=SALESPEOPLE.SNUM WHERE ORDERS.AMT>=3000 GROUP BY ORDERS.ODATE, SALESPEOPLE.SNAME;
+------+--------+---------+----------+
| SNUM | SNAME  | AMOUNT  | ODATE    |
+------+--------+---------+----------+
| 1002 | Serres | 5160.45 | 10/03/90 |
| 1001 | Peel   | 4723.00 | 10/05/90 |
| 1001 | Peel   | 9891.88 | 10/06/90 |
+------+--------+---------+----------+
3 rows in set (0.00 sec)

21. List all the largest orders for October 3, for each salesperson. 

mysql> SELECT ONUM,ODATE,CNUM,SNUM,MAX(AMT) FROM ORDERS WHERE ODATE LIKE "10
/03%" GROUP BY SNUM;
+------+----------+------+------+----------+
| ONUM | ODATE    | CNUM | SNUM | MAX(AMT) |
+------+----------+------+------+----------+
| 3003 | 10/03/90 | 2001 | 1001 |   767.19 |
| 3005 | 10/03/90 | 2003 | 1002 |  5160.45 |
| 3002 | 10/03/90 | 2007 | 1004 |  1900.10 |
| 3001 | 10/03/90 | 2008 | 1007 |  1098.16 |
+------+----------+------+------+----------+
4 rows in set (0.00 sec)

22. Find all customers located in cities where Serres has customers. 

mysql> SELECT * FROM SALESPEOPLE INNER JOIN CUSTOMERS ON SALESPEOPLE.SNUM = CUSTOMERS.SNUM WHERE CUSTOMERS.CITY IN (SELECT CUSTOMERS.CITY FROM CUSTOMERS
 WHERE CUSTOMERS.SNUM = (SELECT SALESPEOPLE.SNUM FROM SALESPEOPLE WHERE SALE
SPEOPLE.SNAME = "Serres"));
+------+--------+-----------+------+------+----------+---------+--------+------+
| SNUM | SNAME  | CITY      | COMM | CNUM | CNAME    | CITY    | RATING | SNUM |
+------+--------+-----------+------+------+----------+---------+--------+------+
| 1002 | Serres | SanJose   |   13 | 2003 | Liu      | SanJose |    200 | 1002 |
| 1002 | Serres | SanJose   |   13 | 2004 | Grass    | Berlin  |    300 | 1002 |
| 1007 | Rifkin | Barcelona |   15 | 2006 | Cisneros | SanJose |    300 | 1007 |
+------+--------+-----------+------+------+----------+---------+--------+------+
3 rows in set (0.00 sec)

23.  Select all customers with a rating above 200. 

mysql> SELECT * FROM CUSTOMERS WHERE RATING >200;
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2006 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+
2 rows in set (0.00 sec)

24. Count the number of salespeople currently having orders in the orders table. 
mysql> SELECT COUNT(DISTINCT(SNUM)) FROM ORDERS;
+-----------------------+
| COUNT(DISTINCT(SNUM)) |
+-----------------------+
|                     5 |
+-----------------------+
1 row in set (0.00 sec)

25.  Write a query that produces all customers serviced by salespeople with a commission above 12%. Output the customer’s name, salesperson’s name and the salesperson’s rate of commission. 


mysql> SELECT CUSTOMERS.CNUM, CUSTOMERS.CNAME,CUSTOMERS.CITY,CUSTOMERS.RATING,CUSTOMERS.SNUM, SALESPEOPLE.COMM FROM CUSTOMERS INNER JOIN SALESPEOPLE ON
SALESPEOPLE.SNUM = CUSTOMERS.SNUM WHERE SALESPEOPLE.COMM >12;
+------+----------+---------+--------+------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM | COMM |
+------+----------+---------+--------+------+------+
| 2003 | Liu      | SanJose |    200 | 1002 |   13 |
| 2004 | Grass    | Berlin  |    300 | 1002 |   13 |
| 2006 | Cisneros | SanJose |    300 | 1007 |   15 |
+------+----------+---------+--------+------+------+
3 rows in set (0.00 sec)


OR

mysql> SELECT C.CNUM,C.CNAME,C.CITY,C.RATING,S.SNAME,S.COMM FROM SALESPEOPLE
 AS S, CUSTOMERS AS C WHERE S.SNUM = C.SNUM AND S.COMM >12;
+------+----------+---------+--------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNAME  | COMM |
+------+----------+---------+--------+--------+------+
| 2003 | Liu      | SanJose |    200 | Serres |   13 |
| 2004 | Grass    | Berlin  |    300 | Serres |   13 |
| 2006 | Cisneros | SanJose |    300 | Rifkin |   15 |
+------+----------+---------+--------+--------+------+
3 rows in set (0.00 sec)

26. Find salespeople who have multiple customers.


mysql> SELECT SNUM FROM CUSTOMERS GROUP BY SNUM HAVING COUNT(SNUM)>1;
+------+
| SNUM |
+------+
| 1001 |
| 1002 |
+------+
2 rows in set (0.00 sec)

27. Find salespeople with customers located in their own cities. 

mysql> SELECT SALESPEOPLE.SNUM, SALESPEOPLE.SNAME, SALESPEOPLE.CITY, SALESPEOPLE.COMM, CUSTOMERS.CNAME, CUSTOMERS.CITY, CUSTOMERS.SNUM FROM SALESPEOPLE INNER JOIN CUSTOMERS ON SALESPEOPLE.CITY = CUSTOMERS.CITY AND SALESPEOPLE.SNUM = CUSTOMERS.SNUM;
+------+--------+---------+------+---------+---------+------+
| SNUM | SNAME  | CITY    | COMM | CNAME   | CITY    | SNUM |
+------+--------+---------+------+---------+---------+------+
| 1001 | Peel   | London  |   12 | Hoffman | London  | 1001 |
| 1002 | Serres | SanJose |   13 | Liu     | SanJose | 1002 |
| 1001 | Peel   | London  |   12 | Ciemens | London  | 1001 |
+------+--------+---------+------+---------+---------+------+
3 rows in set (0.00 sec)

OR 

mysql> SELECT S.SNUM,SNAME,S.CITY,S.COMM,C.CNAME,C.CITY FROM SALESPEOPLE AS
S, CUSTOMERS AS C WHERE C.SNUM = S.SNUM AND C.CITY = S.CITY;
+------+--------+---------+------+---------+---------+
| SNUM | SNAME  | CITY    | COMM | CNAME   | CITY    |
+------+--------+---------+------+---------+---------+
| 1001 | Peel   | London  |   12 | Hoffman | London  |
| 1002 | Serres | SanJose |   13 | Liu     | SanJose |
| 1001 | Peel   | London  |   12 | Ciemens | London  |
+------+--------+---------+------+---------+---------+
3 rows in set (0.00 sec)




28. Find all salespeople whose name starts with ‘P’ and fourth character is ‘I’.


mysql> SELECT * FROM SALESPEOPLE WHERE SNAME LIKE 'P__I%';
Empty set (0.00 sec)


29. Write a query that uses a subquery to obtain all orders for the customer named ‘Cisneros’. Assume you do not know his customer number.


mysql> SELECT ORDERS.ONUM, ORDERS.AMT,ORDERS.ODATE,ORDERS.CNUM,ORDERS.SNUM FROM ORDERS INNER JOIN CUSTOMERS ON ORDERS.SNUM = CUSTOMERS.SNUM WHERE ORDERS.CNUM = (SELECT CUSTOMERS.CNUM FROM CUSTOMERS WHERE CUSTOMERS.CNAME= "Cisneros");
+------+---------+----------+------+------+
| ONUM | AMT     | ODATE    | CNUM | SNUM |
+------+---------+----------+------+------+
| 3008 | 4723.00 | 10/05/90 | 2006 | 1001 |
| 3008 | 4723.00 | 10/05/90 | 2006 | 1001 |
| 3011 | 9891.88 | 10/06/90 | 2006 | 1001 |
| 3011 | 9891.88 | 10/06/90 | 2006 | 1001 |
+------+---------+----------+------+------+
4 rows in set (0.00 sec)

30. Find the largest orders for Serres and Rifkin.


mysql> SELECT ORDERS.ONUM, MAX(ORDERS.AMT), SALESPEOPLE.SNAME FROM ORDERS INNER JOIN SALESPEOPLE ON SALESPEOPLE.SNUM = ORDERS.SNUM WHERE SALESPEOPLE.SNUM IN (SELECT SALESPEOPLE.SNUM FROM SALESPEOPLE WHERE SALESPEOPLE.SNAME = "Serres" OR SALESPEOPLE.SNAME = "Rifkin") GROUP BY ORDERS.SNUM;
+------+-----------------+--------+
| ONUM | MAX(ORDERS.AMT) | SNAME  |
+------+-----------------+--------+
| 3005 |         5160.45 | Serres |
| 3001 |         1098.16 | Rifkin |
+------+-----------------+--------+
2 rows in set (0.00 sec)

31. Sort the salespeople table in the following order: snum, sname, commission, city. 


mysql> SELECT * FROM SALESPEOPLE ORDER BY SNUM,SNAME,COMM;
+------+---------+-----------+------+
| SNUM | SNAME   | CITY      | COMM |
+------+---------+-----------+------+
| 1001 | Peel    | London    |   12 |
| 1002 | Serres  | SanJose   |   13 |
| 1003 | AxelRod | New York  |   10 |
| 1004 | Motika  | London    |   11 |
| 1007 | Rifkin  | Barcelona |   15 |
| 1008 | Fran    | London    |   25 |
+------+---------+-----------+------+
6 rows in set (0.00 sec)

32. Select all customers whose names fall in between ‘A’ and ‘G’ alphabetical range. 


mysql> SELECT * FROM CUSTOMERS WHERE CNAME BETWEEN ('A%') AND ('G');
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2006 | Ciemens  | London  |    100 | 1001 |
| 2006 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+
2 rows in set (0.00 sec)


33. Select all the possible combinations of customers you can assign. 

mysql> SELECT CUSTOMERS.CNAME, CUSTOMERS1.CNAME FROM CUSTOMERS JOIN CUSTOMERS CUSTOMERS1 ON CUSTOMERS.CNUM<CUSTOMERS1.CNUM;
+----------+----------+
| CNAME    | CNAME    |
+----------+----------+
| Hoffman  | Giovanni |
| Hoffman  | Liu      |
| Giovanni | Liu      |
| Hoffman  | Grass    |
| Giovanni | Grass    |
| Liu      | Grass    |
| Hoffman  | Ciemens  |
| Giovanni | Ciemens  |
| Liu      | Ciemens  |
| Grass    | Ciemens  |
| Hoffman  | Cisneros |
| Giovanni | Cisneros |
| Liu      | Cisneros |
| Grass    | Cisneros |
| Hoffman  | Pereira  |
| Giovanni | Pereira  |
| Liu      | Pereira  |
| Grass    | Pereira  |
| Ciemens  | Pereira  |
| Cisneros | Pereira  |
+----------+----------+
20 rows in set (0.00 sec)

34. Select all orders that are greater than the average for October 4. 


mysql> SELECT * FROM ORDERS WHERE AMT > ( SELECT AVG(AMT) FROM ORDERS WHERE ODATE LIKE "10/04%");
+------+---------+----------+------+------+
| ONUM | AMT     | ODATE    | CNUM | SNUM |
+------+---------+----------+------+------+
| 3002 | 1900.10 | 10/03/90 | 2007 | 1004 |
| 3005 | 5160.45 | 10/03/90 | 2003 | 1002 |
| 3006 | 1098.16 | 10/03/90 | 2008 | 1007 |
| 3009 | 1713.23 | 10/04/90 | 2002 | 1003 |
| 3008 | 4723.00 | 10/05/90 | 2006 | 1001 |
| 3010 | 1309.95 | 10/06/90 | 2004 | 1002 |
| 3011 | 9891.88 | 10/06/90 | 2006 | 1001 |
+------+---------+----------+------+------+
7 rows in set (0.00 sec)

35. Write a select command using correlated subquery that selects the names and numbers of all customers with ratings equal to the maximum for their city. 


mysql> SELECT * FROM CUSTOMERS WHERE RATING IN (SELECT MAX(RATING) FROM CUSTOMERS GROUP BY CITY);
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2001 | Hoffman  | London  |    100 | 1001 |
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2006 | Ciemens  | London  |    100 | 1001 |
| 2006 | Cisneros | SanJose |    300 | 1007 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
+------+----------+---------+--------+------+
7 rows in set (0.00 sec)

36. Write a query that totals the orders for each day and places the results in descending order.


mysql> SELECT COUNT(AMT), ODATE FROM ORDERS GROUP BY ODATE ORDER BY COUNT(AM
T) DESC;

Here i am assuming that we have to count total orders  or totals the orders for each days

+------------+----------+
| COUNT(AMT) | ODATE    |
+------------+----------+
|          5 | 10/03/90 |
|          2 | 10/04/90 |
|          2 | 10/06/90 |
|          1 | 10/05/90 |
+------------+----------+
4 rows in set (0.00 sec)


Here i am assuming that we have to sum the amt of each days orders as the question is confusing 


mysql> SELECT SUM(AMT), ODATE FROM ORDERS GROUP BY ODATE ORDER BY SUM(AMT);
+----------+----------+
| SUM(AMT) | ODATE    |
+----------+----------+
|  1788.98 | 10/04/90 |
|  4723.00 | 10/05/90 |
|  8944.59 | 10/03/90 |
| 11201.83 | 10/06/90 |
+----------+----------+
4 rows in set (0.00 sec)

37. Write a select command that produces the rating followed by the name of each customer in SanJose. 


mysql> SELECT RATING, CNAME, CITY FROM CUSTOMERS WHERE CITY="SanJose";
+--------+----------+---------+
| RATING | CNAME    | CITY    |
+--------+----------+---------+
|    200 | Liu      | SanJose |
|    300 | Cisneros | SanJose |
+--------+----------+---------+
2 rows in set (0.00 sec)

38.Find all orders with amounts smaller than any amount for a customer in SanJose. 

mysql> SELECT * FROM ORDERS WHERE AMT < ANY (SELECT AMT FROM ORDERS WHERE CNUM IN (SELECT CNUM FROM CUSTOMERS WHERE CITY = "SanJose"));
+------+---------+----------+------+------+
| ONUM | AMT     | ODATE    | CNUM | SNUM |
+------+---------+----------+------+------+
| 3001 |   18.69 | 10/03/90 | 2008 | 1007 |
| 3003 |  767.19 | 10/03/90 | 2001 | 1001 |
| 3002 | 1900.10 | 10/03/90 | 2007 | 1004 |
| 3005 | 5160.45 | 10/03/90 | 2003 | 1002 |
| 3006 | 1098.16 | 10/03/90 | 2008 | 1007 |
| 3009 | 1713.23 | 10/04/90 | 2002 | 1003 |
| 3008 | 4723.00 | 10/05/90 | 2006 | 1001 |
| 3010 | 1309.95 | 10/06/90 | 2004 | 1002 |
| 3007 |   75.75 | 10/04/90 | 2004 | 1002 |
+------+---------+----------+------+------+
9 rows in set (0.00 sec)


39. Find all orders with above average amounts for their customers. 

mysql> SELECT * FROM ORDERS WHERE AMT > ANY (SELECT AVG(AMT) FROM ORDERS GROUP BY CNUM);
+------+---------+----------+------+------+
| ONUM | AMT     | ODATE    | CNUM | SNUM |
+------+---------+----------+------+------+
| 3003 |  767.19 | 10/03/90 | 2001 | 1001 |
| 3002 | 1900.10 | 10/03/90 | 2007 | 1004 |
| 3005 | 5160.45 | 10/03/90 | 2003 | 1002 |
| 3006 | 1098.16 | 10/03/90 | 2008 | 1007 |
| 3009 | 1713.23 | 10/04/90 | 2002 | 1003 |
| 3008 | 4723.00 | 10/05/90 | 2006 | 1001 |
| 3010 | 1309.95 | 10/06/90 | 2004 | 1002 |
| 3011 | 9891.88 | 10/06/90 | 2006 | 1001 |
+------+---------+----------+------+------+
8 rows in set (0.00 sec)

40.  Write a query that selects the highest rating in each city


mysql> SELECT CITY, MAX(RATING) FROM CUSTOMERS GROUP BY CITY;
+---------+-------------+
| CITY    | MAX(RATING) |
+---------+-------------+
| Berlin  |         300 |
| London  |         100 |
| Rome    |         200 |
| SanJose |         300 |
+---------+-------------+
4 rows in set (0.00 sec)

41. Write a query that calculates the amount of the salesperson’s commission on each order by a customer with a rating above 100.00. 42) Count the customers with ratings above SanJose’s average.

mysql> SELECT O.ONUM, (O.AMT * S.COMM/100.0) FROM ORDERS O JOIN CUSTOMERS C ON O.CNUM = C.CNUM AND C.RATING>100 JOIN SALESPEOPLE S ON O.SNUM = S.SNUM WHERE O.AMT = (SELECT MAX(AMT) FROM ORDERS WHERE SNUM = S.SNUM);
+------+------------------------+
| ONUM | (O.AMT * S.COMM/100.0) |
+------+------------------------+
| 3005 |             670.858525 |
| 3009 |             171.322998 |
| 3011 |            1187.025586 |
+------+------------------------+
3 rows in set (0.00 sec)


42. Count the customers with ratings above SanJose’s average. 

mysql> SELECT COUNT(CNUM) FROM CUSTOMERS WHERE RATING  IN (SELECT RATING FROM CUSTOMERS WHERE CITY = "SanJose");
+-------------+
| COUNT(CNUM) |
+-------------+
|           4 |
+-------------+
1 row in set (0.00 sec)

43. Find all salespeople that are located in either Barcelona or London. 


mysql> SELECT * FROM SALESPEOPLE WHERE CITY ="Barcelona" OR CITY = "London";

+------+--------+-----------+------+
| SNUM | SNAME  | CITY      | COMM |
+------+--------+-----------+------+
| 1001 | Peel   | London    |   12 |
| 1004 | Motika | London    |   11 |
| 1007 | Rifkin | Barcelona |   15 |
| 1008 | Fran   | London    |   25 |
+------+--------+-----------+------+
4 rows in set (0.00 sec)


OR

mysql> SELECT * FROM SALESPEOPLE WHERE CITY IN ("Barcelona","London");
+------+--------+-----------+------+
| SNUM | SNAME  | CITY      | COMM |
+------+--------+-----------+------+
| 1001 | Peel   | London    |   12 |
| 1004 | Motika | London    |   11 |
| 1007 | Rifkin | Barcelona |   15 |
| 1008 | Fran   | London    |   25 |
+------+--------+-----------+------+
4 rows in set (0.00 sec)



44. Find all salespeople with only one customer. 


mysql> SELECT * FROM CUSTOMERS GROUP BY SNUM HAVING COUNT(CNUM)=1;
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
| 2006 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+
3 rows in set (0.00 sec)




45.Write a query that joins the Customer table to itself to find all pairs or customers served by a single salesperson.

mysql> SELECT C1.CNAME , C2.CNAME, S.SNAME FROM CUSTOMERS C1 JOIN CUSTOMERS
C2 ON C1.SNUM = C2.SNUM AND C1.CNUM<C2.CNUM  JOIN SALESPEOPLE S ON C1.SNUM =
 S.SNUM ;
+---------+---------+--------+
| CNAME   | CNAME   | SNAME  |
+---------+---------+--------+
| Liu     | Grass   | Serres |
| Hoffman | Ciemens | Peel   |
+---------+---------+--------+
2 rows in set (0.00 sec)

46 .  Write a query that will give you all orders for more than $1000.00. 


mysql> SELECT * FROM ORDERS WHERE AMT >1000;
+------+---------+----------+------+------+
| ONUM | AMT     | ODATE    | CNUM | SNUM |
+------+---------+----------+------+------+
| 3002 | 1900.10 | 10/03/90 | 2007 | 1004 |
| 3005 | 5160.45 | 10/03/90 | 2003 | 1002 |
| 3006 | 1098.16 | 10/03/90 | 2008 | 1007 |
| 3009 | 1713.23 | 10/04/90 | 2002 | 1003 |
| 3008 | 4723.00 | 10/05/90 | 2006 | 1001 |
| 3010 | 1309.95 | 10/06/90 | 2004 | 1002 |
| 3011 | 9891.88 | 10/06/90 | 2006 | 1001 |
+------+---------+----------+------+------+
7 rows in set (0.00 sec)

47. Write a query that lists each order number followed by the name of the customer who made that order. 


mysql> SELECT O.ONUM, O.AMT,O.ODATE,C.CNAME FROM ORDERS O INNER JOIN CUSTOMERS C ON C.CNUM = O.CNUM;
+------+---------+----------+----------+
| ONUM | AMT     | ODATE    | CNAME    |
+------+---------+----------+----------+
| 3003 |  767.19 | 10/03/90 | Hoffman  |
| 3002 | 1900.10 | 10/03/90 | Pereira  |
| 3005 | 5160.45 | 10/03/90 | Liu      |
| 3009 | 1713.23 | 10/04/90 | Giovanni |
| 3008 | 4723.00 | 10/05/90 | Ciemens  |
| 3008 | 4723.00 | 10/05/90 | Cisneros |
| 3010 | 1309.95 | 10/06/90 | Grass    |
| 3011 | 9891.88 | 10/06/90 | Ciemens  |
| 3011 | 9891.88 | 10/06/90 | Cisneros |
| 3007 |   75.75 | 10/04/90 | Grass    |
+------+---------+----------+----------+
10 rows in set (0.00 sec)

48. Write a query that selects all the customers whose ratings are equal to or greater than ANY(in the SQL sense) of ‘Serres’.


mysql> SELECT * FROM CUSTOMERS WHERE RATING >= ANY (SELECT RATING FROM CUSTOMERS WHERE SNUM IN (SELECT SNUM FROM SALESPEOPLE WHERE SNAME = "Serres"));
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2006 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+
4 rows in set (0.00 sec)


49. Write two queries that will produce all orders taken on October 3 or October 4. 
mysql> SELECT * FROM ORDERS WHERE ODATE = "10/03/90" OR ODATE = "10/04/90";
+------+---------+----------+------+------+
| ONUM | AMT     | ODATE    | CNUM | SNUM |
+------+---------+----------+------+------+
| 3001 |   18.69 | 10/03/90 | 2008 | 1007 |
| 3003 |  767.19 | 10/03/90 | 2001 | 1001 |
| 3002 | 1900.10 | 10/03/90 | 2007 | 1004 |
| 3005 | 5160.45 | 10/03/90 | 2003 | 1002 |
| 3006 | 1098.16 | 10/03/90 | 2008 | 1007 |
| 3009 | 1713.23 | 10/04/90 | 2002 | 1003 |
| 3007 |   75.75 | 10/04/90 | 2004 | 1002 |
+------+---------+----------+------+------+
7 rows in set (0.00 sec)


OR

mysql> SELECT * FROM ORDERS WHERE ODATE IN ("10/03/90","10/04/90");
+------+---------+----------+------+------+
| ONUM | AMT     | ODATE    | CNUM | SNUM |
+------+---------+----------+------+------+
| 3001 |   18.69 | 10/03/90 | 2008 | 1007 |
| 3003 |  767.19 | 10/03/90 | 2001 | 1001 |
| 3002 | 1900.10 | 10/03/90 | 2007 | 1004 |
| 3005 | 5160.45 | 10/03/90 | 2003 | 1002 |
| 3006 | 1098.16 | 10/03/90 | 2008 | 1007 |
| 3009 | 1713.23 | 10/04/90 | 2002 | 1003 |
| 3007 |   75.75 | 10/04/90 | 2004 | 1002 |
+------+---------+----------+------+------+
7 rows in set (0.00 sec)



50.Find only those customers whose ratings are higher than every customer in Rome. 


mysql> SELECT * FROM CUSTOMERS WHERE RATING  > (SELECT MAX(RATING) FROM CUST
OMERS WHERE CITY="Rome");
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2006 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+
2 rows in set (0.00 sec)


51. Write a query on the Customers table whose output will exclude all customers with a rating&lt;= 100.00, unless they are located in Rome.

mysql> SELECT * FROM CUSTOMERS WHERE RATING !=100 OR CITY="Rome";
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2006 | Cisneros | SanJose |    300 | 1007 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
+------+----------+---------+--------+------+
5 rows in set (0.00 sec)

52. Find all rows from the customer’s table for which the salesperson number is 1001. 


mysql> SELECT * FROM CUSTOMERS WHERE SNUM = 1001;
+------+---------+--------+--------+------+
| CNUM | CNAME   | CITY   | RATING | SNUM |
+------+---------+--------+--------+------+
| 2001 | Hoffman | London |    100 | 1001 |
| 2006 | Ciemens | London |    100 | 1001 |
+------+---------+--------+--------+------+
2 rows in set (0.00 sec)


OR

mysql> SELECT C.* FROM CUSTOMERS AS C LEFT JOIN SALESPEOPLE AS S ON S.SNUM =
 C.SNUM WHERE S.SNUM = 1001;
+------+---------+--------+--------+------+
| CNUM | CNAME   | CITY   | RATING | SNUM |
+------+---------+--------+--------+------+
| 2001 | Hoffman | London |    100 | 1001 |
| 2006 | Ciemens | London |    100 | 1001 |
+------+---------+--------+--------+------+
2 rows in set (0.00 sec)




53.  Find the total amount in orders for each salesperson where their total of amounts are greater than the amount of the largest order in the table.


mysql> SELECT SUM(AMT) FROM ORDERS GROUP BY SNUM HAVING SUM(AMT)>(SELECT MAX(AMT) FROM ORDERS);
+----------+
| SUM(AMT) |
+----------+
| 15382.07 |
+----------+
1 row in set (0.00 sec)


54.Write a query that selects all orders save those with zeroes or NULL in the amount file. 

mysql> SELECT * FROM Orders WHERE AMT = 0 OR NULL;
Empty set
0 rows in set (0.00 sec)

55. Produce all combinations of salespeople and customer names such that the former precedes the latter alphabetically, and the latter has a rating of less than 200. 


mysql> SELECT S.SNUM,S.SNAME,C.CNUM,CNAME FROM CUSTOMERS C JOIN SALESPEOPLE S ON S.SNUM = C.SNUM WHERE C.RATING<200 AND S.SNAME <C.CNAME ;
+------+--------+------+---------+
| SNUM | SNAME  | CNUM | CNAME   |
+------+--------+------+---------+
| 1004 | Motika | 2007 | Pereira |
+------+--------+------+---------+
1 row in set (0.00 sec)



56.  Find all salespeople name and commission. 


mysql> SELECT SNAME AS "NAME", COMM AS "COMMISSION" FROM SALESPEOPLE;
+---------+------------+
| NAME    | COMMISSION |
+---------+------------+
| Peel    |         12 |
| Serres  |         13 |
| Motika  |         11 |
| Rifkin  |         15 |
| AxelRod |         10 |
| Fran    |         25 |
+---------+------------+
6 rows in set (0.00 sec)

57. Write a query that produces the names and cities of all customers with the same rating as Hoffman. Write the query using Hoffman’s cnum rather than his rating, so that it would still be usable if his rating is changed. 


mysql> SELECT CNAME AS "NAME", CITY FROM CUSTOMERS WHERE RATING = (SELECT RATING FROM CUSTOMERS WHERE CNAME="Hoffman");
+---------+--------+
| NAME    | CITY   |
+---------+--------+
| Hoffman | London |
| Ciemens | London |
| Pereira | Rome   |
+---------+--------+
3 rows in set (0.00 sec)

58. Find all salespeople for whom there are customers that follow them in alphabetical order.



mysql> SELECT S.SNAME, C.CNAME FROM CUSTOMERS C INNER JOIN SALESPEOPLE S ON C.SNUM = S.SNUM GROUP BY S.SNAME,C.CNAME;
+---------+----------+
| SNAME   | CNAME    |
+---------+----------+
| AxelRod | Giovanni |
| Motika  | Pereira  |
| Peel    | Ciemens  |
| Peel    | Hoffman  |
| Rifkin  | Cisneros |
| Serres  | Grass    |
| Serres  | Liu      |
+---------+----------+
7 rows in set (0.00 sec)


OR

mysql> SELECT SNAME,CNAME FROM SALESPEOPLE, CUSTOMERS WHERE SALESPEOPLE.SNUM
 = CUSTOMERS.SNUM;
+---------+----------+
| SNAME   | CNAME    |
+---------+----------+
| Peel    | Hoffman  |
| AxelRod | Giovanni |
| Serres  | Liu      |
| Serres  | Grass    |
| Peel    | Ciemens  |
| Rifkin  | Cisneros |
| Motika  | Pereira  |
+---------+----------+
7 rows in set (0.00 sec)



59.Write a query that produces the names and ratings of all customers who have average orders. 


mysql> SELECT C.CNAME,C.RATING FROM CUSTOMERS C INNER JOIN ORDERS O ON C.CNUM = O.CNUM WHERE O.AMT = (SELECT AVG(AMT) FROM ORDERS);
Empty set (0.00 sec)


OR 

SELECT CNAME,RATING FROM CUSTOMERS WHERE CNUM = (SELECT CNUM FROM ORDERS WHERE AMT IN (SELECT AVG(AMT) FROM ORDERS));
Empty set (0.01 sec)



60.  Find the SUM of all Amounts from the orders table.


mysql> SELECT SUM(AMT) FROM ORDERS;
+----------+
| SUM(AMT) |
+----------+
| 26658.40 |
+----------+
1 row in set (0.00 sec)


61. Write a SELECT command that produces the order number, amount, and the date from rows in the order table.


mysql> SELECT ONUM,AMT,ODATE FROM ORDERS;
+------+---------+----------+
| ONUM | AMT     | ODATE    |
+------+---------+----------+
| 3001 |   18.69 | 10/03/90 |
| 3003 |  767.19 | 10/03/90 |
| 3002 | 1900.10 | 10/03/90 |
| 3005 | 5160.45 | 10/03/90 |
| 3006 | 1098.16 | 10/03/90 |
| 3009 | 1713.23 | 10/04/90 |
| 3008 | 4723.00 | 10/05/90 |
| 3010 | 1309.95 | 10/06/90 |
| 3011 | 9891.88 | 10/06/90 |
| 3007 |   75.75 | 10/04/90 |
+------+---------+----------+
10 rows in set (0.00 sec)


62. Count the number of non NULL rating fields in the Customers table (including repeats). 

r 'NOT NULL' at line 1
mysql> SELECT COUNT(*) FROM CUSTOMERS WHERE RATING IS NOT NULL;
+----------+
| COUNT(*) |
+----------+
|        7 |
+----------+
1 row in set (0.00 sec)


63. Write a query that gives the names of both the salesperson and the customer for each order after the order number.


mysql> SELECT C.CNAME,S.SNAME,O.ONUM FROM CUSTOMERS C JOIN SALESPEOPLE S ON S.SNUM = C.SNUM JOIN ORDERS O ON O.CNUM = C.CNUM ORDER BY O.ONUM;
+----------+---------+------+
| CNAME    | SNAME   | ONUM |
+----------+---------+------+
| Pereira  | Motika  | 3002 |
| Hoffman  | Peel    | 3003 |
| Liu      | Serres  | 3005 |
| Grass    | Serres  | 3007 |
| Cisneros | Rifkin  | 3008 |
| Ciemens  | Peel    | 3008 |
| Giovanni | AxelRod | 3009 |
| Grass    | Serres  | 3010 |
| Cisneros | Rifkin  | 3011 |
| Ciemens  | Peel    | 3011 |
+----------+---------+------+
10 rows in set (0.00 sec)

64. List the commissions of all salespeople servicing customers in London. 


mysql> SELECT COMM FROM SALESPEOPLE WHERE CITY = "London";
+------+
| COMM |
+------+
|   12 |
|   11 |
|   25 |
+------+
3 rows in set (0.00 sec)


65.Write a query using ANY or ALL that will find all salespeople who have no customers located in their city. 


mysql> SELECT * FROM SALESPEOPLE WHERE SALESPEOPLE.CITY <> ALL (SELECT CUSTOMERS.CITY FROM CUSTOMERS);
+------+---------+-----------+------+
| SNUM | SNAME   | CITY      | COMM |
+------+---------+-----------+------+
| 1007 | Rifkin  | Barcelona |   15 |
| 1003 | AxelRod | New York  |   10 |
+------+---------+-----------+------+
2 rows in set (0.01 sec)


66. Write a query using the EXISTS operator that selects all salespeople with customers located in their cities who are not assigned to them.



mysql> SELECT * FROM SALESPEOPLE WHERE EXISTS (SELECT * FROM CUSTOMERS C WHERE C.CITY = SALESPEOPLE.CITY AND C.SNUM !=SALESPEOPLE.SNUM);
+------+--------+---------+------+
| SNUM | SNAME  | CITY    | COMM |
+------+--------+---------+------+
| 1002 | Serres | SanJose |   13 |
| 1004 | Motika | London  |   11 |
| 1008 | Fran   | London  |   25 |
+------+--------+---------+------+
3 rows in set (0.00 sec)



67. Write a query that selects all customers serviced by Peel or Motika. (Hint: The snum field relates the 2 tables to one another.)

mysql> SELECT * FROM CUSTOMERS C WHERE SNUM IN (SELECT SNUM FROM SALESPEOPLE S WHERE S.SNAME = "Peel" OR S.SNAME= "Motika");
+------+---------+--------+--------+------+
| CNUM | CNAME   | CITY   | RATING | SNUM |
+------+---------+--------+--------+------+
| 2001 | Hoffman | London |    100 | 1001 |
| 2006 | Ciemens | London |    100 | 1001 |
| 2007 | Pereira | Rome   |    100 | 1004 |
+------+---------+--------+--------+------+
3 rows in set (0.00 sec)

// using join

mysql> SELECT C.* FROM CUSTOMERS C INNER JOIN SALESPEOPLE S ON S.SNUM = C.SNUM WHERE S.SNAME = "Peel" OR S.SNAME="Motika";
+------+---------+--------+--------+------+
| CNUM | CNAME   | CITY   | RATING | SNUM |
+------+---------+--------+--------+------+
| 2001 | Hoffman | London |    100 | 1001 |
| 2006 | Ciemens | London |    100 | 1001 |
| 2007 | Pereira | Rome   |    100 | 1004 |
+------+---------+--------+--------+------+
3 rows in set (0.00 sec)



68. Count the number of salespeople registering orders for each day. (If a salesperson has more than one order on a given day, he or she should be counted only once.) 


mysql> SELECT COUNT(DISTINCT(SNUM)) FROM ORDERS GROUP BY ODATE;
+-----------------------+
| COUNT(DISTINCT(SNUM)) |
+-----------------------+
|                     4 |
|                     2 |
|                     1 |
|                     2 |
+-----------------------+
4 rows in set (0.00 sec)

69.  Find all orders attributed to salespeople who live in London. 


mysql> SELECT * FROM ORDERS WHERE SNUM IN (SELECT SNUM FROM SALESPEOPLE WHERE CITY = "London");
+------+---------+----------+------+------+
| ONUM | AMT     | ODATE    | CNUM | SNUM |
+------+---------+----------+------+------+
| 3003 |  767.19 | 10/03/90 | 2001 | 1001 |
| 3002 | 1900.10 | 10/03/90 | 2007 | 1004 |
| 3008 | 4723.00 | 10/05/90 | 2006 | 1001 |
| 3011 | 9891.88 | 10/06/90 | 2006 | 1001 |
+------+---------+----------+------+------+
4 rows in set (0.00 sec)


// using join 


mysql> SELECT O.* FROM ORDERS O INNER JOIN SALESPEOPLE S ON S.SNUM = O.SNUM WHERE S.CITY="London";
+------+---------+----------+------+------+
| ONUM | AMT     | ODATE    | CNUM | SNUM |
+------+---------+----------+------+------+
| 3003 |  767.19 | 10/03/90 | 2001 | 1001 |
| 3002 | 1900.10 | 10/03/90 | 2007 | 1004 |
| 3008 | 4723.00 | 10/05/90 | 2006 | 1001 |
| 3011 | 9891.88 | 10/06/90 | 2006 | 1001 |
+------+---------+----------+------+------+
4 rows in set (0.00 sec)


70. Find all orders by customers not located in the same cities as their salespeople.




mysql> SELECT * FROM ORDERS WHERE CNUM IN (SELECT CNUM FROM CUSTOMERS WHERE SNUM IN (SELECT SNUM FROM SALESPEOPLE WHERE SALESPEOPLE.CITY!=CUSTOMERS.CITY));
+------+---------+----------+------+------+
| ONUM | AMT     | ODATE    | CNUM | SNUM |
+------+---------+----------+------+------+
| 3002 | 1900.10 | 10/03/90 | 2007 | 1004 |
| 3009 | 1713.23 | 10/04/90 | 2002 | 1003 |
| 3008 | 4723.00 | 10/05/90 | 2006 | 1001 |
| 3010 | 1309.95 | 10/06/90 | 2004 | 1002 |
| 3011 | 9891.88 | 10/06/90 | 2006 | 1001 |
| 3007 |   75.75 | 10/04/90 | 2004 | 1002 |
+------+---------+----------+------+------+
6 rows in set (0.00 sec)


// USING JOINS
mysql> SELECT O.* FROM ORDERS O JOIN CUSTOMERS C ON C.CNUM = O.CNUM JOIN SALESPEOPLE S ON C.SNUM = S.SNUM WHERE S.CITY !=C.CITY;
+------+---------+----------+------+------+
| ONUM | AMT     | ODATE    | CNUM | SNUM |
+------+---------+----------+------+------+
| 3002 | 1900.10 | 10/03/90 | 2007 | 1004 |
| 3009 | 1713.23 | 10/04/90 | 2002 | 1003 |
| 3008 | 4723.00 | 10/05/90 | 2006 | 1001 |
| 3010 | 1309.95 | 10/06/90 | 2004 | 1002 |
| 3011 | 9891.88 | 10/06/90 | 2006 | 1001 |
| 3007 |   75.75 | 10/04/90 | 2004 | 1002 |
+------+---------+----------+------+------+
6 rows in set (0.00 sec)

71. Find all salespeople who have customers with more than one current order. 

mysql> SELECT S.* FROM ORDERS O JOIN CUSTOMERS C ON C.CNUM = O.CNUM JOIN SALESPEOPLE S ON S.SNUM = C.SNUM GROUP BY O.SNUM HAVING COUNT(DISTINCT(C.CNUM))>1;
+------+--------+---------+------+
| SNUM | SNAME  | CITY    | COMM |
+------+--------+---------+------+
| 1001 | Peel   | London  |   12 |
| 1002 | Serres | SanJose |   13 |
+------+--------+---------+------+
2 rows in set (0.00 sec)

72. Write a query that extracts from the customer’s table every customer assigned to a salesperson, who is currently having at least one another customer(besides the customer being selected) with orders in the Orders Table. 


mysql> SELECT C.* FROM CUSTOMERS C WHERE CNUM IN (SELECT CNUM FROM ORDERS O GROUP BY O.CNUM HAVING COUNT(CNUM)>1);
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2006 | Ciemens  | London  |    100 | 1001 |
| 2006 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+
3 rows in set (0.00 sec)

// USING JOINS
mysql> SELECT C.* FROM CUSTOMERS C INNER JOIN ORDERS O ON O.CNUM = C.CNUM GROUP BY O.CNUM HAVING COUNT(O.CNUM)>1;
+------+---------+--------+--------+------+
| CNUM | CNAME   | CITY   | RATING | SNUM |
+------+---------+--------+--------+------+
| 2004 | Grass   | Berlin |    300 | 1002 |
| 2006 | Ciemens | London |    100 | 1001 |
+------+---------+--------+--------+------+
2 rows in set (0.00 sec)


73. Write a query on the customer’s table that will find the highest rating in each city. Put the output in this form: for the city (city), the highest rating is (rating). 

 
mysql> SELECT CITY AS "For the city",MAX(RATING) AS "The highest rating is (
rating)" FROM CUSTOMERS GROUP BY CITY;
+--------------+--------------------------------+
| For the city | The highest rating is (rating) |
+--------------+--------------------------------+
| Berlin       |                            300 |
| London       |                            100 |
| Rome         |                            200 |
| SanJose      |                            300 |
+--------------+--------------------------------+
4 rows in set (0.00 sec)


74. Write a query that will produce the snum values of all salespeople with orders, having amt greater than 1000 in the Orders Table(without repeats). 


mysql> SELECT SNUM,ONUM FROM ORDERS WHERE AMT >1000 GROUP BY SNUM;
+------+------+
| SNUM | ONUM |
+------+------+
| 1001 | 3008 |
| 1002 | 3005 |
| 1003 | 3009 |
| 1004 | 3002 |
| 1007 | 3006 |
+------+------+
5 rows in set (0.00 sec)

75. Write a query that lists customers in a descending order of rating. Output the rating field first, followed by the customer’s names and numbers


mysql> SELECT RATING,CNAME,CNUM FROM CUSTOMERS ORDER BY RATING DESC;
+--------+----------+------+
| RATING | CNAME    | CNUM |
+--------+----------+------+
|    300 | Grass    | 2004 |
|    300 | Cisneros | 2006 |
|    200 | Giovanni | 2002 |
|    200 | Liu      | 2003 |
|    100 | Hoffman  | 2001 |
|    100 | Ciemens  | 2006 |
|    100 | Pereira  | 2007 |
+--------+----------+------+
7 rows in set (0.00 sec)

76. Find the average commission for salespeople in London. 


mysql> SELECT AVG(COMM) FROM SALESPEOPLE WHERE CITY = "London";
+-----------+
| AVG(COMM) |
+-----------+
|   16.0000 |
+-----------+
1 row in set (0.00 sec)

77. Find all orders credited to the same salesperson who services Hoffman.(cnum 2001).


mysql> SELECT * FROM ORDERS WHERE CNUM = 2001;
+------+--------+----------+------+------+
| ONUM | AMT    | ODATE    | CNUM | SNUM |
+------+--------+----------+------+------+
| 3003 | 767.19 | 10/03/90 | 2001 | 1001 |
+------+--------+----------+------+------+
1 row in set (0.00 sec)

78. Find all salespeople whose commission is in between 0.10 and 0.12(both inclusive). 


mysql> SELECT * FROM SALESPEOPLE WHERE COMM BETWEEN 10 AND 12;
+------+---------+----------+------+
| SNUM | SNAME   | CITY     | COMM |
+------+---------+----------+------+
| 1001 | Peel    | London   |   12 |
| 1004 | Motika  | London   |   11 |
| 1003 | AxelRod | New York |   10 |
+------+---------+----------+------+
3 rows in set (0.00 sec)

79. Write a query that will give you the names and cities of all salespeople in London with a commission above 0.10.


mysql> SELECT SNAME AS "Name", CITY FROM SALESPEOPLE WHERE CITY = "London" and COMM>10;
+--------+--------+
| Name   | CITY   |
+--------+--------+
| Peel   | London |
| Motika | London |
| Fran   | London |
+--------+--------+
3 rows in set (0.00 sec)

80. Write a query that selects each customer’s smallest order. 


mysql> SELECT MIN(AMT), CNUM FROM ORDERS GROUP BY CNUM;
+----------+------+
| MIN(AMT) | CNUM |
+----------+------+
|   767.19 | 2001 |
|  1713.23 | 2002 |
|  5160.45 | 2003 |
|    75.75 | 2004 |
|  4723.00 | 2006 |
|  1900.10 | 2007 |
|    18.69 | 2008 |
+----------+------+
7 rows in set (0.00 sec)

81. Write a query that selects the first customer in alphabetical order whose name begins with ‘G’. 


mysql> SELECT * FROM CUSTOMERS WHERE CNAME LIKE "G%";
+------+----------+--------+--------+------+
| CNUM | CNAME    | CITY   | RATING | SNUM |
+------+----------+--------+--------+------+
| 2002 | Giovanni | Rome   |    200 | 1003 |
| 2004 | Grass    | Berlin |    300 | 1002 |
+------+----------+--------+--------+------+
2 rows in set (0.00 sec)

82. Write a query that counts the number of different non NULL city values in the customers table. 

mysql> SELECT COUNT(DISTINCT(CITY)) AS "Number of cities" FROM CUSTOMERS TABLES WHERE CITY IS NOT NULL;
+------------------+
| Number of cities |
+------------------+
|                4 |
+------------------+
1 row in set (0.00 sec)


83.Find the average amount from the Orders Table.


mysql> SELECT AVG(AMT) FROM ORDERS;
+-------------+
| AVG(AMT)    |
+-------------+
| 2665.840002 |
+-------------+
1 row in set (0.00 sec)


84.Find all customers who are not located in SanJose and whose rating is above 200.

mysql> SELECT * FROM CUSTOMERS WHERE CITY !="SanJose" AND RATING >200;
+------+-------+--------+--------+------+
| CNUM | CNAME | CITY   | RATING | SNUM |
+------+-------+--------+--------+------+
| 2004 | Grass | Berlin |    300 | 1002 |
+------+-------+--------+--------+------+
1 row in set (0.00 sec)

85.Give a simpler way to write this query.SELECT snum, sname, city, comm FROM salespeople WHERE (comm > + 0.12 OR comm &lt; 0.14);


mysql> SELECT * FROM SALESPEOPLE WHERE COMM BETWEEN 12 AND 14;
+------+--------+---------+------+
| SNUM | SNAME  | CITY    | COMM |
+------+--------+---------+------+
| 1001 | Peel   | London  |   12 |
| 1002 | Serres | SanJose |   13 |
+------+--------+---------+------+
2 rows in set (0.00 sec)


86. Which salespersons attend to customers not in the city they have been assigned to? 


mysql> SELECT S.* FROM SALESPEOPLE S INNER JOIN CUSTOMERS C ON C.SNUM = S.SN
UM AND C.CITY != S.CITY;
+------+---------+-----------+------+
| SNUM | SNAME   | CITY      | COMM |
+------+---------+-----------+------+
| 1003 | AxelRod | New York  |   10 |
| 1002 | Serres  | SanJose   |   13 |
| 1007 | Rifkin  | Barcelona |   15 |
| 1004 | Motika  | London    |   11 |
+------+---------+-----------+------+
4 rows in set (0.00 sec)


87. Which salespeople get commission greater than 0.11 are serving customers rated less than 250? 

mysql> SELECT S.* FROM SALESPEOPLE S INNER JOIN CUSTOMERS C ON C.SNUM = S.SNUM WHERE S.COMM>11 AND C.RATING<250;
+------+--------+---------+------+
| SNUM | SNAME  | CITY    | COMM |
+------+--------+---------+------+
| 1001 | Peel   | London  |   12 |
| 1002 | Serres | SanJose |   13 |
| 1001 | Peel   | London  |   12 |
+------+--------+---------+------+
3 rows in set (0.00 sec)

88. Which salespeople have been assigned to the same city but get different commission percentages? 


mysql> SELECT S.SNAME, S1.SNAME, S.CITY,S1.CITY FROM SALESPEOPLE S JOIN SALESPEOPLE S1 ON S.CITY = S1.CITY AND S.COMM !=S1.COMM AND S.SNUM<S1.SNUM;
+--------+--------+--------+--------+
| SNAME  | SNAME  | CITY   | CITY   |
+--------+--------+--------+--------+
| Peel   | Motika | London | London |
| Peel   | Fran   | London | London |
| Motika | Fran   | London | London |
+--------+--------+--------+--------+
3 rows in set (0.00 sec)

89. Which salesperson has earned the maximum commission? 


mysql> SELECT * FROM SALESPEOPLE ORDER BY COMM DESC LIMIT 1;
+------+-------+--------+------+
| SNUM | SNAME | CITY   | COMM |
+------+-------+--------+------+
| 1008 | Fran  | London |   25 |
+------+-------+--------+------+
1 row in set (0.00 sec)


90. Does the customer who has placed the maximum number of orders have the maximum rating? 

mysql> SELECT * FROM CUSTOMERS WHERE CNUM IN  (SELECT CNUM FROM ORDERS GROUP BY CNUM HAVING COUNT(AMT) =  (SELECT COUNT(AMT) FROM ORDERS GROUP BY CNUM ORDER BY COUNT(AMT) DESC LIMIT 1) ORDER BY COUNT(AMT) DESC) AND RATING = (SELECT MAX(RATING) FROM CUSTOMERS);
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2006 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+
2 rows in set (0.00 sec)


91. List all customers in descending order of customer rating. 


mysql> SELECT * FROM CUSTOMERS ORDER BY RATING DESC;
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2006 | Cisneros | SanJose |    300 | 1007 |
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2001 | Hoffman  | London  |    100 | 1001 |
| 2006 | Ciemens  | London  |    100 | 1001 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
+------+----------+---------+--------+------+
7 rows in set (0.00 sec)


92. On which days has Hoffman placed orders? 

 
mysql> SELECT ODATE FROM ORDERS WHERE CNUM = (SELECT CNUM FROM CUSTOMERS WHERE CNAME = "Hoffman");
+----------+
| ODATE    |
+----------+
| 10/03/90 |
+----------+
1 row in set (0.00 sec)


// using joins


mysql> SELECT O.ODATE FROM ORDERS O INNER JOIN CUSTOMERS C ON C.CNUM = O.CNUM WHERE C.CNAME = "Hoffman";
+----------+
| ODATE    |
+----------+
| 10/03/90 |
+----------+
1 row in set (0.00 sec)


93. Which salesmen have no orders between 10/03/1990 and 10/05/1990? 


mysql> SELECT * FROM ORDERS WHERE ODATE NOT BETWEEN '10/03/1990' AND '10/05/90';
+------+---------+----------+------+------+
| ONUM | AMT     | ODATE    | CNUM | SNUM |
+------+---------+----------+------+------+
| 3010 | 1309.95 | 10/06/90 | 2004 | 1002 |
| 3011 | 9891.88 | 10/06/90 | 2006 | 1001 |
+------+---------+----------+------+------+
2 rows in set (0.00 sec)

94. How many salespersons have succeeded in getting orders? 


mysql> SELECT COUNT(DISTINCT(SNUM)) FROM ORDERS;
+-----------------------+
| COUNT(DISTINCT(SNUM)) |
+-----------------------+
|                     5 |
+-----------------------+
1 row in set (0.00 sec)


95. How many customers have placed orders? 

mysql> SELECT COUNT(DISTINCT(CNUM)) FROM ORDERS;
+-----------------------+
| COUNT(DISTINCT(CNUM)) |
+-----------------------+
|                     7 |
+-----------------------+
1 row in set (0.00 sec)


96.  On which date has each salesman booked an order of maximum value? 


mysql> SELECT ODATE, SNUM, MAX(AMT) FROM ORDERS GROUP BY SNUM;
+----------+------+----------+
| ODATE    | SNUM | MAX(AMT) |
+----------+------+----------+
| 10/03/90 | 1001 |  9891.88 |
| 10/03/90 | 1002 |  5160.45 |
| 10/04/90 | 1003 |  1713.23 |
| 10/03/90 | 1004 |  1900.10 |
| 10/03/90 | 1007 |  1098.16 |
+----------+------+----------+
5 rows in set (0.00 sec)

97. Who is the most successful salesperson? 


mysql> SELECT SNUM,SUM(AMT) FROM ORDERS GROUP BY SNUM ORDER BY SUM(AMT) DESC
 LIMIT 1;
+------+----------+
| SNUM | SUM(AMT) |
+------+----------+
| 1001 | 15382.07 |
+------+----------+
1 row in set (0.00 sec)


98. Which customers have the same rating? 

mysql> SELECT C.RATING, C.CNAME, C1.CNAME FROM CUSTOMERS C JOIN CUSTOMERS C1
 ON C.RATING = C1.RATING WHERE C.CNUM !=C1.CNUM;
+--------+----------+----------+
| RATING | CNAME    | CNAME    |
+--------+----------+----------+
|    100 | Ciemens  | Hoffman  |
|    100 | Pereira  | Hoffman  |
|    200 | Liu      | Giovanni |
|    200 | Giovanni | Liu      |
|    300 | Cisneros | Grass    |
|    100 | Hoffman  | Ciemens  |
|    100 | Pereira  | Ciemens  |
|    300 | Grass    | Cisneros |
|    100 | Hoffman  | Pereira  |
|    100 | Ciemens  | Pereira  |
+--------+----------+----------+
10 rows in set (0.00 sec)


99.  Find all orders greater than the average for October 4th. 

mysql> SELECT * FROM ORDERS WHERE AMT > (SELECT AVG(AMT) FROM ORDERS WHERE O
DATE = "10/04/90");
+------+---------+----------+------+------+
| ONUM | AMT     | ODATE    | CNUM | SNUM |
+------+---------+----------+------+------+
| 3002 | 1900.10 | 10/03/90 | 2007 | 1004 |
| 3005 | 5160.45 | 10/03/90 | 2003 | 1002 |
| 3006 | 1098.16 | 10/03/90 | 2008 | 1007 |
| 3009 | 1713.23 | 10/04/90 | 2002 | 1003 |
| 3008 | 4723.00 | 10/05/90 | 2006 | 1001 |
| 3010 | 1309.95 | 10/06/90 | 2004 | 1002 |
| 3011 | 9891.88 | 10/06/90 | 2006 | 1001 |
+------+---------+----------+------+------+
7 rows in set (0.00 sec)


100. List all customers with ratings above Grass’s average. 

mysql> SELECT * FROM CUSTOMERS WHERE RATING > (SELECT RATING FROM CUSTOMERS WHERE CNAME = "Grass");
Empty set (0.00 sec)


101.  Which customers have above average orders? 


mysql> SELECT * FROM ORDERS WHERE AMT> (SELECT AVG(AMT) FROM ORDERS );
+------+---------+----------+------+------+
| ONUM | AMT     | ODATE    | CNUM | SNUM |
+------+---------+----------+------+------+
| 3005 | 5160.45 | 10/03/90 | 2003 | 1002 |
| 3008 | 4723.00 | 10/05/90 | 2006 | 1001 |
| 3011 | 9891.88 | 10/06/90 | 2006 | 1001 |
+------+---------+----------+------+------+
3 rows in set (0.00 sec)

102. Select the total amount in orders for each salesperson for which the total is greater than the amount of the largest order in the table.


mysql> SELECT SNUM,SUM(AMT) FROM ORDERS GROUP BY SNUM HAVING SUM(AMT)> (SELE
CT MAX(AMT) FROM ORDERS);
+------+----------+
| SNUM | SUM(AMT) |
+------+----------+
| 1001 | 15382.07 |
+------+----------+
1 row in set (0.00 sec)


103. Give names and numbers of all salespersons that have more than one customer? 

mysql> SELECT SNAME, SNUM FROM SALESPEOPLE WHERE SNUM IN  (SELECT SNUM FROM
CUSTOMERS GROUP BY SNUM HAVING COUNT(SNUM)>1);
+--------+------+
| SNAME  | SNUM |
+--------+------+
| Peel   | 1001 |
| Serres | 1002 |
+--------+------+
2 rows in set (0.00 sec)


104. Select all salespeople by name and number who have customers in their city whom they don’t service. 

// USING JOIN


mysql> SELECT DISTINCT(S.SNAME), S.SNUM FROM SALESPEOPLE S INNER JOIN CUSTOM
ERS C ON C.CITY = S.CITY AND C.SNUM != S.SNUM;
+--------+------+
| SNAME  | SNUM |
+--------+------+
| Motika | 1004 |
| Fran   | 1008 |
| Serres | 1002 |
+--------+------+
3 rows in set (0.00 sec)


// WITHOUT JOIN 

ERROR 1052 (23000): Column 'SNUM' in field list is ambiguous
mysql> SELECT DISTINCT(SNAME),S.SNUM FROM CUSTOMERS C, SALESPEOPLE S WHERE C
.CITY = S.CITY AND C.SNUM!=S.SNUM;
+--------+------+
| SNAME  | SNUM |
+--------+------+
| Motika | 1004 |
| Fran   | 1008 |
| Serres | 1002 |
+--------+------+
3 rows in set (0.00 sec)


105. Does the total amount in orders by customer in Rome and London, exceed the commission paid to salesperson in London, and New York by more than 5 times? 

SELECT IF(  ( (SELECT (ROUND(Sum(AMT)) /5)  FROM Orders    WHERE    CNUM IN(SELECT CNUM FROM Customers    WHERE  City IN("ROME","LONDON") )  )   >   (SELECT ROUND(ROUND(SUM(AMT)) * COMM /100)    FROM Orders INNER JOIN Salespeople   ON Salespeople.SNUM =Orders.SNUM    WHERE  COMM IN(SELECT COMM FROM Salespeople  WHERE CITY in("London","NewYork")  )) ) , "YES","NO") as "CHECK THE AMOUNT " ;
+-------------------+
| CHECK THE AMOUNT  |
+-------------------+
| YES               |
+-------------------+
1 row in set (0.00 sec)


106. Which are the date, order number, amt and city for each salesperson (by name) for themaximum order he has obtained? 

mysql> SELECT O.ODATE,O.ONUM,MAX(O.AMT),C.CITY,S.SNAME FROM ORDERS O INNER J
OIN CUSTOMERS C ON C.SNUM = O.SNUM INNER JOIN SALESPEOPLE S ON C.SNUM = S.SN
UM GROUP BY O.SNUM;
+----------+------+------------+---------+---------+
| ODATE    | ONUM | MAX(O.AMT) | CITY    | SNAME   |
+----------+------+------------+---------+---------+
| 10/03/90 | 3003 |    9891.88 | London  | Peel    |
| 10/03/90 | 3005 |    5160.45 | SanJose | Serres  |
| 10/04/90 | 3009 |    1713.23 | Rome    | AxelRod |
| 10/03/90 | 3002 |    1900.10 | Rome    | Motika  |
| 10/03/90 | 3001 |    1098.16 | SanJose | Rifkin  |
+----------+------+------------+---------+---------+
5 rows in set (0.00 sec)


107 . Which salesperson is having lowest commission? 

mysql> SELECT SNAME,MIN(COMM) FROM SALESPEOPLE;
+-------+-----------+
| SNAME | MIN(COMM) |
+-------+-----------+
| Peel  |        10 |
+-------+-----------+
1 row in set (0.00 sec)





