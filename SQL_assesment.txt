CREATE TABLE Saleseople
(SNUM INT PRIMARY KEY,
 SNAME VARCHAR(20),
 CITY VARCHAR(20),
 COMM INT
);

INSERT INTO Salespeople(SNUM,SNAME,CITY,COMM)VALUES(1001,'Peel','London',12);
INSERT INTO Salespeople(SNUM,SNAME,CITY,COMM)VALUES(1002,'Serres','SanJose',13);
INSERT INTO Salespeople(SNUM,SNAME,CITY,COMM)VALUES(1004,'Motika','London',11);
INSERT INTO Salespeople(SNUM,SNAME,CITY,COMM)VALUES(1007,'Rifkin','Barcelona',15);
INSERT INTO Salespeople(SNUM,SNAME,CITY,COMM)VALUES(1003,'AxelRod','New York',10);
INSERT INTO Salespeople(SNUM,SNAME,CITY,COMM)VALUES(1008,'Fran','London',25);


mysql> SELECT SNUM,SNAME,CITY,COMM FROM Salespeople;

+------+---------+-----------+------+
| SNUM | SNAME   | CITY      | COMM |
+------+---------+-----------+------+
| 1001 | Peel    | London    |   12 |
| 1002 | Serres  | SanJose   |   13 |
| 1003 | AxelRod | New York  |   10 |
| 1004 | Motika  | London    |   11 |
| 1007 | Rifkin  | Barcelona |   15 |
| 1008 | Fran    | London    |   25 |
+------+---------+-----------+------+


CREATE TABLE Customers
(CNUM INT, 
CNAME VARCHAR(20),
CITY VARCHAR(20),
RATING INT,
SNUM INT,
FOREIGN KEY (SNUM) REFERENCES SalesPerson(SNUM)
);

INSERT INTO Customers(CNUM,CNAME,CITY,RATING,SNUM)VALUE(2001,'Hoffman','London',100,1001);
INSERT INTO Customers(CNUM,CNAME,CITY,RATING,SNUM)VALUE(2002,'Giovanni','Rome',200,1003);
INSERT INTO Customers(CNUM,CNAME,CITY,RATING,SNUM)VALUE(2003,'Liu','SanJose',200,1002);
INSERT INTO Customers(CNUM,CNAME,CITY,RATING,SNUM)VALUE(2004,'Grass','Berlin',300,1002);
INSERT INTO Customers(CNUM,CNAME,CITY,RATING,SNUM)VALUE(2006,'Clemens','London',100,1001);
INSERT INTO Customers(CNUM,CNAME,CITY,RATING,SNUM)VALUE(2008,'Cisneros','SanJose',300,1007);
INSERT INTO Customers(CNUM,CNAME,CITY,RATING,SNUM)VALUE(2007,'Pereira','Rome',100,1004);


mysql> SELECT CNUM,CNAME,CITY,RATING,SNUM FROM Customers;

+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2001 | Hoffman  | London  |    100 | 1001 |
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2006 | Clemens  | London  |    100 | 1001 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
+------+----------+---------+--------+------+


CREATE TABLE Orders
(ONUM INT PRIMARY KEY, 
AMT FLOAT, 
ODATE DATE, 
CNUM INT,
SNUM INT, 
FOREIGN KEY (SNUM) REFERENCES SalesPerson(SNUM)
);


INSERT INTO Orders VALUES
(3001,18.69,"1990-10-03",2008,1007),
(3003,767.19,"1990-10-03",2001,1001),
(3002,1900.10,"1990-10-03",2007,1004),
(3005,5160.45,"1990-10-03",2003,1002),
(3006,1098.16,"1990-10-03",2008,1007),
(3009,1713.23,"1990-10-04",2002,1003),
(3007,75.75,"1990-10-04",2004,1002),
(3008,4723.00,"1990-10-05",2006,1001),
(3010,1309.95,"1990-10-06",2004,1002),
(3011,9891.88,"1990-10-06",2006,1001);

mysql> SELECT ONUM,AMT,ODATE,CNUM,SNUM FROM Orders;

+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-10-03 | 2008 | 1007 |
| 3002 |  1900.1 | 1990-10-03 | 2007 | 1004 |
| 3003 |  767.19 | 1990-10-03 | 2001 | 1001 |
| 3005 | 5160.45 | 1990-10-03 | 2003 | 1002 |
| 3006 | 1098.16 | 1990-10-03 | 2008 | 1007 |
| 3007 |   75.75 | 1990-10-04 | 2004 | 1002 |
| 3008 |    4723 | 1990-10-05 | 2006 | 1001 |
| 3009 | 1713.23 | 1990-10-04 | 2002 | 1003 |
| 3010 | 1309.95 | 1990-10-06 | 2004 | 1002 |
| 3011 | 9891.88 | 1990-10-06 | 2006 | 1001 |
+------+---------+------------+------+------+



1) List all the columns of the Salespeople table. 

mysql> SHOW COLUMNS FROM Salespeople;

+-------+-------------+------+-----+---------+-------+
| Field | Type        | Null | Key | Default | Extra |
+-------+-------------+------+-----+---------+-------+
| SNUM  | int         | NO   | PRI | NULL    |       |
| SNAME | varchar(20) | YES  |     | NULL    |       |
| CITY  | varchar(20) | YES  |     | NULL    |       |
| COMM  | int         | YES  |     | NULL    |       |
+-------+-------------+------+-----+---------+-------+


2) List all customers with a rating of 100. 

mysql> SELECT CNUM,CNAME,CITY,RATING,SNUM
    -> FROM Customers
    -> WHERE
    -> RATING = 100;

+------+---------+--------+--------+------+
| CNUM | CNAME   | CITY   | RATING | SNUM |
+------+---------+--------+--------+------+
| 2001 | Hoffman | London |    100 | 1001 |
| 2006 | Clemens | London |    100 | 1001 |
| 2007 | Pereira | Rome   |    100 | 1004 |
+------+---------+--------+--------+------+


3) Find the largest order taken by each salesperson on each date.

mysql> SELECT SNUM, ODATE, MAX(AMT) AS "Maximum Amount"
    -> FROM Orders
    -> GROUP BY
    -> ODATE,ONUM;

+------+------------+----------------+
| SNUM | ODATE      | Maximum Amount |
+------+------------+----------------+
| 1007 | 1990-10-03 |          18.69 |
| 1004 | 1990-10-03 |         1900.1 |
| 1001 | 1990-10-03 |         767.19 |
| 1002 | 1990-10-03 |        5160.45 |
| 1007 | 1990-10-03 |        1098.16 |
| 1002 | 1990-10-04 |          75.75 |
| 1001 | 1990-10-05 |           4723 |
| 1003 | 1990-10-04 |        1713.23 |
| 1002 | 1990-10-06 |        1309.95 |
| 1001 | 1990-10-06 |        9891.88 |
+------+------------+----------------+


4) Arrange the Order table by descending customer number.

mysql> SELECT ONUM, AMT, ODATE, CNUM, SNUM
    -> FROM Orders
    -> ORDER BY CNUM DESC;

+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-10-03 | 2008 | 1007 |
| 3006 | 1098.16 | 1990-10-03 | 2008 | 1007 |
| 3002 |  1900.1 | 1990-10-03 | 2007 | 1004 |
| 3008 |    4723 | 1990-10-05 | 2006 | 1001 |
| 3011 | 9891.88 | 1990-10-06 | 2006 | 1001 |
| 3007 |   75.75 | 1990-10-04 | 2004 | 1002 |
| 3010 | 1309.95 | 1990-10-06 | 2004 | 1002 |
| 3005 | 5160.45 | 1990-10-03 | 2003 | 1002 |
| 3009 | 1713.23 | 1990-10-04 | 2002 | 1003 |
| 3003 |  767.19 | 1990-10-03 | 2001 | 1001 |
+------+---------+------------+------+------+


5) Find which salespeople currently have orders in the order table. 

mysql> SELECT SNUM,SNAME FROM Salespeople
    -> WHERE 
    -> SNUM = ANY(SELECT DISTINCT(SNUM) FROM Orders);

+------+---------+
| SNUM | SNAME   |
+------+---------+
| 1001 | Peel    |
| 1002 | Serres  |
| 1003 | AxelRod |
| 1004 | Motika  |
| 1007 | Rifkin  |
+------+---------+


6) List names of all customers matched with the salespeople serving them. 
mysql> SELECT CNAME, SNAME FROM Customers c, salespeople s
    -> WHERE
    -> s.SNUM = c.snum ;
+----------+---------+
| CNAME    | SNAME   |
+----------+---------+
| Hoffman  | Peel    |
| Giovanni | AxelRod |
| Liu      | Serres  |
| Grass    | Serres  |
| Clemens  | Peel    |
| Cisneros | Rifkin  |
| Pereira  | Motika  |
+----------+---------+


7) Find the names and numbers of all salespeople who have more than one customer. 

mysql>  SELECT SNAME, SNUM FROM Salespeople
    ->  WHERE 
    ->  SNUM =  ANY(SELECT SNUM FROM Customers
    ->  GROUP BY SNUM 
    ->  HAVING 
    ->  COUNT(SNUM)>1);

+--------+------+
| SNAME  | SNUM |
+--------+------+
| Peel   | 1001 |
| Serres | 1002 |
+--------+------+


8) Count the orders of each of the salespeople and output the results in descending order. 

mysql> SELECT SNUM,Count(ONUM) AS " Number of Orders" FROM Orders GROUP BY SNUM 
    -> ORDER BY COUNT(ONUM) DESC;

+------+------------------+
| SNUM | Number of Orders |
+------+------------------+
| 1001 |                3 |
| 1002 |                3 |
| 1007 |                2 |
| 1003 |                1 |
| 1004 |                1 |
+------+------------------+


9) List the customer table if and only if one or more of the customers in the Customer table are located in SanJose. 

mysql> SELECT CNUM,CNAME,CITY,RATING,SNUM FROM Customers
    -> WHERE 
    -> EXISTS(SELECT CITY FROM Customers
    -> WHERE 
    -> CITY="SanJose");

+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2001 | Hoffman  | London  |    100 | 1001 |
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2006 | Clemens  | London  |    100 | 1001 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
+------+----------+---------+--------+------+


10) Match salespeople to customers according to what city they live in.

mysql> SELECT Salespeople.SNAME, Customers.CNAME, Customers.CITY
    -> FROM Salespeople, Customers
    -> WHERE 
    -> Salespeople.CITY=Customers.CITY;

+--------+----------+---------+
| SNAME  | CNAME    | CITY    |
+--------+----------+---------+
| Fran   | Hoffman  | London  |
| Motika | Hoffman  | London  |
| Peel   | Hoffman  | London  |
| Serres | Liu      | SanJose |
| Fran   | Clemens  | London  |
| Motika | Clemens  | London  |
| Peel   | Clemens  | London  |
| Serres | Cisneros | SanJose |
+--------+----------+---------+


11) Find all the customers in SanJose who have a rating above 200.

mysql> SELECT CNAME FROM Customers
    -> WHERE RATING > 200 AND CITY="SanJose";
    
+----------+
| CNAME    |
+----------+
| Cisneros |
+----------+


12) List the names and commissions of all salespeople in London. 

mysql> SELECT SNAME, COMM FROM Salespeople
    -> WHERE
    -> CITY = "London";

+--------+------+
| SNAME  | COMM |
+--------+------+
| Peel   |   12 |
| Motika |   11 |
| Fran   |   25 |
+--------+------+


13) List all the orders of Salesperson Motika from the orders table.

mysql> SELECT ONUM FROM Orders
    -> Where
    -> SNUM = ANY(Select SNUM FROM Salespeople
    -> WHERE SNAME="Motika");

+------+
| ONUM |
+------+
| 3002 |
+------+


14) Find all customers who booked orders on October 3. 

mysql> SELECT DISTINCT(c.CNAME), o.CNUM  FROM Customers c ,Orders o
    -> WHERE
    -> c.CNUM = o.CNUM AND ODATE="90-10-03";

+----------+------+
| CNAME    | CNUM |
+----------+------+
| Hoffman  | 2001 |
| Liu      | 2003 |
| Cisneros | 2008 |
| Pereira  | 2007 |
+----------+------+


15) Give the sums of the amounts from the Orders table, grouped by date, eliminating all those dates where the SUM was not at least 2000 above the maximum Amount. 

mysql> SELECT SUM(AMT) AS "Amount Sum" FROM Orders GROUP BY ODATE
    -> HAVING
    -> SUM(AMT) >= (SELECT MAX(AMT) + 2000 FROM ORDERS);

Empty set (0.17 sec)


16) Select all orders that had amounts that were greater than at least one of the orders from October 6.

mysql> SELECT ONUM,AMT,ODATE,CNUM,SNUM FROM ORDERS
    -> WHERE
    -> AMT > ANY(SELECT AMT FROM Orders
    -> WHERE ODATE='90-10-06');

+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3002 |  1900.1 | 1990-10-03 | 2007 | 1004 |
| 3005 | 5160.45 | 1990-10-03 | 2003 | 1002 |
| 3008 |    4723 | 1990-10-05 | 2006 | 1001 |
| 3009 | 1713.23 | 1990-10-04 | 2002 | 1003 |
| 3011 | 9891.88 | 1990-10-06 | 2006 | 1001 |
+------+---------+------------+------+------+


17) Write a query that uses the EXISTS operator to extract all salespeople who have customers with a rating of 300.

mysql> SELECT SNUM,SNAME,CITY,COMM FROM Salespeople
    -> WHERE EXISTS(SELECT CNUM,CNAME,CITY,RATING ,SNUM FROM Customers
    -> WHERE Customers.SNUM = Salespeople.SNUM AND
    -> Customers.RATING = 300);

+------+--------+-----------+------+
| SNUM | SNAME  | CITY      | COMM |
+------+--------+-----------+------+
| 1002 | Serres | SanJose   |   13 |
| 1007 | Rifkin | Barcelona |   15 |
+------+--------+-----------+------+


18) Find all customers whose cnum is 1000 above the snum of Serres. 

mysql> SELECT CNUM,CNAME FROM Customers
    -> WHERE CNUM > 1000 + ( SELECT SNUM FROM  Salespeople
    -> WHERE SNAME ='Serres');

+------+----------+
| CNUM | CNAME    |
+------+----------+
| 2003 | Liu      |
| 2004 | Grass    |
| 2006 | Clemens  |
| 2008 | Cisneros |
| 2007 | Pereira  |
+------+----------+


19) Give the salespeople’s commissions as percentages instead of decimal numbers. 

mysql> SELECT SNUM, SNAME, COMM FROM Salespeople;

+------+---------+------+
| SNUM | SNAME   | COMM |
+------+---------+------+
| 1001 | Peel    |   12 |
| 1002 | Serres  |   13 |
| 1003 | AxelRod |   10 |
| 1004 | Motika  |   11 |
| 1007 | Rifkin  |   15 |
| 1008 | Fran    |   25 |
+------+---------+------+


20) Find the largest order taken by each salesperson on each date, eliminating those Maximum orders, which are less than 3000.

mysql> SELECT SNUM,ODATE, MAX(AMT) AS "Maximum Amount" FROM Orders GROUP BY ODATE,SNUM
    -> HAVING
    -> MAX(AMT)>3000;

+------+------------+----------------+
| SNUM | ODATE      | Maximum Amount |
+------+------------+----------------+
| 1002 | 1990-10-03 |        5160.45 |
| 1001 | 1990-10-05 |           4723 |
| 1001 | 1990-10-06 |        9891.88 |
+------+------------+----------------+


21) List all the largest orders for October 3, for each salesperson. 

mysql> SELECT SNUM, ODATE, MAX(AMT) AS "Maximum Orders" FROM Orders GROUP BY ODATE,SNUM
    -> HAVING 
    -> ODATE = "1990-10-03";

+------+------------+----------------+
| SNUM | ODATE      | Maximum Orders |
+------+------------+----------------+
| 1007 | 1990-10-03 |        1098.16 |
| 1004 | 1990-10-03 |         1900.1 |
| 1001 | 1990-10-03 |         767.19 |
| 1002 | 1990-10-03 |        5160.45 |
+------+------------+----------------+


22) Find all customers located in cities where Serres has customers. 

mysql> SELECT CNUM,CNAME FROM Customers
    -> WHERE
    -> CITY = ANY (SELECT CITY FROM Customers  WHERE SNUM= (SELECT SNUM FROM Salespeople
    -> WHERE
    -> SNAME='Serres'));

+------+----------+
| CNUM | CNAME    |
+------+----------+
| 2003 | Liu      |
| 2004 | Grass    |
| 2008 | Cisneros |
+------+----------+


23) Select all customers with a rating above 200. 

mysql> SELECT CNUM,CNAME,CITY,RATING,SNUM FROM Customers
    -> WHERE
    -> RATING >200;

+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+


24) Count the number of salespeople currently having orders in the orders table.

mysql> SELECT COUNT(DISTINCT SNUM) AS "Customers having orders" FROM Orders;

+-------------------------+
| Customers having orders |
+-------------------------+
|                       5 |
+-------------------------+


25) Write a query that produces all customers serviced by salespeople with a commission above 12%. Output the customer’s name, salesperson’s name and the salesperson’s rate of commission. 

mysql> SELECT Customers.CNAME,Salespeople.COMM FROM Customers
    -> JOIN
    -> Salespeople
    -> ON Customers.SNUM = Salespeople.SNUM AND Salespeople.COMM > 12;

+----------+------+
| CNAME    | COMM |
+----------+------+
| Liu      |   13 |
| Grass    |   13 |
| Cisneros |   15 |
+----------+------+


26) Find salespeople who have multiple customers.

mysql> SELECT SNUM, COUNT(SNUM) AS "COUNT"FROM Customers GROUP BY SNUM
    -> HAVING
    -> COUNT(SNUM) > 1;

+------+-------+
| SNUM | COUNT |
+------+-------+
| 1001 |     2 |
| 1002 |     2 |
+------+-------+


27) Find salespeople with customers located in their own cities.

mysql> SELECT s.SNUM, s.SNAME, s.CITY, c.CNUM, c.CNAME FROM Salespeople s, Customers c
    -> WHERE
    -> s.SNUM=c.SNUM AND s.CITY=c.CITY;

+------+--------+---------+------+---------+
| SNUM | SNAME  | CITY    | CNUM | CNAME   |
+------+--------+---------+------+---------+
| 1001 | Peel   | London  | 2001 | Hoffman |
| 1002 | Serres | SanJose | 2003 | Liu     |
| 1001 | Peel   | London  | 2006 | Clemens |
+------+--------+---------+------+---------+


28) Find all salespeople whose name starts with ‘P’ and fourth character is 'I'.

mysql> SELECT SNAME FROM Salespeople
    -> WHERE 
    -> SNAME LIKE "P__I%";

Empty set (0.00 sec)


29) Write a query that uses a subquery to obtain all orders for the customer named ‘Cisneros’. Assume you do not know his customer number. 

mysql> SELECT ONUM FROM Orders
    -> WHERE SNUM = (SELECT SNUM FROM Customers
    -> WHERE CNAME= "Cisneros");

+------+
| ONUM |
+------+
| 3001 |
| 3006 |
+------+


30) Find the largest orders for Serres and Rifkin.

mysql> SELECT SNUM, MAX(AMT) AS "Maximum Amount" FROM Orders GROUP BY SNUM
    -> HAVING
    -> SNUM IN(SELECT SNUM from Salespeople
    -> WHERE
    -> SNAME='Serres' OR SNAME ='Rifkin');

+------+---------------------+
| SNUM | Maximum Amount(AMT) |
+------+---------------------+
| 1002 |  5160.45            |
| 1007 |  1098.16            |
+------+---------------------+


31) Sort the salespeople table in the following order: snum, sname, commission, city. 

mysql> SELECT SNUM,SNAME,COMM,CITY FROM Salespeople;

+------+---------+------+-----------+
| SNUM | SNAME   | COMM | CITY      |
+------+---------+------+-----------+
| 1001 | Peel    |   12 | London    |
| 1002 | Serres  |   13 | SanJose   |
| 1003 | AxelRod |   10 | New York  |
| 1004 | Motika  |   11 | London    |
| 1007 | Rifkin  |   15 | Barcelona |
| 1008 | Fran    |   25 | London    |
+------+---------+------+-----------+


32) Select all customers whose names fall in between ‘A’ and ‘G’ alphabetical range. 

mysql> SELECT CNAME FROM Customers
    -> WHERE
    -> CNAME BETWEEN "A" AND "H";

+----------+
| CNAME    |
+----------+
| Giovanni |
| Grass    |
| Clemens  |
| Cisneros |
+----------+


33) Select all the possible combinations of customers you can assign.

mysql> SELECT Customers.CNAME, Salespeople.SNAME FROM Customers
    -> JOIN
    -> Salespeople ON Customers.SNUM = Salespeople.SNUM;

+----------+---------+
| CNAME    | SNAME   |
+----------+---------+
| Hoffman  | Peel    |
| Giovanni | AxelRod |
| Liu      | Serres  |
| Grass    | Serres  |
| Clemens  | Peel    |
| Cisneros | Rifkin  |
| Pereira  | Motika  |
+----------+---------+


34) Select all orders that are greater than the average for October 4. 

mysql> SELECT ONUM,AMT,ODATE FROM Orders
    -> WHERE
    -> AMT> (SELECT AVG(AMT) AS "Average" FROM Orders GROUP BY ODATE 
    -> HAVING ODATE= "1990-10-04");

+------+---------+------------+
| ONUM | AMT     | ODATE      |
+------+---------+------------+
| 3002 |  1900.1 | 1990-10-03 |
| 3005 | 5160.45 | 1990-10-03 |
| 3006 | 1098.16 | 1990-10-03 |
| 3008 |    4723 | 1990-10-05 |
| 3009 | 1713.23 | 1990-10-04 |
| 3010 | 1309.95 | 1990-10-06 |
| 3011 | 9891.88 | 1990-10-06 |
+------+---------+------------+


35) Write a select command using correlated subquery that selects the names and numbers of all customers with ratings equal to the maximum for their city.

mysql> SELECT c1.CNUM,c1.CNAME,c1.CITY ,c1.RATING FROM Customers c1
    -> WHERE
    -> RATING IN (SELECT MAX(RATING) AS "Maximum Rating" FROM Customers c2
    -> WHERE
    -> c1.CITY = c2.CITY);

+------+----------+---------+--------+
| CNUM | CNAME    | CITY    | RATING |
+------+----------+---------+--------+
| 2001 | Hoffman  | London  |    100 |
| 2002 | Giovanni | Rome    |    200 |
| 2004 | Grass    | Berlin  |    300 |
| 2006 | Clemens  | London  |    100 |
| 2008 | Cisneros | SanJose |    300 |
+------+----------+---------+--------+


36) Write a query that totals the orders for each day and places the results in descending order.

mysql> SELECT ODATE,ROUND(SUM(AMT)) AS"Total Orders" FROM Orders GROUP BY ODATE ORDER BY SUM(AMT) DESC;

+------------+--------------+
| ODATE      | Total Orders |
+------------+--------------+
| 1990-10-06 |        11202 |
| 1990-10-03 |         8945 |
| 1990-10-05 |         4723 |
| 1990-10-04 |         1789 |
+------------+--------------+


37) Write a select command that produces the rating followed by the name of each customer in SanJose. 

mysql> SELECT RATING,CNAME FROM Customers
    -> WHERE
    -> CITY="SanJose";

+--------+----------+
| RATING | CNAME    |
+--------+----------+
|    200 | Liu      |
|    300 | Cisneros |
+--------+----------+


38) Find all orders with amounts smaller than any amount for a customer in SanJose.


mysql> SELECT ONUM,AMT FROM Orders
    -> WHERE
    -> AMT < ANY (SELECT AMT FROM Orders, Customers
    -> WHERE
    -> Orders.CNUM = Customers.CNUM
    -> AND Customers.CITY = 'SanJose');

+------+---------+
| ONUM | AMT     |
+------+---------+
| 3001 |   18.69 |
| 3002 |  1900.1 |
| 3003 |  767.19 |
| 3006 | 1098.16 |
| 3007 |   75.75 |
| 3008 |    4723 |
| 3009 | 1713.23 |
| 3010 | 1309.95 |
+------+---------+


39) Find all orders with above average amounts for their customers.

mysql> SELECT AMT,ONUM FROM Orders
    -> WHERE
    -> AMT > (SELECT AVG(AMT) AS "Average Amount" FROM Orders);

+---------+------+
| AMT     | ONUM |
+---------+------+
| 5160.45 | 3005 |
|    4723 | 3008 |
| 9891.88 | 3011 |
+---------+------+


40) Write a query that selects the highest rating in each city. 

mysql> SELECT CITY, MAX(RATING) AS "Maximum Rating" FROM Customers GROUP BY CITY;

+---------+----------------+
| CITY    | Maximum Rating |
+---------+----------------+
| London  |            100 |
| Rome    |            200 |
| SanJose |            300 |
| Berlin  |            300 |
+---------+----------------+


41) Write a query that calculates the amount of the salesperson’s commission on each order by a customer with a rating above 100.00

mysql> SELECT SNAME, ROUND(COMM* AMT/100) AS "Commission on each" FROM  Orders, Customers, Salespeople
    -> WHERE
    -> RATING > 100 AND Salespeople.SNUM = Customers.SNUM AND Salespeople.SNUM = Orders.SNUM AND Customers.CNUM = Orders.CNUM;

+---------+--------------------+
| SNAME   | Commission on each |
+---------+--------------------+
| AxelRod |                171 |
| Serres  |                671 |
| Serres  |                 10 |
| Serres  |                170 |
| Rifkin  |                  3 |
| Rifkin  |                165 |
+---------+--------------------+


42) Count the customers with ratings above SanJose’s average. 

mysql> SELECT COUNT(CNUM) AS "Customer Count" FROM Customers
    -> WHERE
    -> RATING > (SELECT AVG(RATING) FROM Customers
    -> WHERE
    -> CITY="SanJose");

+----------------+
| Customer Count |
+----------------+
|              2 |
+----------------+


43) Find all salespeople that are located in either Barcelona or London. 

mysql> SELECT SNUM,SNAME,CITY,COMM FROM Salespeople
    -> WHERE
    -> CITY = "Barcelona" OR CITY = "London";

+------+--------+-----------+------+
| SNUM | SNAME  | CITY      | COMM |
+------+--------+-----------+------+
| 1001 | Peel   | London    |   12 |
| 1004 | Motika | London    |   11 |
| 1007 | Rifkin | Barcelona |   15 |
| 1008 | Fran   | London    |   25 |
+------+--------+-----------+------+


44) Find all salespeople with only one customer.

mysql> SELECT SNUM, SNAME FROM Salespeople
    -> WHERE
    -> SNUM = ANY(SELECT SNUM FROM Customers GROUP BY SNUM
    -> HAVING
    -> COUNT(CNUM)=1);
+------+---------+
| SNUM | SNAME   |
+------+---------+
| 1003 | AxelRod |
| 1004 | Motika  |
| 1007 | Rifkin  |
+------+---------+


45) Write a query that joins the Customer table to itself to find all pairs or customers served by a single salesperson.

mysql> SELECT a.CNAME as "Customer 1",b.CNAME AS "Customer 2",a.SNUM, b.CNUM FROM Customers a,Customers b,Salespeople c
    -> WHERE
    -> a.SNUM=b.SNUM and a.SNUM = c.SNUM AND a.CNUM != b.CNUM;

+------------+------------+------+------+
| Customer 1 | Customer 2 | SNUM | CNUM |
+------------+------------+------+------+
| Hoffman    | Clemens    | 1001 | 2006 |
| Liu        | Grass      | 1002 | 2004 |
| Grass      | Liu        | 1002 | 2003 |
| Clemens    | Hoffman    | 1001 | 2001 |
+------------+------------+------+------+


46) Write a query that will give you all orders for more than $1000.00. 
mysql> SELECT ONUM, AMT FROM Orders
    -> WHERE
    -> AMT> 1000;

+------+---------+
| ONUM | AMT     |
+------+---------+
| 3002 |  1900.1 |
| 3005 | 5160.45 |
| 3006 | 1098.16 |
| 3008 |    4723 |
| 3009 | 1713.23 |
| 3010 | 1309.95 |
| 3011 | 9891.88 |
+------+---------+


47) Write a query that lists each order number followed by the name of the customer who made that order. 
mysql> SELECT Orders.ONUM,Customers.CNAME FROM Customers,Orders
    -> WHERE
    -> Customers.CNUM = Orders.CNUM;

+------+----------+
| ONUM | CNAME    |
+------+----------+
| 3001 | Cisneros |
| 3002 | Pereira  |
| 3003 | Hoffman  |
| 3005 | Liu      |
| 3006 | Cisneros |
| 3007 | Grass    |
| 3008 | Clemens  |
| 3009 | Giovanni |
| 3010 | Grass    |
| 3011 | Clemens  |
+------+----------+


48) Write a query that selects all the customers whose ratings are equal to or greater than ANY(in the SQL sense) of ‘Serres’. 

mysql> SELECT CNUM,CNAME,CITY,RATING,SNUM FROM Customers
    -> WHERE
    -> RATING >= ANY(SELECT RATING FROM Customers
    -> WHERE
    -> SNUM = (Select SNUM FROM Salespeople
    -> WHERE
    -> SNAME= "Serres"));

+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+


49) Write two queries that will produce all orders taken on October 3 or October 4. 

mysql> SELECT ONUM,AMT,ODATE,CNUM,SNUM FROM ORDERS
    -> WHERE
    -> ODATE= "90-10-03"
    -> UNION
    -> SELECT ONUM,AMT,ODATE,CNUM,SNUM FROM ORDERS
    -> WHERE
    -> ODATE= "90-10-04";

+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-10-03 | 2008 | 1007 |
| 3002 |  1900.1 | 1990-10-03 | 2007 | 1004 |
| 3003 |  767.19 | 1990-10-03 | 2001 | 1001 |
| 3005 | 5160.45 | 1990-10-03 | 2003 | 1002 |
| 3006 | 1098.16 | 1990-10-03 | 2008 | 1007 |
| 3007 |   75.75 | 1990-10-04 | 2004 | 1002 |
| 3009 | 1713.23 | 1990-10-04 | 2002 | 1003 |
+------+---------+------------+------+------+


50) Find only those customers whose ratings are higher than every customer in Rome

mysql> SELECT CNAME,RATING FROM Customers
    -> WHERE
    -> RATING> ANY(SELECT MAX(RATING) FROM Customers
    -> WHERE
    -> CITY="Rome");

+----------+--------+
| CNAME    | RATING |
+----------+--------+
| Grass    |    300 |
| Cisneros |    300 |
+----------+--------+


51) Write a query on the Customers table whose output will exclude all customers with a rating&lt;= 100.00, unless they are located in Rome.

mysql> SELECT CNUM,CNAME,CITY,RATING,SNUM FROM Customers
    -> WHERE
    -> RATING !=100 OR CITY="ROME";

+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
+------+----------+---------+--------+------+


52) Find all rows from the customer’s table for which the salesperson number is 1001. 
mysql> SELECT CNUM,CNAME,CITY,RATING,SNUM FROM Customers
    -> WHERE
    -> SNUM = ANY(SELECT SNUM FROM Salespeople
    -> WHERE
    -> SNUM=1001);

+------+---------+--------+--------+------+
| CNUM | CNAME   | CITY   | RATING | SNUM |
+------+---------+--------+--------+------+
| 2001 | Hoffman | London |    100 | 1001 |
| 2006 | Clemens | London |    100 | 1001 |
+------+---------+--------+--------+------+


53)Find the total amount in orders for each salesperson where their total of amounts are greater than the amount of the largest order in the table.

mysql> SELECT SNUM,SUM(ROUND(AMT)) AS "AMOUNT SUM" FROM Orders GROUP BY SNUM
    -> HAVING
    -> SUM(AMT) > (SELECT MAX(AMT) FROM Orders);

+------+------------+
| SNUM | AMOUNT SUM |
+------+------------+
| 1001 |      15382 |
+------+------------+

54) Write a query that selects all orders save those with zeroes or NULL in the amount file.

mysql> Select ONUM FROM Orders
    -> WHERE
    -> AMT IS NULL OR AMT = 0 INTO OUTFILE 'C:\\ProgramData\\MySQL\\MySQL Server 8.0\\Uploads\\amount4.txt';

Query OK, 0 rows affected (0.07 sec)


55) Produce all combinations of salespeople and customer names such that the former precedes the latter alphabetically, and the latter has a rating of less than 200.

mysql> SELECT s.SNAME,c.CNAME,RATING FROM Salespeople s, Customers c
    -> WHERE
    -> RATING < 200 ORDER BY SNAME , CNAME;

+---------+---------+--------+
| SNAME   | CNAME   | RATING |
+---------+---------+--------+
| AxelRod | Clemens |    100 |
| AxelRod | Hoffman |    100 |
| AxelRod | Pereira |    100 |
| Fran    | Clemens |    100 |
| Fran    | Hoffman |    100 |
| Fran    | Pereira |    100 |
| Motika  | Clemens |    100 |
| Motika  | Hoffman |    100 |
| Motika  | Pereira |    100 |
| Peel    | Clemens |    100 |
| Peel    | Hoffman |    100 |
| Peel    | Pereira |    100 |
| Rifkin  | Clemens |    100 |
| Rifkin  | Hoffman |    100 |
| Rifkin  | Pereira |    100 |
| Serres  | Clemens |    100 |
| Serres  | Hoffman |    100 |
| Serres  | Pereira |    100 |
+---------+---------+--------+


56) Find all salespeople name and commission. 

mysql> SELECT SNAME, COMM FROM Salespeople;

+---------+------+
| SNAME   | COMM |
+---------+------+
| Peel    |   12 |
| Serres  |   13 |
| AxelRod |   10 |
| Motika  |   11 |
| Rifkin  |   15 |
| Fran    |   25 |
+---------+------+


57) Write a query that produces the names and cities of all customers with the same rating as Hoffman. Write the query using Hoffman’s cnum rather than his rating, so that it would still be usable if his rating is changed.

mysql> SELECT CNAME,CITY FROM Customers
    -> WHERE
    -> RATING = ANY(SELECT RATING FROM Customers
    -> WHERE
    -> CNUM=2001);

+---------+--------+
| CNAME   | CITY   |
+---------+--------+
| Hoffman | London |
| Clemens | London |
| Pereira | Rome   |
+---------+--------+


58) Find all salespeople for whom there are customers that follow them in alphabetical order.

mysql> SELECT s.SNAME,c.CNAME FROM Customers c,Salespeople s
    -> WHERE
    -> s.SNUM=c.SNUM  GROUP BY s.SNAME,c.CNAME
    -> HAVING
    -> c.CNAME >= s.SNAME;

+---------+----------+
| SNAME   | CNAME    |
+---------+----------+
| AxelRod | Giovanni |
| Motika  | Pereira  |
+---------+----------+


59) Write a query that produces the names and ratings of all customers who have average orders.

mysql> SELECT a.CNAME,a.RATING, b.AMT FROM Customers a, Orders b
    -> WHERE
    -> a.CNUM = b.CNUM AND AMT =(SELECT AVG(AMT) AS "AMOUNT" FROM Orders) GROUP BY CNAME;

Empty set (1.49 sec)


60) Find the SUM of all Amounts from the orders table. 

mysql> SELECT ROUND(SUM(AMT)) as "Total Amount" FROM ORDERS;

+-----------------+
| Total Amount    |
+-----------------+
|           26658 |
+-----------------+


61) Write a SELECT command that produces the order number, amount, and the date from rows in the order table. 

mysql> SELECT ONUM,AMT AS "AMOUNT",ODATE FROM Orders;

+------+---------+------------+
| ONUM | AMOUNT  | ODATE      |
+------+---------+------------+
| 3001 |   18.69 | 1990-10-03 |
| 3002 |  1900.1 | 1990-10-03 |
| 3003 |  767.19 | 1990-10-03 |
| 3005 | 5160.45 | 1990-10-03 |
| 3006 | 1098.16 | 1990-10-03 |
| 3007 |   75.75 | 1990-10-04 |
| 3008 |    4723 | 1990-10-05 |
| 3009 | 1713.23 | 1990-10-04 |
| 3010 | 1309.95 | 1990-10-06 |
| 3011 | 9891.88 | 1990-10-06 |
+------+---------+------------+


62) Count the number of non NULL rating fields in the Customers table (including repeats). 

mysql> SELECT COUNT(RATING) AS "COUNT" FROM Customers
    -> WHERE
    -> RATING IS NOT NULL;

+-------+
| COUNT |
+-------+
|     7 |
+-------+


63) Write a query that gives the names of both the salesperson and the customer for each order after the order number.

mysql> SELECT ONUM,CNAME,SNAME FROM Salespeople,Customers,Orders
    -> WHERE
    -> Salespeople.SNUM = ORDERS.SNUM AND Customers.CNUM= Orders.CNUM;

+------+----------+---------+
| ONUM | CNAME    | SNAME   |
+------+----------+---------+
| 3001 | Cisneros | Rifkin  |
| 3002 | Pereira  | Motika  |
| 3003 | Hoffman  | Peel    |
| 3005 | Liu      | Serres  |
| 3006 | Cisneros | Rifkin  |
| 3007 | Grass    | Serres  |
| 3008 | Clemens  | Peel    |
| 3009 | Giovanni | AxelRod |
| 3010 | Grass    | Serres  |
| 3011 | Clemens  | Peel    |
+------+----------+---------+


64) List the commissions of all salespeople servicing customers in London. 

mysql> SELECT SNAME,COMM from Salespeople
    -> WHERE
    -> SNUM =  ANY(SELECT SNUM FROM Customers WHERE CITY ="London" );

+-------+------+
| SNAME | COMM |
+-------+------+
| Peel  |   12 |
+-------+------+


65) Write a query using ANY or ALL that will find all salespeople who have no customers located in their city.

mysql> SELECT SNUM,SNAME FROM Salespeople
    -> WHERE
    -> SNUM != ALL (SELECT SNUM FROM Customers
    -> WHERE
    -> Salespeople.CITY = Customers.CITY);

+------+---------+
| SNUM | SNAME   |
+------+---------+
| 1003 | AxelRod |
| 1004 | Motika  |
| 1007 | Rifkin  |
| 1008 | Fran    |
+------+---------+


66) Write a query using the EXISTS operator that selects all salespeople with customers located in their cities who are not assigned to them.

mysql> SELECT SNUM,SNAME,CITY,COMM FROM Salespeople
    -> WHERE
    -> EXISTS (SELECT SNUM,SNAME,CITY,COMM FROM Customers C
    -> WHERE
    -> C.CITY = Salespeople.CITY AND C.SNUM !=Salespeople.SNUM
    -> OR Salespeople.SNAME= C.CNAME);

+------+--------+---------+------+
| SNUM | SNAME  | CITY    | COMM |
+------+--------+---------+------+
| 1002 | Serres | SanJose |   13 |
| 1004 | Motika | London  |   11 |
| 1008 | Fran   | London  |   25 |
+------+--------+---------+------+


67) Write a query that selects all customers serviced by Peel or Motika. (Hint: The snum field relates the 2 tables to one another.) 

mysql> SELECT CNAME FROM Customers
    -> WHERE
    -> SNUM IN (SELECT SNUM FROM Salespeople
    -> WHERE
    -> SNAME= "Motika" OR SNAME= "Peel");

+---------+
| CNAME   |
+---------+
| Hoffman |
| Clemens |
| Pereira |
+---------+


68) Count the number of salespeople registering orders for each day. (If a salesperson has more than one order on a given day, he or she should be counted only once.) 

mysql> SELECT COUNT(DISTINCT SNUM),ODATE FROM Orders GROUP BY ODATE;
+-----------------------+
| COUNT    | ODATE      |
+--------- +------------+
|    4     | 1990-10-03 |
|    2     | 1990-10-04 |
|    1     | 1990-10-05 |
|    2     | 1990-10-06 |
+-----------------------+


69) Find all orders attributed to salespeople who live in London.

mysql> SELECT ONUM,ODATE,AMT FROM Orders
    -> WHERE
    -> SNUM = ANY(SELECT SNUM FROM Salespeople
    -> WHERE
    -> City="London");

+------+------------+---------+
| ONUM | ODATE      | AMT     |
+------+------------+---------+
| 3003 | 1990-10-03 |  767.19 |
| 3008 | 1990-10-05 |    4723 |
| 3011 | 1990-10-06 | 9891.88 |
| 3002 | 1990-10-03 |  1900.1 |
+------+------------+---------+


70) Find all orders by customers not located in the same cities as their salespeople.

mysql> SELECT ONUM,ODATE,AMT,CNUM,SNUM FROM Orders
    -> WHERE
    -> CNUM = ANY(SELECT CNUM FROM Customers
    -> WHERE
    -> SNUM =
    -> ANY(SELECT SNUM FROM Salespeople
    -> WHERE
    -> Salespeople.CITY != Customers.CITY));

+------+------------+---------+------+------+
| ONUM | ODATE      | AMT     | CNUM | SNUM |
+------+------------+---------+------+------+
| 3001 | 1990-10-03 |   18.69 | 2008 | 1007 |
| 3002 | 1990-10-03 |  1900.1 | 2007 | 1004 |
| 3006 | 1990-10-03 | 1098.16 | 2008 | 1007 |
| 3007 | 1990-10-04 |   75.75 | 2004 | 1002 |
| 3009 | 1990-10-04 | 1713.23 | 2002 | 1003 |
| 3010 | 1990-10-06 | 1309.95 | 2004 | 1002 |
+------+------------+---------+------+------+


71) Find all salespeople who have customers with more than one current order. 

mysql> Select SNUM,SNAME, COMM From Salespeople
    -> WHERE SNUM = ANY
    -> (Select SNUM  FROM Orders GROUP BY CNUM
    -> HAVING
    -> COUNT(ONUM) > 1 );

+------+--------+------+
| SNUM | SNAME  | COMM |
+------+--------+------+
| 1001 | Peel   |   12 |
| 1002 | Serres |   13 |
| 1007 | Rifkin |   15 |
+------+--------+------+


72) Write a query that extracts from the customer’s table every customer assigned to a salesperson, who is currently having at least one another customer(besides the customer being selected) with orders in the Orders Table.

mysql> SELECT CNUM,CNAME,CITY, RATING,SNUM FROM Customers
    -> WHERE
    -> SNUM IN(SELECT SNUM FROM Orders
    -> WHERE
    -> 1<(SELECT COUNT(DISTINCT CNUM) FROM Orders
    -> WHERE
    -> Customers.SNUM = SNUM));

+------+---------+---------+--------+------+
| CNUM | CNAME   | CITY    | RATING | SNUM |
+------+---------+---------+--------+------+
| 2001 | Hoffman | London  |    100 | 1001 |
| 2003 | Liu     | SanJose |    200 | 1002 |
| 2004 | Grass   | Berlin  |    300 | 1002 |
| 2006 | Clemens | London  |    100 | 1001 |
+------+---------+---------+--------+------+


73) Write a query on the customer’s table that will find the highest rating in each city. Put the output in this form: for the city (city), the highest rating is (rating). 

mysql> SELECT CONCAT("For City"," " ,City , " ", "the highest rating is ",MAX(RATING))
    -> AS "The highest rating in each city" FROM CUSTOMERS GROUP BY CITY;

+--------------------------------------------+
| The highest rating in each city            |
+--------------------------------------------+
| For City London the highest rating is 100  |
| For City Rome the highest rating is 200    |
| For City SanJose the highest rating is 300 |
| For City Berlin the highest rating is 300  |
+--------------------------------------------+


74) Write a query that will produce the snum values of all salespeople with orders, having amt greater than 1000 in the Orders Table(without repeats). 

mysql> SELECT DISTINCT SNUM, ONUM,AMT FROM Orders
    -> WHERE
    -> AMT >1000 GROUP BY SNUM;

+------+------+---------+
| SNUM | ONUM | AMT     |
+------+------+---------+
| 1001 | 3008 |    4723 |
| 1002 | 3005 | 5160.45 |
| 1003 | 3009 | 1713.23 |
| 1004 | 3002 |  1900.1 |
| 1007 | 3006 | 1098.16 |
+------+------+---------+


75) Write a query that lists customers in a descending order of rating. Output the rating field first, followed by the customer’s names and numbers. 

mysql> SELECT RATING, CNAME,CNUM FROM Customers ORDER BY RATING DESC;

+--------+----------+------+
| RATING | CNAME    | CNUM |
+--------+----------+------+
|    300 | Grass    | 2004 |
|    300 | Cisneros | 2008 |
|    200 | Giovanni | 2002 |
|    200 | Liu      | 2003 |
|    100 | Hoffman  | 2001 |
|    100 | Clemens  | 2006 |
|    100 | Pereira  | 2007 |
+--------+----------+------+


76) Find the average commission for salespeople in London. 

mysql> SELECT AVG(COMM) AS "Average commission" FROM Salespeople
    -> WHERE
    -> CITY = "London";

+--------------------+
| Average commission |
+--------------------+
|            16.0000 |
+--------------------+


77) Find all orders credited to the same salesperson who services Hoffman.(cnum 2001).

mysql> SELECT ONUM,CNUM FROM Orders
    -> WHERE
    -> SNUM IN (SELECT SNUM FROM Customers
    -> WHERE
    -> CNUM=2001);

+------+------+
| ONUM | CNUM |
+------+------+
| 3003 | 2001 |
| 3008 | 2006 |
| 3011 | 2006 |
+------+------+


78) Find all salespeople whose commission is in between 0.10 and 0.12(both inclusive). 

mysql> SELECT SNUM,SNAME,COMM FROM Salespeople
    -> WHERE
    -> COMM/100  >= 0.10  AND COMM/100<=0.12;

+------+---------+------+
| SNUM | SNAME   | COMM |
+------+---------+------+
| 1001 | Peel    |   12 |
| 1003 | AxelRod |   10 |
| 1004 | Motika  |   11 |
+------+---------+------+


79) Write a query that will give you the names and cities of all salespeople in London with a commission above 0.10.

mysql> SELECT SNAME, CITY FROM Salespeople
    -> WHERE
    -> COMM/100 >0.10 AND CITY="LONDON";

+--------+--------+
| SNAME  | CITY   |
+--------+--------+
| Peel   | London |
| Motika | London |
| Fran   | London |
+--------+--------+


80) Write a query that selects each customer’s smallest order.

mysql> SELECT CNUM,MIN(AMT) AS "Smallest Order" FROM Orders GROUP BY CNUM;

+------+----------------+
| CNUM | Smallest Order |
+------+----------------+
| 2008 |          18.69 |
| 2007 |         1900.1 |
| 2001 |         767.19 |
| 2003 |        5160.45 |
| 2004 |          75.75 |
| 2006 |           4723 |
| 2002 |        1713.23 |
+------+----------------+


81) Write a query that selects the first customer in alphabetical order whose name begins with ‘G’. 

mysql> SELECT CNAME FROM Customers
    -> WHERE
    -> CNAME LIKE "G%" LIMIT 1;

+----------+
| CNAME    |
+----------+
| Giovanni |
+----------+


82) Write a query that counts the number of different non NULL city values in the customers table. 

mysql> SELECT COUNT(DISTINCT(CITY)) AS "COUNT" FROM Customers
    -> WHERE
    -> CITY IS NOT NULL;

+-------+
| COUNT |
+-------+
|     4 |
+-------+


83) Find the average amount from the Orders Table.

mysql> SELECT AVG(AMT) AS "Average Amount" FROM Orders;

+-------------------+
| Average Amount    |
+-------------------+
| 2665.840002250671 |
+-------------------+


84) Find all customers who are not located in SanJose and whose rating is above 200.

mysql> SELECT CNUM,CNAME,CITY,RATING,SNUM FROM Customers
    -> WHERE
    -> CITY!='SanJose' AND RATING>200;

+------+-------+--------+--------+------+
| CNUM | CNAME | CITY   | RATING | SNUM |
+------+-------+--------+--------+------+
| 2004 | Grass | Berlin |    300 | 1002 |
+------+-------+--------+--------+------+


85) Give a simpler way to write this query.SELECT snum, sname, city, comm FROM salespeople WHERE (comm > + 0.12 OR comm &lt; 0.14);

mysql> SELECT SNUM,SNAME,CITY,COMM FROM Salespeople
    -> WHERE
    -> COMM/100 > 0.12 OR COMM/100< 0.14;

+------+---------+-----------+------+
| SNUM | SNAME   | CITY      | COMM |
+------+---------+-----------+------+
| 1001 | Peel    | London    |   12 |
| 1002 | Serres  | SanJose   |   13 |
| 1003 | AxelRod | New York  |   10 |
| 1004 | Motika  | London    |   11 |
| 1007 | Rifkin  | Barcelona |   15 |
| 1008 | Fran    | London    |   25 |
+------+---------+-----------+------+


86) Which salespersons attend to customers not in the city they have been assigned to? 

mysql> SELECT Salespeople.SNUM, Salespeople.SNAME FROM Salespeople
    -> WHERE
    -> SNUM = ANY(SELECT SNUM FROM Customers
    -> WHERE
    -> Salespeople.CITY!= Customers.CITY );

+------+---------+
| SNUM | SNAME   |
+------+---------+
| 1002 | Serres  |
| 1003 | AxelRod |
| 1004 | Motika  |
| 1007 | Rifkin  |
+------+---------+


87) Which salespeople get commission greater than 0.11 are serving customers rated less than 250? 

mysql> SELECT SNUM,SNAME,CITY,COMM FROM Salespeople
    -> WHERE
    -> COMM/100 > 0.11 AND SNUM = ANY(SELECT SNUM FROM Customers
    -> WHERE
    -> RATING <250);

+------+--------+---------+------+
| SNUM | SNAME  | CITY    | COMM |
+------+--------+---------+------+
| 1001 | Peel   | London  |   12 |
| 1002 | Serres | SanJose |   13 |
+------+--------+---------+------+


88) Which salespeople have been assigned to the same city but get different commission percentages?

mysql> SELECT SNUM,SNAME FROM Salespeople
    -> WHERE
    -> SNUM IN (SELECT c1.SNUM FROM Customers c1,Customers c2
    -> WHERE
    -> c1.CITY = c2.CITY AND c1.SNUM != c2.SNUM);

+------+---------+
| SNUM | SNAME   |
+------+---------+
| 1002 | Serres  |
| 1003 | AxelRod |
| 1004 | Motika  |
| 1007 | Rifkin  |
+------+---------+


89) Which salesperson has earned the maximum commission?

mysql> SELECT a.CNAME,b.SNAME,b.COMM,ROUND((SUM(C.AMT)*b.COMM)/100) as "Max Commission" 
    -> FROM Customers a,Salespeople b,Orders c
    -> WHERE
    -> a.SNUM = b.SNUM AND
    -> a.CNUM = c.CNUM GROUP BY b.SNAME ORDER BY "Max Commission"  DESC LIMIT 1;

+---------+-------+------+----------------+
| CNAME   | SNAME | COMM | Max Commission |
+---------+-------+------+----------------+
| Hoffman | Peel  |   12 |           1846 |
+---------+-------+------+----------------+


90) Does the customer who has placed the maximum number of orders have the maximum rating?

mysql> SELECT a.CNUM,a.RATING,b.ONUM,COUNT(ONUM) as Orders_count FROM Customers a, Orders b
    -> WHERE
    -> a.CNUM = b.CNUM GROUP BY a.CNUM
    -> ORDER BY a.RATING DESC;

+------+--------+------+--------------+
| CNUM | RATING | ONUM | Orders_count |
+------+--------+------+--------------+
| 2008 |    300 | 3001 |            2 |
| 2004 |    300 | 3007 |            2 |
| 2003 |    200 | 3005 |            1 |
| 2002 |    200 | 3009 |            1 |
| 2007 |    100 | 3002 |            1 |
| 2001 |    100 | 3003 |            1 |
| 2006 |    100 | 3008 |            2 |
+------+--------+------+--------------+


91) List all customers in descending order of customer rating 

mysql> SELECT CNUM,CNAME,CITY, RATING FROM CUSTOMERS ORDER BY(RATING) DESC;

+------+----------+---------+--------+
| CNUM | CNAME    | CITY    | RATING |
+------+----------+---------+--------+
| 2004 | Grass    | Berlin  |    300 |
| 2008 | Cisneros | SanJose |    300 |
| 2002 | Giovanni | Rome    |    200 |
| 2003 | Liu      | SanJose |    200 |
| 2001 | Hoffman  | London  |    100 |
| 2006 | Clemens  | London  |    100 |
| 2007 | Pereira  | Rome    |    100 |
+------+----------+---------+--------+


92) On which days has Hoffman placed orders? 

mysql> SELECT ODATE FROM Orders
    -> WHERE
    -> CNUM = ANY (SELECT CNUM FROM Customers
    -> WHERE
    -> CNAME="Hoffman");

+------------+
| ODATE      |
+------------+
| 1990-10-03 |
+------------+


93) Which salesmen have no orders between 10/03/1990 and 10/05/1990?

mysql> SELECT SNUM,SNAME FROM salespeople
    -> WHERE SNUM NOT IN (SELECT DISTINCT SNUM FROM ORDERS
    -> WHERE ODATE  BETWEEN "90-10-03" AND "90-10-05");

+------+-------+
| SNUM | SNAME |
+------+-------+
| 1008 | Fran  |
+------+-------+


94) How many salespersons have succeeded in getting orders?

mysql> SELECT COUNT(SNUM)  AS "Number of Salesperson having orders" FROM Salespeople
    -> WHERE
    -> SNUM = ANY(SELECT DISTINCT(SNUM) FROM Orders);

+-------------------------------------+
| Number of Salesperson having orders |
+-------------------------------------+
|                                   5 |
+-------------------------------------+


95) How many customers have placed orders? 

mysql> SELECT COUNT(CNUM) AS "Number of Customer placed Orders" FROM Customers
    -> WHERE
    -> CNUM = ANY(SELECT DISTINCT(CNUM) FROM Orders);

+----------------------------------+
| Number of Customer placed Orders |
+----------------------------------+
|                                7 |
+----------------------------------+


96) On which date has each salesman booked an order of maximum value? 

mysql> SELECT ODATE,SNUM,AMT FROM Orders
    -> WHERE
    -> AMT IN(SELECT MAX(AMT) FROM Orders GROUP BY SNUM);
+------------+------+---------+
| ODATE      | SNUM | AMT     |
+------------+------+---------+
| 1990-10-03 | 1004 |  1900.1 |
| 1990-10-03 | 1002 | 5160.45 |
| 1990-10-03 | 1007 | 1098.16 |
| 1990-10-04 | 1003 | 1713.23 |
| 1990-10-06 | 1001 | 9891.88 |
+------------+------+---------+


97) Who is the most successful salesperson? 

mysql> SELECT SNAME, SUM(AMT) AS "TOTAL_AMOUNT"
    -> FROM Orders o
    -> JOIN Salespeople s ON o.SNUM = s.SNUM
    -> GROUP BY o.SNUM
    -> ORDER BY TOTAL_AMOUNT DESC LIMIT 1;

+-------+--------------------+
| SNAME | TOTAL_AMOUNT       |
+-------+--------------------+
| Peel  | 15382.069885253906 |
+-------+--------------------+


98) Which customers have the same rating?

mysql> SELECT c1.CNAME,c2.CNAME,c1.RATING FROM Customers c1 , Customers c2 WHERE c1.RATING = c2.RATING
    -> AND
    -> c1.CNAME!=c2.CNAME ORDER BY C1.RATING;

+----------+----------+--------+
| CNAME    | CNAME    | RATING |
+----------+----------+--------+
| Pereira  | Hoffman  |    100 |
| Clemens  | Hoffman  |    100 |
| Pereira  | Clemens  |    100 |
| Hoffman  | Clemens  |    100 |
| Clemens  | Pereira  |    100 |
| Hoffman  | Pereira  |    100 |
| Liu      | Giovanni |    200 |
| Giovanni | Liu      |    200 |
| Cisneros | Grass    |    300 |
| Grass    | Cisneros |    300 |
+----------+----------+--------+


99) Find all orders greater than the average for October 4th. 

mysql> SELECT ONUM,AMT FROM Orders WHERE AMT > (SELECT AVG(AMT) FROM Orders
    -> WHERE
    -> ODATE="1990-10-04");

+------+---------+
| ONUM | AMT     |
+------+---------+
| 3002 |  1900.1 |
| 3005 | 5160.45 |
| 3006 | 1098.16 |
| 3008 |    4723 |
| 3009 | 1713.23 |
| 3010 | 1309.95 |
| 3011 | 9891.88 |
+------+---------+


100) List all customers with ratings above Grass’s average. 

mysql> SELECT CNAME,RATING FROM Customers
    -> WHERE RATING > (SELECT (AVG(RATING)) FROM Customers
    -> WHERE
    -> CNAME="Grass");

Empty set (0.01 sec)


101) Which customers have above average orders? 

mysql> SELECT ONUM,ODATE,AMT,CNUM FROM Orders
    -> WHERE
    -> AMT > (SELECT AVG(AMT) FROM Orders);
+------+------------+---------+------+
| ONUM | ODATE      | AMT     | CNUM |
+------+------------+---------+------+
| 3005 | 1990-10-03 | 5160.45 | 2003 |
| 3008 | 1990-10-05 |    4723 | 2006 |
| 3011 | 1990-10-06 | 9891.88 | 2006 |
+------+------------+---------+------+


102) Select the total amount in orders for each salesperson for which the total is greater than the amount of the largest order in the table.

mysql> SELECT S.SNAME, SUM(O.AMT) AS TOTAL_AMOUNT
    -> FROM Salespeople S, Orders O
    -> WHERE
    -> S.SNUM = O.SNUM
    -> GROUP BY S.SNAME
    -> HAVING
    -> SUM(O.AMT) > (SELECT MAX(AMT) FROM Orders);

+-------+--------------------+
| SNAME | TOTAL_AMOUNT       |
+-------+--------------------+
| Peel  | 15382.069885253906 |
+-------+--------------------+


103) Give names and numbers of all salespersons that have more than one customer?

mysql> SELECT SNUM, SNAME FROM Salespeople
    -> WHERE
    -> SNUM = ANY(SELECT SNUM FROM Customers GROUP BY SNUM
    -> HAVING
    -> COUNT(SNUM)>1);

+------+--------+
| SNUM | SNAME  |
+------+--------+
| 1001 | Peel   |
| 1002 | Serres |
+------+--------+


104) Select all salespeople by name and number who have customers in their city whom they don’t service.

mysql> SELECT DISTINCT (s.SNAME),s.SNUM,c.City FROM Salespeople s,Customers c
    -> WHERE
    -> s.CITY =c.CITY AND s.SNUM!=c.SNUM;

+--------+------+---------+
| SNAME  | SNUM | City    |
+--------+------+---------+
| Fran   | 1008 | London  |
| Motika | 1004 | London  |
| Serres | 1002 | SanJose |
+--------+------+---------+


105) Does the total amount in orders by customer in Rome and London, exceed the commission paid to salesperson in London, and New York by more than 5 times? 

mysql> SELECT IF((SELECT (SELECT SUM(a.AMT) FROM Orders a, Customers b WHERE a.CNUM = b.cnum
    -> AND (b.CITY = 'Rome' OR b.CITY = 'London')) > (SELECT SUM(a.AMT * C.COMM / 100) FROM Orders a, Customers b, Salespeople c
    -> WHERE
    -> a.CNUM = b.CNUM AND b.SNUM = c.SNUM AND (c.CITY = 'London' OR c.CITY = 'New York')) AS 'Total Commision'),
    -> 'True', 'False') AS 'Exceed by 5 times';

+-------------------+
| Exceed by 5 times |
+-------------------+
| True              |
+-------------------+


106) Which are the date, order number, amt and city for each salesperson (by name) for the maximum order he has obtained?

mysql> SELECT o.ONUM, o.SNUM,s.CITY,o.ODATE,o.AMT FROM Orders o, Salespeople s
    -> WHERE
    -> o.SNUM = s.SNUM AND AMT IN(SELECT MAX(AMT) FROM Orders GROUP BY SNUM);

+------+------+-----------+------------+---------+
| ONUM | SNUM | CITY      | ODATE      | AMT     |
+------+------+-----------+------------+---------+
| 3002 | 1004 | London    | 1990-10-03 |  1900.1 |
| 3005 | 1002 | SanJose   | 1990-10-03 | 5160.45 |
| 3006 | 1007 | Barcelona | 1990-10-03 | 1098.16 |
| 3009 | 1003 | New York  | 1990-10-04 | 1713.23 |
| 3011 | 1001 | London    | 1990-10-06 | 9891.88 |
+------+------+-----------+------------+---------+


107) Which salesperson is having lowest commission

mysql> SELECT SNAME, SNUM FROM Salespeople
    -> WHERE
    -> COMM = (SELECT MIN(COMM) FROM Salespeople);

+---------+------+
| SNAME   | SNUM |
+---------+------+
| AxelRod | 1003 |
+---------+------+
