CREATE TABLE Saleseople (
    SNUM INT PRIMARY KEY,
    SNAME VARCHAR(20),
    CITY VARCHAR(20),
    COMM INT
);

INSERT INTO Salespeople(SNUM,SNAME,CITY,COMM)VALUES(1001,'Peel','London',12);
INSERT INTO Salespeople(SNUM,SNAME,CITY,COMM)VALUES(1002,'Serres','SanJose',13);
INSERT INTO Salespeople(SNUM,SNAME,CITY,COMM)VALUES(1004,'Motika','London',11);
INSERT INTO Salespeople(SNUM,SNAME,CITY,COMM)VALUES(1007,'Rifkin','Barcelona',15);
INSERT INTO Salespeople(SNUM,SNAME,CITY,COMM)VALUES(1003,'AxelRod','New York',10);
INSERT INTO Salespeople(SNUM,SNAME,CITY,COMM)VALUES(1008,'Fran','London',25);


SELECT 
    SNUM, SNAME, CITY, COMM
FROM
    Salespeople;

+------+---------+-----------+------+
| SNUM | SNAME   | CITY      | COMM |
+------+---------+-----------+------+
| 1001 | Peel    | London    |   12 |
| 1002 | Serres  | SanJose   |   13 |
| 1003 | AxelRod | New York  |   10 |
| 1004 | Motika  | London    |   11 |
| 1007 | Rifkin  | Barcelona |   15 |
| 1008 | Fran    | London    |   25 |
+------+---------+-----------+------+

CREATE TABLE Customers (
    CNUM INT PRIMARY KEY,
    CNAME VARCHAR(20),
    CITY VARCHAR(20),
    RATING INT,
    SNUM INT,
    FOREIGN KEY (SNUM)
        REFERENCES Salespeople(SNUM)
);

INSERT INTO Customers(CNUM,CNAME,CITY,RATING,SNUM)VALUE(2001,'Hoffman','London',100,1001);
INSERT INTO Customers(CNUM,CNAME,CITY,RATING,SNUM)VALUE(2002,'Giovanni','Rome',200,1003);
INSERT INTO Customers(CNUM,CNAME,CITY,RATING,SNUM)VALUE(2003,'Liu','SanJose',200,1002);
INSERT INTO Customers(CNUM,CNAME,CITY,RATING,SNUM)VALUE(2004,'Grass','Berlin',300,1002);
INSERT INTO Customers(CNUM,CNAME,CITY,RATING,SNUM)VALUE(2006,'Clemens','London',100,1001);
INSERT INTO Customers(CNUM,CNAME,CITY,RATING,SNUM)VALUE(2008,'Cisneros','SanJose',300,1007);
INSERT INTO Customers(CNUM,CNAME,CITY,RATING,SNUM)VALUE(2007,'Pereira','Rome',100,1004);


SELECT 
    CNUM, CNAME, CITY, RATING, SNUM
FROM
    Customers;

+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2001 | Hoffman  | London  |    100 | 1001 |
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2006 | Clemens  | London  |    100 | 1001 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
+------+----------+---------+--------+------+


CREATE TABLE Orders (
    ONUM INT PRIMARY KEY,
    AMT FLOAT,
    ODATE DATE,
    CNUM INT,
    SNUM INT,
    FOREIGN KEY (SNUM)
        REFERENCES SalesPerson (SNUM)
);


INSERT INTO Orders VALUES
(3001,18.69,"1990-10-03",2008,1007),
(3003,767.19,"1990-10-03",2001,1001),
(3002,1900.10,"1990-10-03",2007,1004),
(3005,5160.45,"1990-10-03",2003,1002),
(3006,1098.16,"1990-10-03",2008,1007),
(3009,1713.23,"1990-10-04",2002,1003),
(3007,75.75,"1990-10-04",2004,1002),
(3008,4723.00,"1990-10-05",2006,1001),
(3010,1309.95,"1990-10-06",2004,1002),
(3011,9891.88,"1990-10-06",2006,1001);

SELECT 
    ONUM, AMT, ODATE, CNUM, SNUM
FROM
    Orders;

+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-10-03 | 2008 | 1007 |
| 3002 |  1900.1 | 1990-10-03 | 2007 | 1004 |
| 3003 |  767.19 | 1990-10-03 | 2001 | 1001 |
| 3005 | 5160.45 | 1990-10-03 | 2003 | 1002 |
| 3006 | 1098.16 | 1990-10-03 | 2008 | 1007 |
| 3007 |   75.75 | 1990-10-04 | 2004 | 1002 |
| 3008 |    4723 | 1990-10-05 | 2006 | 1001 |
| 3009 | 1713.23 | 1990-10-04 | 2002 | 1003 |
| 3010 | 1309.95 | 1990-10-06 | 2004 | 1002 |
| 3011 | 9891.88 | 1990-10-06 | 2006 | 1001 |
+------+---------+------------+------+------+



1) List all the columns of the Salespeople table. 

SHOW COLUMNS FROM Salespeople;

OR

DESC salespeople;

+-------+-------------+------+-----+---------+-------+
| Field | Type        | Null | Key | Default | Extra |
+-------+-------------+------+-----+---------+-------+
| SNUM  | int         | NO   | PRI | NULL    |       |
| SNAME | varchar(20) | YES  |     | NULL    |       |
| CITY  | varchar(20) | YES  |     | NULL    |       |
| COMM  | int         | YES  |     | NULL    |       |
+-------+-------------+------+-----+---------+-------+


2) List all customers with a rating of 100. 

SELECT 
    CNUM, CNAME, CITY, RATING, SNUM
FROM
    Customers
WHERE
    RATING = 100;

+------+---------+--------+--------+------+
| CNUM | CNAME   | CITY   | RATING | SNUM |
+------+---------+--------+--------+------+
| 2001 | Hoffman | London |    100 | 1001 |
| 2006 | Clemens | London |    100 | 1001 |
| 2007 | Pereira | Rome   |    100 | 1004 |
+------+---------+--------+--------+------+


3) Find the largest order taken by each salesperson on each date.

SELECT 
    SNUM, ODATE, MAX(AMT) AS 'Maximum Amount'
FROM
    Orders
GROUP BY ODATE, ONUM;

+------+------------+----------------+
| SNUM | ODATE      | Maximum Amount |
+------+------------+----------------+
| 1007 | 1990-10-03 |          18.69 |
| 1004 | 1990-10-03 |         1900.1 |
| 1001 | 1990-10-03 |         767.19 |
| 1002 | 1990-10-03 |        5160.45 |
| 1007 | 1990-10-03 |        1098.16 |
| 1002 | 1990-10-04 |          75.75 |
| 1001 | 1990-10-05 |           4723 |
| 1003 | 1990-10-04 |        1713.23 |
| 1002 | 1990-10-06 |        1309.95 |
| 1001 | 1990-10-06 |        9891.88 |
+------+------------+----------------+


4) Arrange the Order table by descending customer number.

SELECT 
    ONUM, AMT, ODATE, CNUM, SNUM
FROM
    Orders
ORDER BY CNUM DESC;

+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-10-03 | 2008 | 1007 |
| 3006 | 1098.16 | 1990-10-03 | 2008 | 1007 |
| 3002 |  1900.1 | 1990-10-03 | 2007 | 1004 |
| 3008 |    4723 | 1990-10-05 | 2006 | 1001 |
| 3011 | 9891.88 | 1990-10-06 | 2006 | 1001 |
| 3007 |   75.75 | 1990-10-04 | 2004 | 1002 |
| 3010 | 1309.95 | 1990-10-06 | 2004 | 1002 |
| 3005 | 5160.45 | 1990-10-03 | 2003 | 1002 |
| 3009 | 1713.23 | 1990-10-04 | 2002 | 1003 |
| 3003 |  767.19 | 1990-10-03 | 2001 | 1001 |
+------+---------+------------+------+------+


5) Find which salespeople currently have orders in the order table. 

-- using subquery

SELECT 
    SNUM, SNAME
FROM
    Salespeople
WHERE
    SNUM = ANY (SELECT DISTINCT
            (SNUM)
        FROM
            Orders);

-- using join

SELECT 
    S.SNUM, S.SNAME
FROM
    SALESPEOPLE S
        JOIN
    ORDERS O ON S.SNUM = O.SNUM
GROUP BY S.SNAME;

+------+---------+
| SNUM | SNAME   |
+------+---------+
| 1001 | Peel    |
| 1002 | Serres  |
| 1003 | AxelRod |
| 1004 | Motika  |
| 1007 | Rifkin  |
+------+---------+


6) List names of all customers matched with the salespeople serving them. 
    
SELECT 
    C.CNAME, S.SNAME
FROM
    Salespeople S
        JOIN
    Customers C ON C.SNUM = S.SNUM;

+----------+---------+
| CNAME    | SNAME   |
+----------+---------+
| Hoffman  | Peel    |
| Giovanni | AxelRod |
| Liu      | Serres  |
| Grass    | Serres  |
| Clemens  | Peel    |
| Cisneros | Rifkin  |
| Pereira  | Motika  |
+----------+---------+


7) Find the names and numbers of all salespeople who have more than one customer. 

-- using Subquery

SELECT 
    SNAME, SNUM
FROM
    Salespeople
WHERE
    SNUM = ANY (SELECT 
            SNUM
        FROM
            Customers
        GROUP BY SNUM
        HAVING COUNT(SNUM) > 1);

-- using joins

SELECT 
    S.SNAME, S.SNUM
FROM
    Salespeople S
        JOIN
    Customers C ON S.SNUM = C.SNUM
GROUP BY S.SNUM
HAVING COUNT(S.SNUM) > 1;

+--------+------+
| SNAME  | SNUM |
+--------+------+
| Peel   | 1001 |
| Serres | 1002 |
+--------+------+


8) Count the orders of each of the salespeople and output the results in descending order. 

SELECT 
    S.SNAME, S.SNUM, COUNT(O.ONUM) AS 'Number of Orders'
FROM
    Salespeople S
        LEFT JOIN
    Orders O ON S.SNUM = O.SNUM
GROUP BY O.SNUM
ORDER BY 'Number_of_Orders' DESC;

+------+------------------+
| SNUM | Number of Orders |
+------+------------------+
| 1001 |                3 |
| 1002 |                3 |
| 1003 |                1 |
| 1004 |                1 |
| 1007 |                2 |
| 1008 |                0 |
+------+------------------+


9) List the customer table if and only if one or more of the customers in the Customer table are located in SanJose. 

SELECT 
    CNUM, CNAME, CITY, RATING, SNUM
FROM
    Customers
WHERE
    EXISTS( SELECT 
            CITY
        FROM
            Customers
        WHERE
            CITY = 'SanJose');

+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2001 | Hoffman  | London  |    100 | 1001 |
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2006 | Clemens  | London  |    100 | 1001 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
+------+----------+---------+--------+------+


10) Match salespeople to customers according to what city they live in.

SELECT 
    S.SNAME, C.CNAME, C.CITY
FROM
    Customers C
        JOIN
    Salespeople S ON C.CITY = S.CITY;

+--------+----------+---------+
| SNAME  | CNAME    | CITY    |
+--------+----------+---------+
| Fran   | Hoffman  | London  |
| Motika | Hoffman  | London  |
| Peel   | Hoffman  | London  |
| Serres | Liu      | SanJose |
| Fran   | Clemens  | London  |
| Motika | Clemens  | London  |
| Peel   | Clemens  | London  |
| Serres | Cisneros | SanJose |
+--------+----------+---------+


11) Find all the customers in SanJose who have a rating above 200.

SELECT 
    CNAME
FROM
    Customers
WHERE
    RATING > 200 AND CITY = 'SanJose';
    
+----------+
| CNAME    |
+----------+
| Cisneros |
+----------+


12) List the names and commissions of all salespeople in London. 

SELECT 
    SNAME, COMM
FROM
    Salespeople
WHERE
    CITY = 'London';

+--------+------+
| SNAME  | COMM |
+--------+------+
| Peel   |   12 |
| Motika |   11 |
| Fran   |   25 |
+--------+------+


13) List all the orders of Salesperson Motika from the orders table.

-- using subquery

SELECT 
    ONUM
FROM
    Orders
WHERE
    SNUM = ANY (SELECT 
            SNUM
        FROM
            Salespeople
        WHERE
            SNAME = 'Motika');

-- using Joins

SELECT 
    O.ONUM
FROM
    Orders O
        INNER JOIN
    Salespeople S ON O.SNUM = S.SNUM
WHERE
    S.SNAME = 'Motika';

+------+
| ONUM |
+------+
| 3002 |
+------+


14) Find all customers who booked orders on October 3. 

SELECT DISTINCT
    (C.CNAME), O.CNUM
FROM
    Customers C
        JOIN
    Orders O ON C.CNUM = O.CNUM AND ODATE = '90-10-03';

+----------+------+
| CNAME    | CNUM |
+----------+------+
| Hoffman  | 2001 |
| Liu      | 2003 |
| Cisneros | 2008 |
| Pereira  | 2007 |
+----------+------+


15) Give the sums of the amounts from the Orders table, grouped by date, eliminating all those dates where the SUM was not at least 2000 above the maximum Amount. 

SELECT 
    SUM(AMT) AS 'Amount Sum'
FROM
    Orders
GROUP BY ODATE
HAVING SUM(AMT) >= (SELECT 
        MAX(AMT) + 2000
    FROM
        ORDERS);

Empty set (0.17 sec)


16) Select all orders that had amounts that were greater than at least one of the orders from October 6.

SELECT 
    ONUM, AMT, ODATE, CNUM, SNUM
FROM
    ORDERS
WHERE
    AMT > ANY (SELECT 
            AMT
        FROM
            Orders
        WHERE
            ODATE = '90-10-06');

+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3002 |  1900.1 | 1990-10-03 | 2007 | 1004 |
| 3005 | 5160.45 | 1990-10-03 | 2003 | 1002 |
| 3008 |    4723 | 1990-10-05 | 2006 | 1001 |
| 3009 | 1713.23 | 1990-10-04 | 2002 | 1003 |
| 3011 | 9891.88 | 1990-10-06 | 2006 | 1001 |
+------+---------+------------+------+------+


17) Write a query that uses the EXISTS operator to extract all salespeople who have customers with a rating of 300.

SELECT 
    SNUM, SNAME, CITY, COMM
FROM
    Salespeople
WHERE
    EXISTS( SELECT 
            CNUM, CNAME, CITY, RATING, SNUM
        FROM
            Customers
        WHERE
            Customers.SNUM = Salespeople.SNUM
                AND Customers.RATING = 300);

+------+--------+-----------+------+
| SNUM | SNAME  | CITY      | COMM |
+------+--------+-----------+------+
| 1002 | Serres | SanJose   |   13 |
| 1007 | Rifkin | Barcelona |   15 |
+------+--------+-----------+------+


18) Find all customers whose cnum is 1000 above the snum of Serres. 

SELECT 
    CNUM, CNAME
FROM
    Customers
WHERE
    CNUM > 1000 + (SELECT 
            SNUM
        FROM
            Salespeople
        WHERE
            SNAME = 'Serres');

+------+----------+
| CNUM | CNAME    |
+------+----------+
| 2003 | Liu      |
| 2004 | Grass    |
| 2006 | Clemens  |
| 2008 | Cisneros |
| 2007 | Pereira  |
+------+----------+


19) Give the salespeople’s commissions as percentages instead of decimal numbers. 

SELECT 
    SNUM, SNAME, CONCAT(COMM, '%') AS comm_percentage
FROM
    salespeople;

+------+---------+-----------------+
| SNUM | SNAME   | comm_percentage |
+------+---------+-----------------+
| 1001 | Peel    | 12%             |
| 1002 | Serres  | 13%             |
| 1003 | AxelRod | 10%             |
| 1004 | Motika  | 11%             |
| 1007 | Rifkin  | 15%             |
| 1008 | Fran    | 25%             |
+------+---------+-----------------+

20) Find the largest order taken by each salesperson on each date, eliminating those Maximum orders, which are less than 3000.

SELECT 
    SNUM, ODATE, MAX(AMT) AS 'Maximum Amount'
FROM
    Orders
GROUP BY ODATE , SNUM
HAVING MAX(AMT) > 3000;

+------+------------+----------------+
| SNUM | ODATE      | Maximum Amount |
+------+------------+----------------+
| 1002 | 1990-10-03 |        5160.45 |
| 1001 | 1990-10-05 |           4723 |
| 1001 | 1990-10-06 |        9891.88 |
+------+------------+----------------+


21) List all the largest orders for October 3, for each salesperson. 

SELECT 
    SNUM, ODATE, MAX(AMT) AS 'Maximum Orders'
FROM
    Orders
GROUP BY ODATE , SNUM
HAVING ODATE = '1990-10-03';

+------+------------+----------------+
| SNUM | ODATE      | Maximum Orders |
+------+------------+----------------+
| 1007 | 1990-10-03 |        1098.16 |
| 1004 | 1990-10-03 |         1900.1 |
| 1001 | 1990-10-03 |         767.19 |
| 1002 | 1990-10-03 |        5160.45 |
+------+------------+----------------+


22) Find all customers located in cities where Serres has customers. 

-- using subquery

SELECT 
    CNUM, CNAME
FROM
    Customers
WHERE
    CITY = ANY (SELECT 
            CITY
        FROM
            Customers
        WHERE
            SNUM = (SELECT 
                    SNUM
                FROM
                    Salespeople
                WHERE
                    SNAME = 'Serres'));

-- using join

SELECT 
    CNUM, CNAME
FROM
    Customers
WHERE
    CITY IN (SELECT 
            C.CITY
        FROM
            Customers C
                INNER JOIN
            Salespeople AS S ON S.SNUM = C.SNUM
        WHERE
            S.SNAME = 'Serres'); 
            
+------+----------+
| CNUM | CNAME    |
+------+----------+
| 2003 | Liu      |
| 2004 | Grass    |
| 2008 | Cisneros |
+------+----------+


23) Select all customers with a rating above 200. 

SELECT 
    CNUM, CNAME, CITY, RATING, SNUM
FROM
    Customers
WHERE
    RATING > 200;

+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+


24) Count the number of salespeople currently having orders in the orders table.

-- using subquery

SELECT 
    COUNT(DISTINCT SNUM) AS 'Customers having orders'
FROM
    Orders;

-- using join

SELECT 
    COUNT(DISTINCT S.SNUM) AS 'Customers having orders'
FROM
    Salespeople S
        JOIN
    Orders O ON S.SNUM = O.SNUM;

+-------------------------+
| Customers having orders |
+-------------------------+
|                       5 |
+-------------------------+


25) Write a query that produces all customers serviced by salespeople with a commission above 12%. Output the customer’s name, salesperson’s name and the salesperson’s rate of commission. 

SELECT 
    Customers.CNAME, Salespeople.COMM
FROM
    Customers
        JOIN
    Salespeople ON Customers.SNUM = Salespeople.SNUM
        AND Salespeople.COMM > 12;

+----------+------+
| CNAME    | COMM |
+----------+------+
| Liu      |   13 |
| Grass    |   13 |
| Cisneros |   15 |
+----------+------+


26) Find salespeople who have multiple customers.

-- using subquery

SELECT 
    SNUM, COUNT(SNUM) AS 'COUNT'
FROM
    Customers
GROUP BY SNUM
HAVING COUNT(SNUM) > 1;

-- using join

SELECT 
    S.SNUM, COUNT(S.SNUM) AS 'COUNT'
FROM
    Salespeople S
        JOIN
    Customers C ON S.SNUM = C.SNUM
GROUP BY S.SNUM
HAVING COUNT(C.CNUM) > 1;


+------+-------+
| SNUM | COUNT |
+------+-------+
| 1001 |     2 |
| 1002 |     2 |
+------+-------+


27) Find salespeople with customers located in their own cities.

SELECT 
    S.SNUM, SNAME, S.CITY, C.CNUM, C.CNAME
FROM
    Salespeople S
        JOIN
    Customers C ON S.SNUM = C.SNUM AND S.CITY = C.CITY;

+------+--------+---------+------+---------+
| SNUM | SNAME  | CITY    | CNUM | CNAME   |
+------+--------+---------+------+---------+
| 1001 | Peel   | London  | 2001 | Hoffman |
| 1002 | Serres | SanJose | 2003 | Liu     |
| 1001 | Peel   | London  | 2006 | Clemens |
+------+--------+---------+------+---------+


28) Find all salespeople whose name starts with ‘P’ and fourth character is 'I'.

SELECT 
    SNAME
FROM
    Salespeople
WHERE
    SNAME LIKE 'P__I%';

Empty set (0.00 sec)


29) Write a query that uses a subquery to obtain all orders for the customer named ‘Cisneros’. Assume you do not know his customer number. 

-- using subquery

 SELECT 
    ONUM
FROM
    Orders
WHERE
    SNUM = (SELECT 
            SNUM
        FROM
            Customers
        WHERE
            CNAME = 'Cisneros');

-- using join
  
SELECT 
    Orders.ONUM
FROM
    Orders
        INNER JOIN
    Customers ON Orders.CNUM = Customers.CNUM
WHERE
    Customers.CNAME = 'Cisneros';

+------+
| ONUM |
+------+
| 3001 |
| 3006 |
+------+


30) Find the largest orders for Serres and Rifkin.

SELECT 
    SNUM, MAX(AMT) AS 'Maximum Amount'
FROM
    Orders
GROUP BY SNUM
HAVING SNUM IN (SELECT 
        SNUM
    FROM
        Salespeople
    WHERE
        SNAME = 'Serres' OR SNAME = 'Rifkin');

+------+---------------------+
| SNUM | Maximum Amount(AMT) |
+------+---------------------+
| 1002 |  5160.45            |
| 1007 |  1098.16            |
+------+---------------------+


31) Sort the salespeople table in the following order: snum, sname, commission, city. 

SELECT 
    SNUM, SNAME, COMM, CITY
FROM
    Salespeople;

+------+---------+------+-----------+
| SNUM | SNAME   | COMM | CITY      |
+------+---------+------+-----------+
| 1001 | Peel    |   12 | London    |
| 1002 | Serres  |   13 | SanJose   |
| 1003 | AxelRod |   10 | New York  |
| 1004 | Motika  |   11 | London    |
| 1007 | Rifkin  |   15 | Barcelona |
| 1008 | Fran    |   25 | London    |
+------+---------+------+-----------+


32) Select all customers whose names fall in between ‘A’ and ‘G’ alphabetical range. 

SELECT 
    CNAME
FROM
    Customers
WHERE
    CNAME BETWEEN 'A' AND 'H';

+----------+
| CNAME    |
+----------+
| Giovanni |
| Grass    |
| Clemens  |
| Cisneros |
+----------+


33) Select all the possible combinations of customers you can assign.

SELECT 
    C.CNAME, C1.CNAME
FROM
    Customers C
        JOIN
    Customers C1 ON C.CNUM != C1.CNUM;

+----------+----------+
| CNAME    | CNAME    |
+----------+----------+
| Pereira  | Hoffman  |
| Cisneros | Hoffman  |
| Clemens  | Hoffman  |
| Grass    | Hoffman  |
| Liu      | Hoffman  |
| Giovanni | Hoffman  |
| Pereira  | Giovanni |
| Cisneros | Giovanni |
| Clemens  | Giovanni |
| Grass    | Giovanni |
| Liu      | Giovanni |
| Hoffman  | Giovanni |
| Pereira  | Liu      |
| Cisneros | Liu      |
| Clemens  | Liu      |
| Grass    | Liu      |
| Giovanni | Liu      |
| Hoffman  | Liu      |
| Pereira  | Grass    |
| Cisneros | Grass    |
| Clemens  | Grass    |
| Liu      | Grass    |
| Giovanni | Grass    |
| Hoffman  | Grass    |
| Pereira  | Clemens  |
| Cisneros | Clemens  |
| Grass    | Clemens  |
| Liu      | Clemens  |
| Giovanni | Clemens  |
| Hoffman  | Clemens  |
| Pereira  | Cisneros |
| Clemens  | Cisneros |
| Grass    | Cisneros |
| Liu      | Cisneros |
| Giovanni | Cisneros |
| Hoffman  | Cisneros |
| Cisneros | Pereira  |
| Clemens  | Pereira  |
| Grass    | Pereira  |
| Liu      | Pereira  |
| Giovanni | Pereira  |
| Hoffman  | Pereira  |
+----------+----------+


34) Select all orders that are greater than the average for October 4. 

SELECT 
    ONUM, AMT, ODATE
FROM
    Orders
WHERE
    AMT > (SELECT 
            AVG(AMT) AS 'Average'
        FROM
            Orders
        GROUP BY ODATE
        HAVING ODATE = '1990-10-04');

+------+---------+------------+
| ONUM | AMT     | ODATE      |
+------+---------+------------+
| 3002 |  1900.1 | 1990-10-03 |
| 3005 | 5160.45 | 1990-10-03 |
| 3006 | 1098.16 | 1990-10-03 |
| 3008 |    4723 | 1990-10-05 |
| 3009 | 1713.23 | 1990-10-04 |
| 3010 | 1309.95 | 1990-10-06 |
| 3011 | 9891.88 | 1990-10-06 |
+------+---------+------------+


35) Write a select command using correlated subquery that selects the names and numbers of all customers with ratings equal to the maximum for their city.

SELECT 
    C1.CNUM, C1.CNAME, C1.CITY, C1.RATING
FROM
    Customers C1
WHERE
    C1.RATING = (SELECT 
            MAX(C2.RATING)
        FROM
            Customers C2
        WHERE
            C1.CITY = C2.CITY);

+------+----------+---------+--------+
| CNUM | CNAME    | CITY    | RATING |
+------+----------+---------+--------+
| 2001 | Hoffman  | London  |    100 |
| 2002 | Giovanni | Rome    |    200 |
| 2004 | Grass    | Berlin  |    300 |
| 2006 | Clemens  | London  |    100 |
| 2008 | Cisneros | SanJose |    300 |
+------+----------+---------+--------+


36) Write a query that totals the orders for each day and places the results in descending order.

SELECT 
    ODATE, ROUND(SUM(AMT)) AS 'Total Orders'
FROM
    Orders
GROUP BY ODATE
ORDER BY SUM(AMT) DESC;

+------------+--------------+
| ODATE      | Total Orders |
+------------+--------------+
| 1990-10-06 |        11202 |
| 1990-10-03 |         8945 |
| 1990-10-05 |         4723 |
| 1990-10-04 |         1789 |
+------------+--------------+


37) Write a select command that produces the rating followed by the name of each customer in SanJose. 

SELECT 
    RATING, CNAME
FROM
    Customers
WHERE
    CITY = 'SanJose';

+--------+----------+
| RATING | CNAME    |
+--------+----------+
|    200 | Liu      |
|    300 | Cisneros |
+--------+----------+


38) Find all orders with amounts smaller than any amount for a customer in SanJose.

SELECT 
    ONUM, AMT
FROM
    Orders
WHERE
    AMT < ANY (SELECT 
            O.AMT
        FROM
            Orders O
                JOIN
            Customers C ON O.CNUM = C.CNUM AND C.CITY = 'SanJose');

+------+---------+
| ONUM | AMT     |
+------+---------+
| 3001 |   18.69 |
| 3002 |  1900.1 |
| 3003 |  767.19 |
| 3006 | 1098.16 |
| 3007 |   75.75 |
| 3008 |    4723 |
| 3009 | 1713.23 |
| 3010 | 1309.95 |
+------+---------+


39) Find all orders with above average amounts for their customers.

SELECT 
    AMT, ONUM
FROM
    Orders
WHERE
    AMT > (SELECT 
            AVG(AMT) AS 'Average Amount'
        FROM
            Orders);

+---------+------+
| AMT     | ONUM |
+---------+------+
| 5160.45 | 3005 |
|    4723 | 3008 |
| 9891.88 | 3011 |
+---------+------+


40) Write a query that selects the highest rating in each city. 

SELECT 
    CITY, MAX(RATING) AS 'Maximum Rating'
FROM
    Customers
GROUP BY CITY;

+---------+----------------+
| CITY    | Maximum Rating |
+---------+----------------+
| London  |            100 |
| Rome    |            200 |
| SanJose |            300 |
| Berlin  |            300 |
+---------+----------------+


41) Write a query that calculates the amount of the salesperson’s commission on each order by a customer with a rating above 100.00

SELECT 
    Salespeople.SNAME,
    Customers.RATING,
    ROUND(Salespeople.COMM * Orders.AMT / 100) AS 'Commission on each'
FROM
    Customers
        INNER JOIN
    Salespeople ON Salespeople.SNUM = Customers.SNUM
        INNER JOIN
    Orders ON Orders.CNUM = Customers.CNUM
WHERE
    Customers.RATING > 100
GROUP BY Orders.ONUM;

+---------+--------+--------------------+
| SNAME   | RATING | Commission on each |
+---------+--------+--------------------+
| Serres  |    200 |                671 |
| Serres  |    300 |                170 |
| Serres  |    300 |                 10 |
| AxelRod |    200 |                171 |
| Rifkin  |    300 |                165 |
| Rifkin  |    300 |                  3 |
+---------+--------+--------------------+


42) Count the customers with ratings above SanJose’s average. 

SELECT 
    COUNT(CNUM) AS 'Customer Count'
FROM
    Customers
WHERE
    RATING > (SELECT 
            AVG(RATING)
        FROM
            Customers
        WHERE
            CITY = 'SanJose');

+----------------+
| Customer Count |
+----------------+
|              2 |
+----------------+


43) Find all salespeople that are located in either Barcelona or London. 

SELECT 
    SNUM, SNAME, CITY, COMM
FROM
    Salespeople
WHERE
    CITY = 'Barcelona' OR CITY = 'London';

+------+--------+-----------+------+
| SNUM | SNAME  | CITY      | COMM |
+------+--------+-----------+------+
| 1001 | Peel   | London    |   12 |
| 1004 | Motika | London    |   11 |
| 1007 | Rifkin | Barcelona |   15 |
| 1008 | Fran   | London    |   25 |
+------+--------+-----------+------+


44) Find all salespeople with only one customer.

-- using subquery

SELECT 
    SNUM, SNAME
FROM
    Salespeople
WHERE
    SNUM = ANY (SELECT 
            SNUM
        FROM
            Customers
        GROUP BY SNUM
        HAVING COUNT(CNUM) = 1);

-- using join

SELECT 
    S.SNUM, S.SNAME
FROM
    Salespeople S
        JOIN
    Customers C ON S.SNUM = C.SNUM
GROUP BY S.SNUM
HAVING COUNT(CNUM) = 1;

+------+---------+
| SNUM | SNAME   |
+------+---------+
| 1003 | AxelRod |
| 1004 | Motika  |
| 1007 | Rifkin  |
+------+---------+


45) Write a query that joins the Customer table to itself to find all pairs or customers served by a single salesperson.


SELECT 
    A.CNAME AS 'Customer 1',
    B.CNAME AS 'Customer 2',
    A.SNUM,
    B.CNUM
FROM
    Customers A
        JOIN
    Customers B ON A.SNUM = B.SNUM AND A.CNUM != B.CNUM;

+------------+------------+------+------+
| Customer 1 | Customer 2 | SNUM | CNUM |
+------------+------------+------+------+
| Hoffman    | Clemens    | 1001 | 2006 |
| Liu        | Grass      | 1002 | 2004 |
| Grass      | Liu        | 1002 | 2003 |
| Clemens    | Hoffman    | 1001 | 2001 |
+------------+------------+------+------+


46) Write a query that will give you all orders for more than $1000.00. 

SELECT 
    ONUM, AMT
FROM
    Orders
WHERE
    AMT > 1000;

+------+---------+
| ONUM | AMT     |
+------+---------+
| 3002 |  1900.1 |
| 3005 | 5160.45 |
| 3006 | 1098.16 |
| 3008 |    4723 |
| 3009 | 1713.23 |
| 3010 | 1309.95 |
| 3011 | 9891.88 |
+------+---------+


47) Write a query that lists each order number followed by the name of the customer who made that order. 

SELECT
    Orders.ONUM, Customers.CNAME
FROM
    Customers
        JOIN
    Orders ON Customers.CNUM = Orders.CNUM;

+------+----------+
| ONUM | CNAME    |
+------+----------+
| 3001 | Cisneros |
| 3002 | Pereira  |
| 3003 | Hoffman  |
| 3005 | Liu      |
| 3006 | Cisneros |
| 3007 | Grass    |
| 3008 | Clemens  |
| 3009 | Giovanni |
| 3010 | Grass    |
| 3011 | Clemens  |
+------+----------+


48) Write a query that selects all the customers whose ratings are equal to or greater than ANY(in the SQL sense) of ‘Serres’. 

-- using subquery

SELECT 
    CNUM, CNAME, CITY, RATING, SNUM
FROM
    Customers
WHERE
    RATING >= ANY (SELECT 
            RATING
        FROM
            Customers
        WHERE
            SNUM = (SELECT 
                    SNUM
                FROM
                    Salespeople
                WHERE
                    SNAME = 'Serres'));
     
-- using join

SELECT 
    CNUM, CNAME, RATING
FROM
    Customers
WHERE
    Rating >= ANY (SELECT 
            Customers.RATING
        FROM
            Customers
                INNER JOIN
            Salespeople ON Customers.SNUM = Salespeople.SNUM
        WHERE
            SNAME = 'Serres');    

+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+


49) Write two queries that will produce all orders taken on October 3 or October 4. 

SELECT
    ONUM, AMT, ODATE, CNUM, SNUM
FROM
    ORDERS
WHERE
    ODATE = '90-10-03'
UNION SELECT 
    ONUM, AMT, ODATE, CNUM, SNUM
FROM
    ORDERS
WHERE
    ODATE = '90-10-04';

+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-10-03 | 2008 | 1007 |
| 3002 |  1900.1 | 1990-10-03 | 2007 | 1004 |
| 3003 |  767.19 | 1990-10-03 | 2001 | 1001 |
| 3005 | 5160.45 | 1990-10-03 | 2003 | 1002 |
| 3006 | 1098.16 | 1990-10-03 | 2008 | 1007 |
| 3007 |   75.75 | 1990-10-04 | 2004 | 1002 |
| 3009 | 1713.23 | 1990-10-04 | 2002 | 1003 |
+------+---------+------------+------+------+


50) Find only those customers whose ratings are higher than every customer in Rome

SELECT 
    CNAME, RATING
FROM
    Customers
WHERE
    RATING > ANY (SELECT 
            MAX(RATING)
        FROM
            Customers
        WHERE
            CITY = 'Rome');

+----------+--------+
| CNAME    | RATING |
+----------+--------+
| Grass    |    300 |
| Cisneros |    300 |
+----------+--------+


51) Write a query on the Customers table whose output will exclude all customers with a rating&lt;= 100.00, unless they are located in Rome.

SELECT 
    CNUM, CNAME, CITY, RATING, SNUM
FROM
    Customers
WHERE
    RATING != 100 OR CITY = 'ROME';

+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
+------+----------+---------+--------+------+


52) Find all rows from the customer’s table for which the salesperson number is 1001. 

SELECT 
    CNUM, CNAME, CITY, RATING, SNUM
FROM
    Customers
WHERE
    SNUM = ANY (SELECT 
            SNUM
        FROM
            Salespeople
        WHERE
            SNUM = 1001);

+------+---------+--------+--------+------+
| CNUM | CNAME   | CITY   | RATING | SNUM |
+------+---------+--------+--------+------+
| 2001 | Hoffman | London |    100 | 1001 |
| 2006 | Clemens | London |    100 | 1001 |
+------+---------+--------+--------+------+


53)Find the total amount in orders for each salesperson where their total of amounts are greater than the amount of the largest order in the table.

 SELECT 
    SNUM, SUM(ROUND(AMT)) AS 'AMOUNT SUM'
FROM
    Orders
GROUP BY SNUM
HAVING SUM(AMT) > (SELECT 
        MAX(AMT)
    FROM
        Orders);

+------+------------+
| SNUM | AMOUNT SUM |
+------+------------+
| 1001 |      15382 |
+------+------------+

54) Write a query that selects all orders save those with zeroes or NULL in the amount file.

SELECT 
    ONUM
FROM
    Orders
WHERE
    AMT IS NULL OR AMT = 0 INTO OUTFILE 'C:\ProgramData\MySQL\MySQL Server 8.0\Uploads\amount4.txt';

Query OK, 0 rows affected (0.07 sec)


55) Produce all combinations of salespeople and customer names such that the former precedes the latter alphabetically, and the latter has a rating of less than 200.

SELECT 
    S.SNAME, C.CNAME, C.RATING
FROM
    Salespeople S
        JOIN
    Customers C ON S.SNUM = C.SNUM
WHERE
    S.SNAME < C.CNAME AND C.RATING < 200;

+--------+---------+--------+
| SNAME  | CNAME   | RATING |
+--------+---------+--------+
| Motika | Pereira |    100 |
+--------+---------+--------+


56) Find all salespeople name and commission. 

SELECT 
    SNAME, COMM
FROM
    Salespeople;

+---------+------+
| SNAME   | COMM |
+---------+------+
| Peel    |   12 |
| Serres  |   13 |
| AxelRod |   10 |
| Motika  |   11 |
| Rifkin  |   15 |
| Fran    |   25 |
+---------+------+


57) Write a query that produces the names and cities of all customers with the same rating as Hoffman. Write the query using Hoffman’s cnum rather than his rating, so that it would still be usable if his rating is changed.


-- using subquery

SELECT 
    CNAME, CITY
FROM
    Customers
WHERE
    RATING = ANY (SELECT 
            RATING
        FROM
            Customers
        WHERE
            CNUM = 2001);

-- using join

SELECT 
    C1.CNAME, C1.CITY
FROM
    Customers AS C1
        JOIN
    Customers AS C2 ON C1.RATING = C2.RATING
WHERE
    C2.CNUM = 2001;

+---------+--------+
| CNAME   | CITY   |
+---------+--------+
| Hoffman | London |
| Clemens | London |
| Pereira | Rome   |
+---------+--------+


58) Find all salespeople for whom there are customers that follow them in alphabetical order.

SELECT 
    S.SNAME, C.CNAME
FROM
    Customers C
        JOIN
    Salespeople S ON S.SNUM = C.SNUM
GROUP BY S.SNAME , C.CNAME
HAVING C.CNAME >= S.SNAME;

+---------+----------+
| SNAME   | CNAME    |
+---------+----------+
| AxelRod | Giovanni |
| Motika  | Pereira  |
+---------+----------+


59) Write a query that produces the names and ratings of all customers who have average orders.

SELECT 
    A.CNAME, A.RATING
FROM
    Customers A
        JOIN
    Orders B ON A.CNUM = B.CNUM
WHERE
    B.AMT = (SELECT 
            AVG(AMT)
        FROM
            Orders)
GROUP BY B.CNUM;

Empty set (1.49 sec)


60) Find the SUM of all Amounts from the orders table. 

SELECT 
    ROUND(SUM(AMT)) AS 'Total Amount'
FROM
    ORDERS;

+-----------------+
| Total Amount    |
+-----------------+
|           26658 |
+-----------------+


61) Write a SELECT command that produces the order number, amount, and the date from rows in the order table. 

SELECT 
    ONUM, AMT AS 'AMOUNT', ODATE
FROM
    Orders;

+------+---------+------------+
| ONUM | AMOUNT  | ODATE      |
+------+---------+------------+
| 3001 |   18.69 | 1990-10-03 |
| 3002 |  1900.1 | 1990-10-03 |
| 3003 |  767.19 | 1990-10-03 |
| 3005 | 5160.45 | 1990-10-03 |
| 3006 | 1098.16 | 1990-10-03 |
| 3007 |   75.75 | 1990-10-04 |
| 3008 |    4723 | 1990-10-05 |
| 3009 | 1713.23 | 1990-10-04 |
| 3010 | 1309.95 | 1990-10-06 |
| 3011 | 9891.88 | 1990-10-06 |
+------+---------+------------+


62) Count the number of non NULL rating fields in the Customers table (including repeats). 

SELECT 
    COUNT(RATING) AS 'COUNT'
FROM
    Customers
WHERE
    RATING IS NOT NULL;

+-------+
| COUNT |
+-------+
|     7 |
+-------+


63) Write a query that gives the names of both the salesperson and the customer for each order after the order number.

SELECT 
    ONUM, CNAME, SNAME
FROM
    Salespeople
        JOIN
    Customers ON Salespeople.SNUM = Customers.SNUM
        JOIN
    Orders ON Customers.CNUM = Orders.CNUM;

+------+----------+---------+
| ONUM | CNAME    | SNAME   |
+------+----------+---------+
| 3003 | Hoffman  | Peel    |
| 3011 | Clemens  | Peel    |
| 3008 | Clemens  | Peel    |
| 3005 | Liu      | Serres  |
| 3010 | Grass    | Serres  |
| 3007 | Grass    | Serres  |
| 3009 | Giovanni | AxelRod |
| 3002 | Pereira  | Motika  |
| 3006 | Cisneros | Rifkin  |
| 3001 | Cisneros | Rifkin  |
+------+----------+---------+

64) List the commissions of all salespeople servicing customers in London. 

-- using subquery

SELECT DISTINCT
    (SNAME), COMM
FROM
    Salespeople
WHERE
    SNUM = ANY (SELECT 
            SNUM
        FROM
            Customers
        WHERE
            CITY = 'London');

-- using join

SELECT DISTINCT
    (S.SNAME), S.COMM
FROM
    Salespeople S
        JOIN
    Customers C ON S.SNUM = C.SNUM
WHERE
    C.CITY = 'London';

+-------+------+
| SNAME | COMM |
+-------+------+
| Peel  |   12 |
+-------+------+


65) Write a query using ANY or ALL that will find all salespeople who have no customers located in their city.

SELECT 
    SNUM, SNAME
FROM
    Salespeople
WHERE
    SNUM != ALL (SELECT 
            SNUM
        FROM
            Customers
        WHERE
            Salespeople.CITY = Customers.CITY);

+------+---------+
| SNUM | SNAME   |
+------+---------+
| 1003 | AxelRod |
| 1004 | Motika  |
| 1007 | Rifkin  |
| 1008 | Fran    |
+------+---------+


66) Write a query using the EXISTS operator that selects all salespeople with customers located in their cities who are not assigned to them.

SELECT 
    SNUM, SNAME, CITY, COMM
FROM
    Salespeople
WHERE
    EXISTS( SELECT 
            SNUM, SNAME, CITY, COMM
        FROM
            Customers C
        WHERE
            C.CITY = Salespeople.CITY
                AND C.SNUM != Salespeople.SNUM
                OR Salespeople.SNAME = C.CNAME);

+------+--------+---------+------+
| SNUM | SNAME  | CITY    | COMM |
+------+--------+---------+------+
| 1002 | Serres | SanJose |   13 |
| 1004 | Motika | London  |   11 |
| 1008 | Fran   | London  |   25 |
+------+--------+---------+------+


67) Write a query that selects all customers serviced by Peel or Motika. (Hint: The snum field relates the 2 tables to one another.) 

-- using subquery

SELECT 
    CNAME
FROM
    Customers
WHERE
    SNUM IN (SELECT 
            SNUM
        FROM
            Salespeople
        WHERE
            SNAME = 'Motika' OR SNAME = 'Peel');

-- using join

SELECT 
    C.CNAME
FROM
    Customers C
        JOIN
    Salespeople S ON C.SNUM = S.SNUM
WHERE
    S.SNAME IN ('Peel' , 'Motika');

+---------+
| CNAME   |
+---------+
| Hoffman |
| Clemens |
| Pereira |
+---------+


68) Count the number of salespeople registering orders for each day. (If a salesperson has more than one order on a given day, he or she should be counted only once.) 

SELECT 
    COUNT(DISTINCT SNUM), ODATE
FROM
    Orders
GROUP BY ODATE;

+-----------------------+
| COUNT    | ODATE      |
+--------- +------------+
|    4     | 1990-10-03 |
|    2     | 1990-10-04 |
|    1     | 1990-10-05 |
|    2     | 1990-10-06 |
+-----------------------+


69) Find all orders attributed to salespeople who live in London.

-- using subquery

SELECT 
    ONUM, ODATE, AMT
FROM
    Orders
WHERE
    SNUM = ANY (SELECT 
            SNUM
        FROM
            Salespeople
        WHERE
            City = 'London');

-- using join

SELECT 
    O.ONUM, O.ODATE, O.AMT
FROM
    Orders O
        JOIN
    Salespeople S ON O.SNUM = S.SNUM
WHERE
    S.city = 'London';

+------+------------+---------+
| ONUM | ODATE      | AMT     |
+------+------------+---------+
| 3003 | 1990-10-03 |  767.19 |
| 3008 | 1990-10-05 |    4723 |
| 3011 | 1990-10-06 | 9891.88 |
| 3002 | 1990-10-03 |  1900.1 |
+------+------------+---------+


70) Find all orders by customers not located in the same cities as their salespeople.

-- using subquery

SELECT 
    ONUM, ODATE, AMT, CNUM, SNUM
FROM
    Orders
WHERE
    CNUM = ANY (SELECT 
            CNUM
        FROM
            Customers
        WHERE
            SNUM = ANY (SELECT 
                    SNUM
                FROM
                    Salespeople
                WHERE
                    Salespeople.CITY != Customers.CITY));

-- using join

SELECT 
    O.ONUM, O.ODATE, O.AMT, C.CNUM, S.SNUM
FROM
    Orders O
        JOIN
    Customers C ON O.CNUM = C.CNUM
        JOIN
    Salespeople S ON S.SNUM = O.SNUM
WHERE
    S.CITY != C.CITY;

+------+------------+---------+------+------+
| ONUM | ODATE      | AMT     | CNUM | SNUM |
+------+------------+---------+------+------+
| 3001 | 1990-10-03 |   18.69 | 2008 | 1007 |
| 3002 | 1990-10-03 |  1900.1 | 2007 | 1004 |
| 3006 | 1990-10-03 | 1098.16 | 2008 | 1007 |
| 3007 | 1990-10-04 |   75.75 | 2004 | 1002 |
| 3009 | 1990-10-04 | 1713.23 | 2002 | 1003 |
| 3010 | 1990-10-06 | 1309.95 | 2004 | 1002 |
+------+------------+---------+------+------+


71) Find all salespeople who have customers with more than one current order. 

-- using subquery

SELECT 
    SNUM, SNAME, COMM
FROM
    Salespeople
WHERE
    SNUM = ANY (SELECT 
            SNUM
        FROM
            Orders
        GROUP BY CNUM
        HAVING COUNT(ONUM) > 1);

-- using join

SELECT 
    Salespeople.SNUM, Salespeople.SNAME
FROM
    Salespeople
        INNER JOIN
    Orders ON Orders.SNUM = Salespeople.SNUM
GROUP BY Orders.CNUM
HAVING COUNT(Orders.ONUM) > 1;


+------+--------+------+
| SNUM | SNAME  | COMM |
+------+--------+------+
| 1001 | Peel   |   12 |
| 1002 | Serres |   13 |
| 1007 | Rifkin |   15 |
+------+--------+------+


72) Write a query that extracts from the customer’s table every customer assigned to a salesperson, who is currently having at least one another customer(besides the customer being selected) with orders in the Orders Table.

SELECT 
    CNUM, CNAME, CITY, RATING, SNUM
FROM
    Customers
WHERE
    SNUM IN (SELECT 
            SNUM
        FROM
            Orders
        WHERE
            1 < (SELECT 
                    COUNT(DISTINCT CNUM)
                FROM
                    Orders
                WHERE
                    Customers.SNUM = SNUM));

+------+---------+---------+--------+------+
| CNUM | CNAME   | CITY    | RATING | SNUM |
+------+---------+---------+--------+------+
| 2001 | Hoffman | London  |    100 | 1001 |
| 2003 | Liu     | SanJose |    200 | 1002 |
| 2004 | Grass   | Berlin  |    300 | 1002 |
| 2006 | Clemens | London  |    100 | 1001 |
+------+---------+---------+--------+------+


73) Write a query on the customer’s table that will find the highest rating in each city. Put the output in this form: for the city (city), the highest rating is (rating). 

SELECT 
    CONCAT('For City',
            ' ',
            City,
            ' ',
            'the highest rating is ',
            MAX(RATING)) AS 'The highest rating in each city'
FROM
    CUSTOMERS
GROUP BY CITY;

+--------------------------------------------+
| The highest rating in each city            |
+--------------------------------------------+
| For City London the highest rating is 100  |
| For City Rome the highest rating is 200    |
| For City SanJose the highest rating is 300 |
| For City Berlin the highest rating is 300  |
+--------------------------------------------+


74) Write a query that will produce the snum values of all salespeople with orders, having amt greater than 1000 in the Orders Table(without repeats). 

SELECT DISTINCT
    SNUM, ONUM, AMT
FROM
    Orders
WHERE
    AMT > 1000
GROUP BY SNUM;

+------+------+---------+
| SNUM | ONUM | AMT     |
+------+------+---------+
| 1001 | 3008 |    4723 |
| 1002 | 3005 | 5160.45 |
| 1003 | 3009 | 1713.23 |
| 1004 | 3002 |  1900.1 |
| 1007 | 3006 | 1098.16 |
+------+------+---------+


75) Write a query that lists customers in a descending order of rating. Output the rating field first, followed by the customer’s names and numbers. 

SELECT 
    RATING, CNAME, CNUM
FROM
    Customers
ORDER BY RATING DESC;

+--------+----------+------+
| RATING | CNAME    | CNUM |
+--------+----------+------+
|    300 | Grass    | 2004 |
|    300 | Cisneros | 2008 |
|    200 | Giovanni | 2002 |
|    200 | Liu      | 2003 |
|    100 | Hoffman  | 2001 |
|    100 | Clemens  | 2006 |
|    100 | Pereira  | 2007 |
+--------+----------+------+


76) Find the average commission for salespeople in London. 

SELECT 
    AVG(COMM) AS 'Average commission'
FROM
    Salespeople
WHERE
    CITY = 'London';

+--------------------+
| Average commission |
+--------------------+
|            16.0000 |
+--------------------+


77) Find all orders credited to the same salesperson who services Hoffman.(cnum 2001).


-- using subquery

SELECT 
    ONUM, CNUM
FROM
    Orders
WHERE
    SNUM IN (SELECT 
            SNUM
        FROM
            Customers
        WHERE
            CNUM = 2001);


-- using join
            
SELECT 
    O.ONUM,O.CNUM
FROM
    Orders O
JOIN
    Customers C ON O.SNUM = C.SNUM
WHERE
C.CNUM = 2001;

+------+------+
| ONUM | CNUM |
+------+------+
| 3003 | 2001 |
| 3008 | 2006 |
| 3011 | 2006 |
+------+------+


78) Find all salespeople whose commission is in between 0.10 and 0.12(both inclusive). 

SELECT 
    SNUM, SNAME, COMM
FROM
    Salespeople
WHERE
    COMM / 100 >= 0.10
        AND COMM / 100 <= 0.12;

+------+---------+------+
| SNUM | SNAME   | COMM |
+------+---------+------+
| 1001 | Peel    |   12 |
| 1003 | AxelRod |   10 |
| 1004 | Motika  |   11 |
+------+---------+------+


79) Write a query that will give you the names and cities of all salespeople in London with a commission above 0.10.

SELECT 
    SNAME, CITY
FROM
    Salespeople
WHERE
    COMM / 100 > 0.10 AND CITY = 'LONDON';

+--------+--------+
| SNAME  | CITY   |
+--------+--------+
| Peel   | London |
| Motika | London |
| Fran   | London |
+--------+--------+


80) Write a query that selects each customer’s smallest order.

SELECT 
    CNUM, MIN(AMT) AS 'Smallest Order'
FROM
    Orders
GROUP BY CNUM;

+------+----------------+
| CNUM | Smallest Order |
+------+----------------+
| 2008 |          18.69 |
| 2007 |         1900.1 |
| 2001 |         767.19 |
| 2003 |        5160.45 |
| 2004 |          75.75 |
| 2006 |           4723 |
| 2002 |        1713.23 |
+------+----------------+


81) Write a query that selects the first customer in alphabetical order whose name begins with ‘G’. 

SELECT 
    CNAME
FROM
    Customers
WHERE
    CNAME LIKE 'G%'
LIMIT 1;

+----------+
| CNAME    |
+----------+
| Giovanni |
+----------+


82) Write a query that counts the number of different non NULL city values in the customers table. 

SELECT 
    COUNT(DISTINCT (CITY)) AS 'COUNT'
FROM
    Customers
WHERE
    CITY IS NOT NULL;

+-------+
| COUNT |
+-------+
|     4 |
+-------+


83) Find the average amount from the Orders Table.

SELECT 
    AVG(AMT) AS 'Average Amount'
FROM
    Orders;

+-------------------+
| Average Amount    |
+-------------------+
| 2665.840002250671 |
+-------------------+


84) Find all customers who are not located in SanJose and whose rating is above 200.

SELECT 
    CNUM, CNAME, CITY, RATING, SNUM
FROM
    Customers
WHERE
    CITY != 'SanJose' AND RATING > 200;

+------+-------+--------+--------+------+
| CNUM | CNAME | CITY   | RATING | SNUM |
+------+-------+--------+--------+------+
| 2004 | Grass | Berlin |    300 | 1002 |
+------+-------+--------+--------+------+


85) Give a simpler way to write this query.SELECT snum, sname, city, comm FROM salespeople WHERE (comm > + 0.12 OR comm &lt; 0.14);

SELECT 
    SNUM, SNAME, CITY, COMM
FROM
    Salespeople
WHERE
    COMM / 100 > 0.12 OR COMM / 100 < 0.14;

+------+---------+-----------+------+
| SNUM | SNAME   | CITY      | COMM |
+------+---------+-----------+------+
| 1001 | Peel    | London    |   12 |
| 1002 | Serres  | SanJose   |   13 |
| 1003 | AxelRod | New York  |   10 |
| 1004 | Motika  | London    |   11 |
| 1007 | Rifkin  | Barcelona |   15 |
| 1008 | Fran    | London    |   25 |
+------+---------+-----------+------+


86) Which salespersons attend to customers not in the city they have been assigned to? 

-- using subquery

SELECT Salespeople.SNUM, Salespeople.SNAME FROM Salespeople
WHERE
   SNUM = ANY(SELECT SNUM FROM Customers
   WHERE
   Salespeople.CITY!= Customers.CITY );

-- using join

SELECT 
    S.SNUM, S.SNAME
FROM
    Salespeople S
        JOIN
    Customers C ON S.SNUM = C.SNUM
WHERE
    S.CITY != C.CITY;


+------+---------+
| SNUM | SNAME   |
+------+---------+
| 1002 | Serres  |
| 1003 | AxelRod |
| 1004 | Motika  |
| 1007 | Rifkin  |
+------+---------+


87) Which salespeople get commission greater than 0.11 are serving customers rated less than 250? 

-- using subquery

SELECT 
    SNUM, SNAME, CITY, COMM
FROM
    Salespeople
WHERE
    COMM / 100 > 0.11
        AND SNUM = ANY (SELECT 
            SNUM
        FROM
            Customers
        WHERE
            RATING < 250);

-- using join

SELECT 
    S.SNUM, S.SNAME, S.CITY, S.COMM
FROM
    Salespeople S
        JOIN
    Customers C ON S.SNUM = C.SNUM
WHERE
    C.RATING < 250 AND S.COMM / 100 > 0.11
GROUP BY S.SNUM; 

+------+--------+---------+------+
| SNUM | SNAME  | CITY    | COMM |
+------+--------+---------+------+
| 1001 | Peel   | London  |   12 |
| 1002 | Serres | SanJose |   13 |
+------+--------+---------+------+


88) Which salespeople have been assigned to the same city but get different commission percentages?

SELECT 
    S.SNUM, S.SNAME, S.CITY
FROM
    Salespeople S
        JOIN
    Salespeople S1 ON S.SNUM != S1.SNUM AND S.CITY = S1.CITY
        AND S.COMM != S1.COMM
GROUP BY S.SNUM;

+------+--------+--------+
| SNUM | SNAME  | CITY   |
+------+--------+--------+
| 1008 | Fran   | London |
| 1004 | Motika | London |
| 1001 | Peel   | London |
+------+--------+--------+

89) Which salesperson has earned the maximum commission?

SELECT 
    B.SNUM,
    B.SNAME,
    B.COMM,
    ROUND((SUM(C.AMT) * B.COMM) / 100) AS 'Max Commission'
FROM
    Salespeople B
        JOIN
    Orders C ON B.SNUM = C.SNUM
GROUP BY B.SNUM
ORDER BY ROUND((SUM(C.AMT) * B.COMM) / 100) DESC
LIMIT 1;

+---------+-------+------+----------------+
| CNAME   | SNAME | COMM | Max Commission |
+---------+-------+------+----------------+
| Hoffman | Peel  |   12 |           1846 |
+---------+-------+------+----------------+


90) Does the customer who has placed the maximum number of orders have the maximum rating?

SELECT 
    C.CNUM,
    C.CNAME,
    C.RATING,
    IF(COUNT(*) = (SELECT 
                MAX(Orders)
            FROM
                (SELECT 
                    COUNT(*) AS Orders
                FROM
                    Orders
                GROUP BY CNUM) AS Customers),
        'True',
        'False') AS 'Maximum Order_Count'
FROM
    Customers C
        INNER JOIN
    Orders O ON C.CNUM = O.CNUM
GROUP BY C.CNUM , C.CNAME , C.RATING;

+------+----------+--------+---------------------+
| CNUM | CNAME    | RATING | Maximum Order_Count |
+------+----------+--------+---------------------+
| 2008 | Cisneros |    300 | True                |
| 2007 | Pereira  |    100 | False               |
| 2001 | Hoffman  |    100 | False               |
| 2003 | Liu      |    200 | False               |
| 2004 | Grass    |    300 | True                |
| 2006 | Clemens  |    100 | True                |
| 2002 | Giovanni |    200 | False               |
+------+----------+--------+---------------------+

91) List all customers in descending order of customer rating 

SELECT 
    CNUM, CNAME, CITY, RATING
FROM
    CUSTOMERS
ORDER BY (RATING) DESC;

+------+----------+---------+--------+
| CNUM | CNAME    | CITY    | RATING |
+------+----------+---------+--------+
| 2004 | Grass    | Berlin  |    300 |
| 2008 | Cisneros | SanJose |    300 |
| 2002 | Giovanni | Rome    |    200 |
| 2003 | Liu      | SanJose |    200 |
| 2001 | Hoffman  | London  |    100 |
| 2006 | Clemens  | London  |    100 |
| 2007 | Pereira  | Rome    |    100 |
+------+----------+---------+--------+


92) On which days has Hoffman placed orders? 

-- using subquery

SELECT 
    DAYNAME(ODATE) AS 'Order_day'
FROM
    Orders
WHERE
    CNUM = ANY (SELECT 
            CNUM
        FROM
            Customers
        WHERE
            CNAME = 'Hoffman');
    

-- using Joins

SELECT 
    DAYNAME(Orders.ODATE) AS 'Order_day'
FROM
    Orders
        JOIN
    Customers ON Customers.CNUM = Orders.CNUM
WHERE
    Customers.CNAME = 'Hoffman';

+-----------+
| Order_day |
+-----------+
| Wednesday |
+-----------+


93) Which salesmen have no orders between 10/03/1990 and 10/05/1990?

SELECT
    SNUM, SNAME
FROM
    salespeople
WHERE
    SNUM NOT IN (SELECT DISTINCT
            SNUM
        FROM
            ORDERS
        WHERE
            ODATE BETWEEN '90-10-03' AND '90-10-05');

+------+-------+
| SNUM | SNAME |
+------+-------+
| 1008 | Fran  |
+------+-------+


94) How many salespersons have succeeded in getting orders?

SELECT 
    COUNT(SNUM) AS 'Number of Salesperson having orders'
FROM
    Salespeople
WHERE
    SNUM = ANY (SELECT DISTINCT
            (SNUM)
        FROM
            Orders);

+-------------------------------------+
| Number of Salesperson having orders |
+-------------------------------------+
|                                   5 |
+-------------------------------------+


95) How many customers have placed orders? 

SELECT 
    COUNT(CNUM) AS 'Number of Customer placed Orders'
FROM
    Customers
WHERE
    CNUM = ANY (SELECT DISTINCT
            (CNUM)
        FROM
            Orders);

+----------------------------------+
| Number of Customer placed Orders |
+----------------------------------+
|                                7 |
+----------------------------------+


96) On which date has each salesman booked an order of maximum value? 

SELECT 
    ODATE, SNUM, AMT
FROM
    Orders
WHERE
    AMT IN (SELECT 
            MAX(AMT)
        FROM
            Orders
        GROUP BY SNUM);

+------------+------+---------+
| ODATE      | SNUM | AMT     |
+------------+------+---------+
| 1990-10-03 | 1004 |  1900.1 |
| 1990-10-03 | 1002 | 5160.45 |
| 1990-10-03 | 1007 | 1098.16 |
| 1990-10-04 | 1003 | 1713.23 |
| 1990-10-06 | 1001 | 9891.88 |
+------------+------+---------+


97) Who is the most successful salesperson? 

SELECT 
    SNAME, SUM(AMT) AS 'TOTAL_AMOUNT'
FROM
    Orders O
        JOIN
    Salespeople S ON O.SNUM = S.SNUM
GROUP BY O.SNUM
ORDER BY TOTAL_AMOUNT DESC
LIMIT 1;

+-------+--------------------+
| SNAME | TOTAL_AMOUNT       |
+-------+--------------------+
| Peel  | 15382.069885253906 |
+-------+--------------------+


98) Which customers have the same rating?

SELECT DISTINCT
    C1.CNAME, C2.CNAME, C1.RATING
FROM
    Customers C1
        JOIN
    Customers C2 ON C1.RATING = C2.RATING
        AND C1.CNAME != C2.CNAME
ORDER BY C1.RATING;

+----------+----------+--------+
| CNAME    | CNAME    | RATING |
+----------+----------+--------+
| Pereira  | Hoffman  |    100 |
| Clemens  | Hoffman  |    100 |
| Pereira  | Clemens  |    100 |
| Hoffman  | Clemens  |    100 |
| Clemens  | Pereira  |    100 |
| Hoffman  | Pereira  |    100 |
| Liu      | Giovanni |    200 |
| Giovanni | Liu      |    200 |
| Cisneros | Grass    |    300 |
| Grass    | Cisneros |    300 |
+----------+----------+--------+


99) Find all orders greater than the average for October 4th. 

SELECT 
    ONUM, AMT
FROM
    Orders
WHERE
    AMT > (SELECT 
            AVG(AMT)
        FROM
            Orders
        WHERE
            ODATE = '1990-10-04');

+------+---------+
| ONUM | AMT     |
+------+---------+
| 3002 |  1900.1 |
| 3005 | 5160.45 |
| 3006 | 1098.16 |
| 3008 |    4723 |
| 3009 | 1713.23 |
| 3010 | 1309.95 |
| 3011 | 9891.88 |
+------+---------+


100) List all customers with ratings above Grass’s average. 

SELECT 
    CNAME, RATING
FROM
    Customers
WHERE
    RATING > (SELECT 
            (AVG(RATING))
        FROM
            Customers
        WHERE
            CNAME = 'Grass');

Empty set (0.01 sec)


101) Which customers have above average orders? 

-- using Subquery

SELECT 
    CNAME
FROM
    Customers
WHERE
    CNUM IN (SELECT 
            CNUM
        FROM
            Orders
        WHERE
            AMT > (SELECT 
                    AVG(AMT)
                FROM
                    Orders));

-- using join

SELECT DISTINCT
    C.CNAME
FROM
    Customers C
        JOIN
    Orders O ON C.CNUM = O.CNUM
WHERE
    AMT > ALL (SELECT 
            AVG(AMT)
        FROM
            Orders);

+---------+
| CNAME   |
+---------+
| Liu     |
| Clemens |
+---------+

102) Select the total amount in orders for each salesperson for which the total is greater than the amount of the largest order in the table.

SELECT 
    S.SNAME, SUM(O.AMT) AS TOTAL_AMOUNT
FROM
    Salespeople S
        JOIN
    Orders O ON S.SNUM = O.SNUM
GROUP BY S.SNAME
HAVING SUM(O.AMT) > (SELECT 
        MAX(AMT)
    FROM
        Orders);

+-------+--------------------+
| SNAME | TOTAL_AMOUNT       |
+-------+--------------------+
| Peel  | 15382.069885253906 |
+-------+--------------------+


103) Give names and numbers of all salespersons that have more than one customer?

-- using subquery

SELECT 
    SNUM, SNAME
FROM
    Salespeople
WHERE
    SNUM = ANY (SELECT 
            SNUM
        FROM
            Customers
        GROUP BY SNUM
        HAVING COUNT(SNUM) > 1);

-- using join

SELECT 
    S.SNUM, S.SNAME
FROM
    Salespeople S
        JOIN
    Customers C ON S.SNUM = C.SNUM
GROUP BY S.SNUM
HAVING COUNT(S.SNUM) > 1;

+------+--------+
| SNUM | SNAME  |
+------+--------+
| 1001 | Peel   |
| 1002 | Serres |
+------+--------+


104) Select all salespeople by name and number who have customers in their city whom they don’t service.

SELECT DISTINCT
    (S.SNAME), S.SNUM, C.City
FROM
    Salespeople S
        JOIN
    Customers C ON S.CITY = C.CITY AND S.SNUM != C.SNUM;

+--------+------+---------+
| SNAME  | SNUM | City    |
+--------+------+---------+
| Fran   | 1008 | London  |
| Motika | 1004 | London  |
| Serres | 1002 | SanJose |
+--------+------+---------+


105) Does the total amount in orders by customer in Rome and London, exceed the commission paid to salesperson in London, and New York by more than 5 times? 

SELECT 
    IF((SELECT 
                (SELECT 
                            SUM(A.AMT)
                        FROM
                            Orders A,
                            Customers B
                        WHERE
                            A.CNUM = B.cnum
                                AND (B.CITY = 'Rome' OR B.CITY = 'London')) > (SELECT 
                            SUM(A.AMT * C.COMM / 100)
                        FROM
                            Orders A,
                            Customers B,
                            Salespeople C
                        WHERE
                            A.CNUM = B.CNUM AND B.SNUM = C.SNUM
                                AND (C.CITY = 'London' OR C.CITY = 'New York')) AS 'Total Commision'
            ),
        'True',
        'False') AS 'Exceed by 5 times';
        
+-------------------+
| Exceed by 5 times |
+-------------------+
| True              |
+-------------------+


106) Which are the date, order number, amt and city for each salesperson (by name) for the maximum order he has obtained?

SELECT 
    O.ONUM, O.SNUM, S.CITY, O.ODATE, O.AMT
FROM
    Orders O
        JOIN
    Salespeople S ON O.SNUM = S.SNUM
        AND O.AMT IN (SELECT 
            MAX(AMT)
        FROM
            Orders
        GROUP BY SNUM);

+------+------+-----------+------------+---------+
| ONUM | SNUM | CITY      | ODATE      | AMT     |
+------+------+-----------+------------+---------+
| 3002 | 1004 | London    | 1990-10-03 |  1900.1 |
| 3005 | 1002 | SanJose   | 1990-10-03 | 5160.45 |
| 3006 | 1007 | Barcelona | 1990-10-03 | 1098.16 |
| 3009 | 1003 | New York  | 1990-10-04 | 1713.23 |
| 3011 | 1001 | London    | 1990-10-06 | 9891.88 |
+------+------+-----------+------------+---------+


107) Which salesperson is having lowest commission

SELECT 
    SNAME, SNUM
FROM
    Salespeople
WHERE
    COMM = (SELECT 
            MIN(COMM)
        FROM
            Salespeople);

+---------+------+
| SNAME   | SNUM |
+---------+------+
| AxelRod | 1003 |
+---------+------+
