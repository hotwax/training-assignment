1) List all the columns of the Salespeople table.

mysql> SELECT * FROM Salespeople;
    +------+---------+-----------+------+
    | SNUM | SNAME   | CITY      | COMM |
    +------+---------+-----------+------+
    | 1001 | Peel    | London    |   1 |
    | 1002 | Serres  | SanJose   |   13 |
    | 1003 | AxelRod | New York  |   10 |
    | 1004 | Motika  | London    |   11 |
    | 1007 | Rifkin  | Barcelona |   15 |
    | 1008 | Fran    | London    |   25 |
    +------+---------+-----------+------+

2) List all customers with a rating of 100.

mysql> SELECT * FROM Customers where rating = 100;
+------+---------+--------+--------+------+
| CNUM | CNAME   | CITY   | RATING | SNUM |
+------+---------+--------+--------+------+
| 2001 | Hoffman | London |    100 | 1001 |
| 2005 | Clemens | London |    100 | 1001 |
| 2007 | Pereira | Rome   |    100 | 1004 |
+------+---------+--------+--------+------+

3) Find the largest order taken by each salesperson on each date. 
mysql> SELECT ODATE,O.SNUM,SNAME,AMT
    ->   FROM ORDERS O JOIN SALESPEOPLE S
    ->   ON S.SNUM = O.SNUM WHERE AMT IN (
    ->         SELECT MAX(AMT) FROM ORDERS GROUP BY ODATE
    ->     );
+------------+------+---------+---------+
| ODATE      | SNUM | SNAME   | AMT     |
+------------+------+---------+---------+
| 1990-03-10 | 1002 | Serres  | 5160.45 |
| 1990-05-10 | 1001 | Peel    | 4723.00 |
| 1990-04-10 | 1003 | AxelRod | 1713.23 |
| 1990-06-10 | 1001 | Peel    | 9891.88 |
+------------+------+---------+---------+

4) Arrange the Order table by descending customer number. 
mysql> SELECT * FROM ORDERS ORDER BY CNUM DESC;
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-03-10 | 2008 | 1007 |
| 3006 | 1098.16 | 1990-03-10 | 2008 | 1007 |
| 3002 | 1900.10 | 1990-03-10 | 2007 | 1004 |
| 3008 | 4723.00 | 1990-05-10 | 2006 | 1001 |
| 3011 | 9891.88 | 1990-06-10 | 2006 | 1001 |
| 3007 |   75.75 | 1990-04-10 | 2004 | 1002 |
| 3010 | 1309.95 | 1990-06-10 | 2004 | 1002 |
| 3005 | 5160.45 | 1990-03-10 | 2003 | 1002 |
| 3009 | 1713.23 | 1990-04-10 | 2002 | 1003 |
| 3003 |  767.69 | 1990-03-10 | 2001 | 1001 |
+------+---------+------------+------+------+

5) Find which salespeople currently have orders in the order table. 
mysql> SELECT S.SNUM,S.SNAME FROM SALESPEOPLE S
    ->     JOIN ORDERS O ON
    ->     S.SNUM = O.SNUM GROUP BY S.SNAME;
+------+---------+
| SNUM | SNAME   |
+------+---------+
| 1001 | Peel    |
| 1002 | Serres  |
| 1003 | AxelRod |
| 1004 | Motika  |
| 1007 | Rifkin  |
+------+---------+

6) List names of all customers matched with the salespeople serving them. 
mysql> SELECT CNAME,SNAME
    ->     FROM SALESPEOPLE,CUSTOMERS
    ->     WHERE SALESPEOPLE.SNUM = CUSTOMERS.SNUM;
+----------+---------+
| CNAME    | SNAME   |
+----------+---------+
| Hoffman  | Peel    |
| Giovanni | AxelRod |
| Liu      | Serres  |
| Grass    | Serres  |
| Clemens  | Peel    |
| Pereira  | Motika  |
| Cisneros | Rifkin  |
+----------+---------+

7) Find the names and numbers of all salespeople who have more than one customer. 
mysql> SELECT sname,snum
    ->     FROM salespeople WHERE 1 < (
    ->         SELECT COUNT(sname) FROM customers WHERE salespeople.snum = snum
    ->         );
+--------+------+
| sname  | snum |
+--------+------+
| Peel   | 1001 |
| Serres | 1002 |
+--------+------+


8) Count the orders of each of the salespeople and output the results in descending order. 
mysql> SELECT S.SNUM,S.SNAME,COUNT(ONUM)
    ->     FROM ORDERS O,salespeople S
    ->     WHERE S.SNUM = O.SNUM
    ->     GROUP BY S.SNUM
    ->     ORDER BY COUNT(ONUM) DESC;
+------+---------+-------------+
| SNUM | SNAME   | COUNT(ONUM) |
+------+---------+-------------+
| 1001 | Peel    |           3 |
| 1002 | Serres  |           3 |
| 1007 | Rifkin  |           2 |
| 1003 | AxelRod |           1 |
| 1004 | Motika  |           1 |
+------+---------+-------------+

9) List the customer table if and only if one or more of the customers in the Customer table are located in SanJose. 
mysql> SELECT * FROM CUSTOMERS
    -> WHERE (SELECT COUNT(CNAME) FROM CUSTOMERS
    -> WHERE CITY = "SanJose")>=1;
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2001 | Hoffman  | London  |    100 | 1001 |
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2006 | Clemens  | London  |    100 | 1001 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+


10) Match salespeople to customers according to what city they live in. 
mysql> SELECT C.CITY,C.CNAME,S.SNAME
    ->     FROM CUSTOMERS C , SALESPEOPLE S
    ->     WHERE C.CITY = S.CITY;
+---------+----------+--------+
| CITY    | CNAME    | SNAME  |
+---------+----------+--------+
| London  | Hoffman  | Fran   |
| London  | Hoffman  | Motika |
| London  | Hoffman  | Peel   |
| SanJose | Liu      | Serres |
| London  | Clemens  | Fran   |
| London  | Clemens  | Motika |
| London  | Clemens  | Peel   |
| SanJose | Cisneros | Serres |
+---------+----------+--------+


11) Find all the customers in SanJose who have a rating above 200. 
mysql> SELECT * FROM CUSTOMERS WHERE CITY = "SanJose" AND RATING > 200;
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+

12) List the names and commissions of all salespeople in London. 
mysql> SELECT SNAME, COMM FROM SALESPEOPLE WHERE CITY = "London";
+--------+------+
| SNAME  | COMM |
+--------+------+
| Peel   |   12 |
| Motika |   11 |
| Fran   |   25 |
+--------+------+

13) List all the orders of Salesperson Motika from the orders table.
mysql> SELECT * FROM ORDERS WHERE SNUM = 1004;
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3002 | 1900.10 | 1990-03-10 | 2007 | 1004 |
+------+---------+------------+------+------+

14) Find all customers who booked orders on October 3. 
mysql> SELECT C.CNAME, O.ODATE
    ->     FROM CUSTOMERS C JOIN ORDERS O
    ->     ON C.CNUM = O.CNUM
    ->     WHERE ODATE = "1990-03-10";
+----------+------------+
| CNAME    | ODATE      |
+----------+------------+
| Cisneros | 1990-03-10 |
| Pereira  | 1990-03-10 |
| Hoffman  | 1990-03-10 |
| Liu      | 1990-03-10 |
| Cisneros | 1990-03-10 |
+----------+------------+

15) Give the sums of the amounts from the Orders table, grouped by date, eliminating all those dates where the SUM was not at least 2000 above the maximum Amount. 
mysql> SELECT SUM(AMT),ODATE
    ->     FROM ORDERS
    ->     WHERE AMT > 2000 GROUP BY ODATE;
+----------+------------+
| SUM(AMT) | ODATE      |
+----------+------------+
|  5160.45 | 1990-03-10 |
|  4723.00 | 1990-05-10 |
|  9891.88 | 1990-06-10 |
+----------+------------+

16) Select all orders that had amounts that were greater than at least one of the orders from October 6. 
mysql> SELECT ODATE,ONUM,AMT
    ->     FROM ORDERS WHERE
    ->     AMT >= ANY (
    ->         SELECT AMT FROM ORDERS WHERE ODATE = "1990-06-10"
    -> );
+------------+------+---------+
| ODATE      | ONUM | AMT     |
+------------+------+---------+
| 1990-03-10 | 3002 | 1900.10 |
| 1990-03-10 | 3005 | 5160.45 |
| 1990-05-10 | 3008 | 4723.00 |
| 1990-04-10 | 3009 | 1713.23 |
| 1990-06-10 | 3010 | 1309.95 |
| 1990-06-10 | 3011 | 9891.88 |
+------------+------+---------+


17) Write a query that uses the EXISTS operator to extract all salespeople who have customers with a rating of 300.
mysql> SELECT SNUM,SNAME
    ->     FROM SALESPEOPLE S WHERE EXISTS  (
    ->         SELECT *
    ->         FROM CUSTOMERS C
    ->         WHERE C.SNUM = S.SNUM AND RATING = 300
    ->     );
+------+--------+
| SNUM | SNAME  |
+------+--------+
| 1002 | Serres |
| 1007 | Rifkin |
+------+--------+

 18) Find all customers whose cnum is 1000 above the snum of Serres. 
mysql> SELECT C.CNAME,C.CNUM,S.SNAME,S.SNUM FROM CUSTOMERS C
    ->     JOIN SALESPEOPLE S ON
    ->     C.SNUM = S.SNUM WHERE
    ->     CNUM > 1002 + 1000;
+----------+------+--------+------+
| CNAME    | CNUM | SNAME  | SNUM |
+----------+------+--------+------+
| Liu      | 2003 | Serres | 1002 |
| Grass    | 2004 | Serres | 1002 |
| Clemens  | 2006 | Peel   | 1001 |
| Pereira  | 2007 | Motika | 1004 |
| Cisneros | 2008 | Rifkin | 1007 |
+----------+------+--------+------+

19) Give the salespeopleâ€™s commissions as percentages instead of decimal numbers. 
 SELECT SNUM,SNAME,(COMM/(SELECT SUM(COMM) FROM SALESPEOPLE))*100 + '%'  AS COMMISION FROM SALESPEOPLE;
+------+---------+------------+
| SNUM | SNAME   | COMMISION  |
+------+---------+------------+
| 1001 | Peel    | 13.9534883 |
| 1002 | Serres  |  15.116279 |
| 1003 | AxelRod | 11.6279069 |
| 1004 | Motika  | 12.7906976 |
| 1007 | Rifkin  | 17.4418604 |
| 1008 | Fran    | 29.0697674 |
+------+---------+------------+

20) Find the largest order taken by each salesperson on each date, eliminating those Maximum orders, which are less than 3000. 21) List all the largest orders for October 3, for each salesperson. 


22) Find all customers located in cities where Serres has customers. 
mysql> SELECT cnum,cname,city
    ->     FROM customers WHERE snum = (
    ->         SELECT snum FROM salespeople WHERE sname = "Serres"
    ->         );
+------+-------+---------+
| cnum | cname | city    |
+------+-------+---------+
| 2003 | Liu   | SanJose |
| 2004 | Grass | Berlin  |
+------+-------+---------+

23) Select all customers with a rating above 200. 
mysql> SELECT * FROM customers WHERE rating > 200;
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+

24) Count the number of salespeople currently having orders in the orders table. 
mysql> SELECT s.snum,s.sname FROM salespeople s
    ->  JOIN orders o ON
    -> s.snum = o.snum GROUP BY s.sname;
+------+---------+
| snum | sname   |
+------+---------+
| 1001 | Peel    |
| 1002 | Serres  |
| 1003 | AxelRod |
| 1004 | Motika  |
| 1007 | Rifkin  |
+------+---------+

25) Write a query that produces all customers serviced by salespeople with a commission above 12%. Output the customerâ€™s name, salespersonâ€™s name and the salespersonâ€™s rate of commission. 

SELECT c.cname, s.sname,s.comm
FROM customers c
         JOIN salespeople s on c.SNUM = s.SNUM
WHERE s.comm > 12;
+----------+--------+------+
| cname    | sname  | comm |
+----------+--------+------+
| Liu      | Serres |   13 |
| Grass    | Serres |   13 |
| Cisneros | Rifkin |   15 |
+----------+--------+------+

26) Find salespeople who have multiple customers. 
mysql> SELECT s.sname,c.cname,s.comm FROM
         salespeople s
                 JOIN customers c
                 ON s.snum = c.snum
                         WHERE s.comm > 12;

+--------+----------+------+
| sname  | cname    | comm |
+--------+----------+------+
| Serres | Liu      |   13 |
| Serres | Grass    |   13 |
| Rifkin | Cisneros |   15 |
+--------+----------+------+

27) Find salespeople with customers located in their own cities. 

mysql> SELECT s.snum,sname,s.city as salespeple_city, c.cnum, c.cname, c.city as customers_city FROM
         salespeople AS s JOIN
             customers AS C ON
                 s.city = c.city AND s.snum = c.snum;

+------+--------+-----------------+------+---------+----------------+
| snum | sname  | salespeple_city | cnum | cname   | customers_city |
+------+--------+-----------------+------+---------+----------------+
| 1001 | Peel   | London          | 2001 | Hoffman | London         |
| 1002 | Serres | SanJose         | 2003 | Liu     | SanJose        |
| 1001 | Peel   | London          | 2006 | Clemens | London         |
+------+--------+-----------------+------+---------+----------------+

28) Find all salespeople whose name starts with â€˜Pâ€™ and fourth character is â€˜Iâ€™. 

mysql> SELECT * FROM salespeople WHERE sname LIKE "P__I%";
Empty set (0.00 sec)

29) Write a query that uses a subquery to obtain all orders for the customer named â€˜Cisnerosâ€™. Assume you do not know his customer number.  
mysql>SELECT * FROM orders
         WHERE cnum IN (
             SELECT cnum FROM customers WHERE cname = "Cisneros"
             );
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-03-10 | 2008 | 1007 |
| 3006 | 1098.16 | 1990-03-10 | 2008 | 1007 |
+------+---------+------------+------+------+

30) Find the largest orders for Serres and Rifkin. 
mysql> SELECT s.snum, s.sname, MAX(o.amt) FROM
           orders AS o JOIN salespeople s on s.SNUM = o.SNUM
           GROUP BY sname HAVING sname IN ("Rifkin","Serres");
+------+--------+------------+
| snum | sname  | MAX(o.amt) |
+------+--------+------------+
| 1007 | Rifkin |    1098.16 |
| 1002 | Serres |    5160.45 |
+------+--------+------------+

31) Sort the salespeople table in the following order: snum, sname, commission, city. 
mysql> SELECT snum,sname,comm,city FROM salespeople;
+------+---------+------+-----------+
| snum | sname   | comm | city      |
+------+---------+------+-----------+
| 1001 | Peel    |   12 | London    |
| 1002 | Serres  |   13 | SanJose   |
| 1003 | AxelRod |   10 | New York  |
| 1004 | Motika  |   11 | London    |
| 1007 | Rifkin  |   15 | Barcelona |
| 1008 | Fran    |   25 | London    |
+------+---------+------+-----------+

32) Select all customers whose names fall in between â€˜Aâ€™ and â€˜Gâ€™ alphabetical range. 
mysql> SELECT * FROM customers WHERE cname BETWEEN 'A' AND 'G';
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2006 | Clemens  | London  |    100 | 1001 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+

33) Select all the possible combinations of customers you can assign. 

SELECT c.cname, c1.cname
FROM customers c
         JOIN customers c1
              ON c.cnum != c1.cnum;

+----------+----------+
| cname    | cname    |
+----------+----------+
| Cisneros | Hoffman  |
| Pereira  | Hoffman  |
| Clemens  | Hoffman  |
| Grass    | Hoffman  |
| Liu      | Hoffman  |
| Giovanni | Hoffman  |
| Cisneros | Giovanni |
| Pereira  | Giovanni |
| Clemens  | Giovanni |
| Grass    | Giovanni |
| Liu      | Giovanni |
| Hoffman  | Giovanni |
| Cisneros | Liu      |
| Pereira  | Liu      |
| Clemens  | Liu      |
| Grass    | Liu      |
| Giovanni | Liu      |
| Hoffman  | Liu      |
| Cisneros | Grass    |
| Pereira  | Grass    |
| Clemens  | Grass    |
| Liu      | Grass    |
| Giovanni | Grass    |
| Hoffman  | Grass    |
| Cisneros | Clemens  |
| Pereira  | Clemens  |
| Grass    | Clemens  |
| Liu      | Clemens  |
| Giovanni | Clemens  |
| Hoffman  | Clemens  |
| Cisneros | Pereira  |
| Clemens  | Pereira  |
| Grass    | Pereira  |
| Liu      | Pereira  |
| Giovanni | Pereira  |
| Hoffman  | Pereira  |
| Pereira  | Cisneros |
| Clemens  | Cisneros |
| Grass    | Cisneros |
| Liu      | Cisneros |
| Giovanni | Cisneros |
| Hoffman  | Cisneros |
+----------+----------+

34) Select all orders that are greater than the average for October 4. 

SELECT * FROM orders WHERE amt > (
        SELECT AVG(amt) FROM orders
                    GROUP BY odate  HAVING odate = "1990-04-10"
        );

+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3002 | 1900.10 | 1990-03-10 | 2007 | 1004 |
| 3005 | 5160.45 | 1990-03-10 | 2003 | 1002 |
| 3006 | 1098.16 | 1990-03-10 | 2008 | 1007 |
| 3008 | 4723.00 | 1990-05-10 | 2006 | 1001 |
| 3009 | 1713.23 | 1990-04-10 | 2002 | 1003 |
| 3010 | 1309.95 | 1990-06-10 | 2004 | 1002 |
| 3011 | 9891.88 | 1990-06-10 | 2006 | 1001 |
+------+---------+------------+------+------+

35) Write a select command using correlated subquery that selects the names and numbers of all customers with ratings equal to the maximum for their city. 
SELECT
    c1.cnum,
    c1.cname,
    c1.rating
FROM
    customers c1
    JOIN (
        SELECT
            city,
            MAX(rating) AS max_rating
        FROM
            customers
        GROUP BY
            city
    ) c2 ON c1.city = c2.city
    AND c1.rating = c2.max_rating;

+------+----------+--------+
| cnum | cname    | rating |
+------+----------+--------+
| 2001 | Hoffman  |    100 |
| 2002 | Giovanni |    200 |
| 2004 | Grass    |    300 |
| 2006 | Clemens  |    100 |
| 2008 | Cisneros |    300 |
+------+----------+--------+   


36) Write a query that totals the orders for each day and places the results in descending order. 

SELECT onum,
       odate,
       SUM(amt) AS amount
FROM orders
GROUP BY odate
ORDER BY amount DESC;

+------+------------+----------+
| onum | odate      | amount   |
+------+------------+----------+
| 3010 | 1990-06-10 | 11201.83 |
| 3001 | 1990-03-10 |  8945.09 |
| 3008 | 1990-05-10 |  4723.00 |
| 3007 | 1990-04-10 |  1788.98 |
+------+------------+----------+

37) Write a select command that produces the rating followed by the name of each customer in SanJose. 

SELECT rating,
       cname
FROM customers
WHERE city = 'SanJose';

+--------+----------+
| rating | cname    |
+--------+----------+
|    200 | Liu      |
|    300 | Cisneros |
+--------+----------+

38) Find all orders with amounts smaller than any amount for a customer in SanJose. 

SELECT *
FROM orders
WHERE amt < (SELECT MAX(o.amt)
             FROM customers c,
                  orders o
             WHERE city = 'SanJose');

+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-03-10 | 2008 | 1007 |
| 3002 | 1900.10 | 1990-03-10 | 2007 | 1004 |
| 3003 |  767.69 | 1990-03-10 | 2001 | 1001 |
| 3005 | 5160.45 | 1990-03-10 | 2003 | 1002 |
| 3006 | 1098.16 | 1990-03-10 | 2008 | 1007 |
| 3007 |   75.75 | 1990-04-10 | 2004 | 1002 |
| 3008 | 4723.00 | 1990-05-10 | 2006 | 1001 |
| 3009 | 1713.23 | 1990-04-10 | 2002 | 1003 |
| 3010 | 1309.95 | 1990-06-10 | 2004 | 1002 |
+------+---------+------------+------+------+

39) Find all orders with above average amounts for their customers. 

SELECT o.*,
       c.cname
FROM orders AS o
         JOIN customers AS c ON o.cnum = c.cnum
WHERE o.amt > (SELECT avg(amt)
               FROM orders);
+------+---------+------------+------+------+---------+
| ONUM | AMT     | ODATE      | CNUM | SNUM | cname   |
+------+---------+------------+------+------+---------+
| 3005 | 5160.45 | 1990-03-10 | 2003 | 1002 | Liu     |
| 3008 | 4723.00 | 1990-05-10 | 2006 | 1001 | Clemens |
| 3011 | 9891.88 | 1990-06-10 | 2006 | 1001 | Clemens |
+------+---------+------------+------+------+---------+

40) Write a query that selects the highest rating in each city. 

SELECT MAX(rating) as Rating, city
FROM customers
GROUP BY city;

+--------+---------+
| Rating | city    |
+--------+---------+
|    100 | London  |
|    200 | Rome    |
|    300 | SanJose |
|    300 | Berlin  |
+--------+---------+

41) Write a query that calculates the amount of the salespersonâ€™s commission on each order by a customer with a rating above 100.00.

SELECT oc.cname,
       oc.rating,
       oc.onum,
       oc.amt,
       s.comm                            AS comm_as_percentage,
       ROUND((oc.amt * s.comm) / 100, 2) AS comm_as_amount
FROM (SELECT o.*, c.cname, c.rating
      FROM customers c,
           orders o
      WHERE c.cnum = o.cnum) oc
         JOIN
     salespeople s
     ON s.snum = oc.snum
WHERE oc.rating > 100;

+----------+--------+------+---------+--------------------+----------------+
| cname    | rating | ONUM | AMT     | comm_as_percentage | comm_as_amount |
+----------+--------+------+---------+--------------------+----------------+
| Giovanni |    200 | 3009 | 1713.23 |                 10 |         171.32 |
| Liu      |    200 | 3005 | 5160.45 |                 13 |         670.86 |
| Grass    |    300 | 3007 |   75.75 |                 13 |           9.85 |
| Grass    |    300 | 3010 | 1309.95 |                 13 |         170.29 |
| Cisneros |    300 | 3001 |   18.69 |                 15 |           2.80 |
| Cisneros |    300 | 3006 | 1098.16 |                 15 |         164.72 |
+----------+--------+------+---------+--------------------+----------------+

