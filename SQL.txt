mysql> select * from Salespeople;
+------+---------+-----------+------+
| SNUM | SNAME   | CITY      | COMM |
+------+---------+-----------+------+
| 1001 | Peel    | London    |   12 |
| 1002 | Serres  | SanJose   |   13 |
| 1004 | Motika  | London    |   11 |
| 1007 | Rofkin  | Barcelona |   15 |
| 1003 | AxelRod | New York  |   10 |
| 1008 | Fran    | London    |   25 |
+------+---------+-----------+------+

mysql> Select * from customers;
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2001 | Hoffman  | London  |    100 | 1001 |
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2006 | Clemens  | London  |    100 | 1001 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
+------+----------+---------+--------+------+

mysql> select * from orders;
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-10-03 | 2008 | 1007 |
| 3003 |  767.19 | 1990-10-03 | 2001 | 1001 |
| 3002 |  1900.1 | 1990-10-03 | 2007 | 1004 |
| 3005 | 5160.45 | 1990-10-03 | 2003 | 1002 |
| 3006 | 1098.16 | 1990-10-03 | 2008 | 1007 |
| 3009 | 1713.23 | 1990-10-04 | 2002 | 1003 |
| 3007 |   75.75 | 1990-10-04 | 2004 | 1002 |
| 3008 |    4723 | 1990-10-05 | 2006 | 1001 |
| 3010 | 1309.95 | 1990-10-06 | 2004 | 1002 |
| 3011 | 9891.88 | 1990-10-06 | 2006 | 1001 |
+------+---------+------------+------+------+



1) List all the columns of the Salespeople table.

mysql> Desc Salespeople;
mysql> show columns from salespeople;
+-------+--------------+------+-----+---------+-------+
| Field | Type         | Null | Key | Default | Extra |
+-------+--------------+------+-----+---------+-------+
| SNUM  | int          | NO   | PRI | NULL    |       |
| SNAME | varchar(255) | YES  |     | NULL    |       |
| CITY  | varchar(255) | YES  |     | NULL    |       |
| COMM  | int          | YES  |     | NULL    |       |
+-------+--------------+------+-----+---------+-------+


2) List all customers with a rating of 100. 

mysql> SELECT CNUM,CNAME 
FROM 
CUSTOMERS WHERE 
RATING=100;
+------+---------+
| CNUM | CNAME   |
+------+---------+
| 2001 | Hoffman |
| 2006 | Clemens |
| 2007 | Pereira |
+------+---------+


3) Find the largest order taken by each salesperson on each date. 

mysql> SELECT SNUM, MAX(AMT) AS 
'MAXIMUM AMOUNT', 
ODATE FROM ORDERS 
GROUP BY SNUM,ODATE 
ORDER BY ODATE,SNUM;
+------+----------------+------------+
| SNUM | MAXIMUM AMOUNT | ODATE      |
+------+----------------+------------+
| 1001 |         767.19 | 1990-10-03 |
| 1002 |        5160.45 | 1990-10-03 |
| 1004 |         1900.1 | 1990-10-03 |
| 1007 |        1098.16 | 1990-10-03 |
| 1002 |          75.75 | 1990-10-04 |
| 1003 |        1713.23 | 1990-10-04 |
| 1001 |           4723 | 1990-10-05 |
| 1001 |        9891.88 | 1990-10-06 |
| 1002 |        1309.95 | 1990-10-06 |
+------+----------------+------------+


4) Arrange the Order table by descending customer number. 

mysql> SELECT * FROM ORDERS 
ORDER BY 
CNUM 
DESC;
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-10-03 | 2008 | 1007 |
| 3006 | 1098.16 | 1990-10-03 | 2008 | 1007 |
| 3002 |  1900.1 | 1990-10-03 | 2007 | 1004 |
| 3008 |    4723 | 1990-10-05 | 2006 | 1001 |
| 3011 | 9891.88 | 1990-10-06 | 2006 | 1001 |
| 3007 |   75.75 | 1990-10-04 | 2004 | 1002 |
| 3010 | 1309.95 | 1990-10-06 | 2004 | 1002 |
| 3005 | 5160.45 | 1990-10-03 | 2003 | 1002 |
| 3009 | 1713.23 | 1990-10-04 | 2002 | 1003 |
| 3003 |  767.19 | 1990-10-03 | 2001 | 1001 |
+------+---------+------------+------+------+


5) Find which salespeople currently have orders in the order table.

Approach 1: Using JOIN
mysql> SELECT DISTINCT S.SNUM, S.SNAME 
FROM SALESPEOPLE S JOIN 
ORDERS O ON 
O.SNUM=S.SNUM ;

Approach 2: Using Subquery
mysql> SELECT SNUM,SNAME 
FROM 
SALESPEOPLE 
WHERE SNUM 
IN(SELECT DISTINCT SNUM FROM ORDERS);

+------+---------+
| SNUM | SNAME   |
+------+---------+
| 1001 | Peel    |
| 1002 | Serres  |
| 1003 | AxelRod |
| 1004 | Motika  |
| 1007 | Rofkin  |
+------+---------+


6) List names of all customers matched with the salespeople serving them. 

mysql> SELECT C.CNUM,C.CNAME,S.SNUM,S.SNAME 
FROM 
SALESPEOPLE S 
JOIN
 CUSTOMERS C 
 ON 
 C.SNUM=S.SNUM;
+------+----------+------+---------+
| CNUM | CNAME    | SNUM | SNAME   |
+------+----------+------+---------+
| 2001 | Hoffman  | 1001 | Peel    |
| 2002 | Giovanni | 1003 | AxelRod |
| 2003 | Liu      | 1002 | Serres  |
| 2004 | Grass    | 1002 | Serres  |
| 2006 | Clemens  | 1001 | Peel    |
| 2007 | Pereira  | 1004 | Motika  |
| 2008 | Cisneros | 1007 | Rofkin  |
+------+----------+------+---------+


7) Find the names and numbers of all salespeople who have more than one customer. 

mysql> SELECT S.SNUM, S.SNAME, COUNT(C.SNUM) 
FROM 
SALESPEOPLE S 
JOIN 
CUSTOMERS C 
ON S.SNUM=C.SNUM
GROUP BY C.SNUM 
HAVING 
COUNT(C.SNUM)>1;
+------+--------+---------------+
| SNUM | SNAME  | COUNT(C.SNUM) |
+------+--------+---------------+
| 1001 | Peel   |             2 |
| 1002 | Serres |             2 |
+------+--------+---------------+


8) Count the orders of each of the salespeople and output the results in descending order. 

mysql> SELECT SNUM,COUNT(SNUM)
 AS 'COUNT' 
 FROM 
 ORDERS 
 GROUP BY 
 SNUM 
 ORDER BY 
 COUNT(SNUM) DESC;
+------+-------+
| SNUM | COUNT |
+------+-------+
| 1001 |     3 |
| 1002 |     3 |
| 1007 |     2 |
| 1003 |     1 |
| 1004 |     1 |
+------+-------+


9) List the customer table if and only if one or more of the customers in the Customer table are located in SanJose. 

mysql> SELECT * 
FROM 
CUSTOMERS 
WHERE EXISTS (
        SELECT * 
        FROM 
        CUSTOMERS WHERE 
        CITY ='SANJOSE');
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2001 | Hoffman  | London  |    100 | 1001 |
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2006 | Clemens  | London  |    100 | 1001 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+


10) Match salespeople to customers according to what city they live in. 

mysql> SELECT S.SNUM,S.SNAME,C.CNUM,C.CNAME,C.CITY 
FROM 
SALESPEOPLE S ,
CUSTOMERS C 
WHERE 
S.CITY=C.CITY;
+------+--------+------+----------+---------+
| SNUM | SNAME  | CNUM | CNAME    | CITY    |
+------+--------+------+----------+---------+
| 1008 | Fran   | 2001 | Hoffman  | London  |
| 1004 | Motika | 2001 | Hoffman  | London  |
| 1001 | Peel   | 2001 | Hoffman  | London  |
| 1002 | Serres | 2003 | Liu      | SanJose |
| 1008 | Fran   | 2006 | Clemens  | London  |
| 1004 | Motika | 2006 | Clemens  | London  |
| 1001 | Peel   | 2006 | Clemens  | London  |
| 1002 | Serres | 2008 | Cisneros | SanJose |
+------+--------+------+----------+---------+


11) Find all the customers in SanJose who have a rating above 200. 

mysql> SELECT * 
FROM CUSTOMERS 
WHERE 
CITY='SANJOSE' 
AND RATING>200;
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+

12) List the names and commissions of all salespeople in London. 

mysql> SELECT SNUM,SNAME,COMM 
FROM 
SALESPEOPLE 
WHERE 
CITY='LONDON';
+------+--------+------+
| SNUM | SNAME  | COMM |
+------+--------+------+
| 1001 | Peel   |   12 |
| 1004 | Motika |   11 |
| 1008 | Fran   |   25 |
+------+--------+------+


13) List all the orders of Salesperson Motika from the orders table.

Approach 1: Subquery

mysql> SELECT * 
FROM 
ORDERS WHERE 
SNUM =(
        SELECT SNUM 
        FROM 
        SALESPEOPLE 
        WHERE 
        SNAME ='MOTIKA');
+------+--------+------------+------+------+
| ONUM | AMT    | ODATE      | CNUM | SNUM |
+------+--------+------------+------+------+
| 3002 | 1900.1 | 1990-10-03 | 2007 | 1004 |
+------+--------+------------+------+------+

Approach 2: JOIN

mysql> SELECT O.* 
FROM 
ORDERS O JOIN 
SALESPEOPLE S 
ON 
O.SNUM=S.SNUM 
WHERE 
S.SNAME='MOTIKA';
+------+--------+------------+------+------+
| ONUM | AMT    | ODATE      | CNUM | SNUM |
+------+--------+------------+------+------+
| 3002 | 1900.1 | 1990-10-03 | 2007 | 1004 |
+------+--------+------------+------+------+


14) Find all customers who booked orders on October 3. 
Approach 1: Subquery
mysql> SELECT * 
FROM 
CUSTOMERS 
WHERE 
CNUM IN (
        SELECT CNUM 
        FROM ORDERS 
        WHERE ODATE 
        like "%10-03");
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2008 | Cisneros | SanJose |    300 | 1007 |
| 2001 | Hoffman  | London  |    100 | 1001 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
| 2003 | Liu      | SanJose |    200 | 1002 |
+------+----------+---------+--------+------+
Approach 2: JOIN
mysql> Select customers.* 
from 
customers 
join 
orders 
on Orders.cnum= customers.cnum
where 
odate 
like  "%10-03";
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2008 | Cisneros | SanJose |    300 | 1007 |
| 2001 | Hoffman  | London  |    100 | 1001 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
| 2003 | Liu      | SanJose |    200 | 1002 |
+------+----------+---------+--------+------+

15) Give the sums of the amounts from the Orders table, grouped by date, 
eliminating all those dates where the SUM was not at least 2000 above the maximum Amount. 


mysql> SELECT SUM(AMT),ODATE 
FROM 
ORDERS 
GROUP BY 
ODATE 
HAVING SUM(AMT)> ( 
        SELECT 2000+MAX(AMT) 
        FROM ORDERS);

Empty set (0.00 sec)

16) Select all orders that had amounts that were greater than at least one of the orders from October 6. 


mysql> SELECT * 
FROM 
ORDERS 
WHERE 
AMT> ANY(
        SELECT AMT 
        FROM 
        ORDERS 
        WHERE 
        ODATE='1990-10-06');
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3002 |  1900.1 | 1990-10-03 | 2007 | 1004 |
| 3005 | 5160.45 | 1990-10-03 | 2003 | 1002 |
| 3009 | 1713.23 | 1990-10-04 | 2002 | 1003 |
| 3008 |    4723 | 1990-10-05 | 2006 | 1001 |
| 3011 | 9891.88 | 1990-10-06 | 2006 | 1001 |
+------+---------+------------+------+------+

17) Write a query that uses the EXISTS operator to extract all salespeople who have customers with a rating of 300.
 

mysql> SELECT * 
FROM 
SALESPEOPLE 
WHERE EXISTS (
        SELECT * FROM CUSTOMERS 
        WHERE SALESPEOPLE.SNUM=CUSTOMERS.SNUM 
        AND RATING =300);
+------+--------+-----------+------+
| SNUM | SNAME  | CITY      | COMM |
+------+--------+-----------+------+
| 1002 | Serres | SanJose   |   13 |
| 1007 | Rofkin | Barcelona |   15 |
+------+--------+-----------+------+

 18) Find all customers whose cnum is 1000 above the snum of Serres. 

mysql> SELECT * 
FROM 
CUSTOMERS 
WHERE CNUM>=(
        SELECT 1000 + SNUM 
        FROM SALESPEOPLE 
        WHERE 
        SNAME ='SERRES');
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2006 | Clemens  | London  |    100 | 1001 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+

19) Give the salespeople’s commissions as percentages instead of decimal numbers. 

mysql> SELECT SNUM,SNAME,CONCAT(COMM,'%') 
AS 
'COMMISSION PERCENT' 
FROM SALESPEOPLE;
+------+---------+--------------------+
| SNUM | SNAME   | COMMISSION PERCENT |
+------+---------+--------------------+
| 1001 | Peel    | 12%                |
| 1002 | Serres  | 13%                |
| 1003 | AxelRod | 10%                |
| 1004 | Motika  | 11%                |
| 1007 | Rofkin  | 15%                |
| 1008 | Fran    | 25%                |
+------+---------+--------------------+

20) Find the largest order taken by each salesperson on each date,
eliminating those Maximum orders, which are less than 3000. 

mysql> SELECT SNUM,MAX(AMT) 
AS 
'LARGEST ORDER',
ODATE FROM ORDERS 
GROUP BY 
SNUM,ODATE 
HAVING MAX(AMT)>=3000;
+------+---------------+------------+
| SNUM | LARGEST ORDER | ODATE      |
+------+---------------+------------+
| 1002 |       5160.45 | 1990-10-03 |
| 1001 |          4723 | 1990-10-05 |
| 1001 |       9891.88 | 1990-10-06 |
+------+---------------+------------+

21) List all the largest orders for October 3, for each salesperson. 

mysql> SELECT s.snum, s.sname, o.odate, ifnull(MAX(o.amt),0) as largest_order FROM salespeople s 
    -> LEFT JOIN orders o ON s.snum = o.snum 
    -> AND o.odate = '1990-10-03' GROUP BY 
    -> s.snum, o.odate;
+------+---------+------------+---------------+
| snum | sname   | odate      | largest_order |
+------+---------+------------+---------------+
| 1001 | Peel    | 1990-10-03 |        767.19 |
| 1002 | Serres  | 1990-10-03 |       5160.45 |
| 1003 | AxelRod | NULL       |          0.00 |
| 1004 | Motika  | 1990-10-03 |       1900.10 |
| 1007 | Rifkin  | 1990-10-03 |       1098.16 |
| 1008 | Fran    | NULL       |          0.00 |
+------+---------+------------+---------------+



22) Find all customers located in cities where Serres has customers. 


mysql> SELECT * 
FROM 
CUSTOMERS 
WHERE 
CITY IN (
        SELECT CITY 
        FROM CUSTOMERS 
        WHERE SNUM=(
                SELECT SNUM 
                FROM SALESPEOPLE 
                WHERE SNAME='Serres'
                ));
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+

23) Select all customers with a rating above 200. 

mysql> SELECT * 
FROM CUSTOMERS 
WHERE RATING>200;
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+


24) Count the number of salespeople currently having orders in the orders table. 

mysql> SELECT COUNT(DISTINCT SNUM) 
AS 'NUMBER OF SALESPEOPLE WITH ORDERS' 
FROM ORDERS;
+-----------------------------------+
| NUMBER OF SALESPEOPLE WITH ORDERS |
+-----------------------------------+
|                                 5 |
+-----------------------------------+

25) Write a query that produces all customers serviced by salespeople with a commission above 12%.
 Output the customer’s name, salesperson’s name and the salesperson’s rate of commission. 

mysql> SELECT C.CNAME, S.SNAME, S.COMM 
FROM 
CUSTOMERS C 
JOIN 
SALESPEOPLE S 
ON 
S.SNUM=C.SNUM 
WHERE S.COMM>12;
+----------+--------+------+
| CNAME    | SNAME  | COMM |
+----------+--------+------+
| Liu      | Serres |   13 |
| Grass    | Serres |   13 |
| Cisneros | Rofkin |   15 |
+----------+--------+------+

26) Find salespeople who have multiple customers. 

mysql> SELECT SNUM,SNAME 
FROM SALESPEOPLE 
WHERE SNUM IN (
        SELECT SNUM 
        FROM CUSTOMERS 
        GROUP BY 
        SNUM 
        HAVING COUNT(SNUM)>1);
+------+--------+
| SNUM | SNAME  |
+------+--------+
| 1001 | Peel   |
| 1002 | Serres |
+------+--------+


27) Find salespeople with customers located in their own cities. 


mysql> SELECT DISTINCT SALESPEOPLE.* FROM SALESPEOPLE JOIN CUSTOMERS ON SALESPEOPLE.SNUM= CUSTOMERS.SNUM AND SALESPEOPLE.CITY=CUSTOMERS.CITY;
+------+--------+---------+------+
| SNUM | SNAME  | CITY    | COMM |
+------+--------+---------+------+
| 1001 | Peel   | London  |   12 |
| 1002 | Serres | SanJose |   13 |
+------+--------+---------+------+

28) Find all salespeople whose name starts with ‘P’ and fourth character is ‘I’. 

mysql> SELECT * 
FROM SALESPEOPLE 
WHERE SNAME 
LIKE 'P__I%';


Empty set (0.00 sec)

29) Write a query that uses a subquery to obtain all orders for the customer named ‘Cisneros’.
Assume you do not know his customer number.

mysql> SELECT * 
FROM ORDERS 
WHERE CNUM= (
        SELECT CNUM 
        FROM CUSTOMERS 
        WHERE CNAME='CISNEROS');
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-10-03 | 2008 | 1007 |
| 3006 | 1098.16 | 1990-10-03 | 2008 | 1007 |
+------+---------+------------+------+------+


30) Find the largest orders for 'Serres' and Rifkin. 

mysql> SELECT S.SNAME, MAX(O.AMT) 
AS 
'MAXIMUM AMOUNT' 
FROM SALESPEOPLE S 
JOIN ORDERS O 
ON O.SNUM=S.SNUM 
GROUP BY S.SNAME 
HAVING S.SNAME='ROFKIN' 
OR 
S.SNAME='SERRES';
+--------+----------------+
| SNAME  | MAXIMUM AMOUNT |
+--------+----------------+
| Rofkin |        1098.16 |
| Serres |        5160.45 |
+--------+----------------+

31) Sort the salespeople table in the following order: snum, sname, commission, city. 

mysql> SELECT SNUM, 
SNAME, 
COMM,
CITY 
FROM 
SALESPEOPLE;
+------+---------+------+-----------+
| SNUM | SNAME   | COMM | CITY      |
+------+---------+------+-----------+
| 1001 | Peel    |   12 | London    |
| 1002 | Serres  |   13 | SanJose   |
| 1004 | Motika  |   11 | London    |
| 1007 | Rofkin  |   15 | Barcelona |
| 1003 | AxelRod |   10 | New York  |
| 1008 | Fran    |   25 | London    |
+------+---------+------+-----------+


32) Select all customers whose names fall in between ‘A’ and ‘G’ alphabetical range. 


SELECT * 
FROM CUSTOMERS 
WHERE 
CNAME BETWEEN 
('A%') AND ('H%') 
ORDER BY 
CNAME;
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2006 | Cisneros | SanJose |    300 | 1007 |
| 2005 | Clemens  | London  |    100 | 1001 |
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
+------+----------+---------+--------+------+


33) Select all the possible combinations of customers you can assign. 

mysql> SELECT C.CNUM,
C.CNAME, 
S.SNUM,
S.SNAME 
FROM SALESPEOPLE S,
CUSTOMERS C;

+------+----------+------+---------+
| CNUM | CNAME    | SNUM | SNAME   |
+------+----------+------+---------+
| 2001 | Hoffman  | 1008 | Fran    |
| 2001 | Hoffman  | 1007 | Rofkin  |
| 2001 | Hoffman  | 1004 | Motika  |
| 2001 | Hoffman  | 1003 | AxelRod |
| 2001 | Hoffman  | 1002 | Serres  |
| 2001 | Hoffman  | 1001 | Peel    |
| 2002 | Giovanni | 1008 | Fran    |
| 2002 | Giovanni | 1007 | Rofkin  |
| 2002 | Giovanni | 1004 | Motika  |
| 2002 | Giovanni | 1003 | AxelRod |
| 2002 | Giovanni | 1002 | Serres  |
| 2002 | Giovanni | 1001 | Peel    |
| 2003 | Liu      | 1008 | Fran    |
| 2003 | Liu      | 1007 | Rofkin  |
| 2003 | Liu      | 1004 | Motika  |
| 2003 | Liu      | 1003 | AxelRod |
| 2003 | Liu      | 1002 | Serres  |
| 2003 | Liu      | 1001 | Peel    |
| 2004 | Grass    | 1008 | Fran    |
| 2004 | Grass    | 1007 | Rofkin  |
| 2004 | Grass    | 1004 | Motika  |
| 2004 | Grass    | 1003 | AxelRod |
| 2004 | Grass    | 1002 | Serres  |
| 2004 | Grass    | 1001 | Peel    |
| 2006 | Clemens  | 1008 | Fran    |
| 2006 | Clemens  | 1007 | Rofkin  |
| 2006 | Clemens  | 1004 | Motika  |
| 2006 | Clemens  | 1003 | AxelRod |
| 2006 | Clemens  | 1002 | Serres  |
| 2006 | Clemens  | 1001 | Peel    |
| 2007 | Pereira  | 1008 | Fran    |
| 2007 | Pereira  | 1007 | Rofkin  |
| 2007 | Pereira  | 1004 | Motika  |
| 2007 | Pereira  | 1003 | AxelRod |
| 2007 | Pereira  | 1002 | Serres  |
| 2007 | Pereira  | 1001 | Peel    |
| 2008 | Cisneros | 1008 | Fran    |
| 2008 | Cisneros | 1007 | Rofkin  |
| 2008 | Cisneros | 1004 | Motika  |
| 2008 | Cisneros | 1003 | AxelRod |
| 2008 | Cisneros | 1002 | Serres  |
| 2008 | Cisneros | 1001 | Peel    |
+------+----------+------+---------+


34) Select all orders that are greater than the average for October 4. 

mysql> SELECT * 
FROM ORDERS 
WHERE AMT>(
        SELECT AVG(AMT) 
        FROM ORDERS 
        WHERE ODATE ='1990-10-04');
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3002 |  1900.1 | 1990-10-03 | 2007 | 1004 |
| 3005 | 5160.45 | 1990-10-03 | 2003 | 1002 |
| 3006 | 1098.16 | 1990-10-03 | 2008 | 1007 |
| 3009 | 1713.23 | 1990-10-04 | 2002 | 1003 |
| 3008 |    4723 | 1990-10-05 | 2006 | 1001 |
| 3010 | 1309.95 | 1990-10-06 | 2004 | 1002 |
| 3011 | 9891.88 | 1990-10-06 | 2006 | 1001 |
+------+---------+------------+------+------+


35) Write a select command using correlated subquery that selects the names and numbers of all customers with ratings equal to the maximum for their city. 

mysql> SELECT CNUM,
CNAME, 
RATING, 
CITY FROM 
CUSTOMERS WHERE 
(RATING,CITY) 
IN (
        SELECT MAX(RATING), CITY 
        FROM CUSTOMERS 
        GROUP BY CITY) 
        ORDER BY CITY;
+------+----------+--------+---------+
| CNUM | CNAME    | RATING | CITY    |
+------+----------+--------+---------+
| 2004 | Grass    |    300 | Berlin  |
| 2001 | Hoffman  |    100 | London  |
| 2006 | Clemens  |    100 | London  |
| 2002 | Giovanni |    200 | Rome    |
| 2008 | Cisneros |    300 | SanJose |
+------+----------+--------+---------+

36) Write a query that totals the orders for each day and places the results in descending order. 

mysql> SELECT SUM(AMT) 
AS 'TOTAL ORDER', 
ODATE FROM ORDERS 
GROUP BY ODATE 
ORDER BY SUM(AMT) 
DESC;
+--------------------+------------+
| TOTAL ORDER        | ODATE      |
+--------------------+------------+
| 11201.829833984375 | 1990-10-06 |
|  8944.590208053589 | 1990-10-03 |
|               4723 | 1990-10-05 |
|   1788.97998046875 | 1990-10-04 |
+--------------------+------------+

37) Write a select command that produces the rating followed by the name of each customer in SanJose. 

mysql> SELECT CNAME, 
RATING FROM 
CUSTOMERS 
WHERE 
CITY ='SANJOSE';
+----------+--------+
| CNAME    | RATING |
+----------+--------+
| Liu      |    200 |
| Cisneros |    300 |
+----------+--------+


38) Find all orders with amounts smaller than any amount for a customer in SanJose. 


mysql> SELECT * 
FROM ORDERS 
WHERE AMT<( 
        SELECT MAX(AMT) 
        FROM ORDERS WHERE 
        CNUM IN (
                SELECT CNUM 
                FROM 
                CUSTOMERS 
                WHERE CITY ='SANJOSE')
                );
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-10-03 | 2008 | 1007 |
| 3003 |  767.19 | 1990-10-03 | 2001 | 1001 |
| 3002 |  1900.1 | 1990-10-03 | 2007 | 1004 |
| 3006 | 1098.16 | 1990-10-03 | 2008 | 1007 |
| 3009 | 1713.23 | 1990-10-04 | 2002 | 1003 |
| 3007 |   75.75 | 1990-10-04 | 2004 | 1002 |
| 3008 |    4723 | 1990-10-05 | 2006 | 1001 |
| 3010 | 1309.95 | 1990-10-06 | 2004 | 1002 |
+------+---------+------------+------+------+

39) Find all orders with above average amounts for their customers. 

mysql> SELECT * 
FROM 
ORDERS O 
WHERE AMT>(
        SELECT AVG(AMT) 
        FROM 
        ORDERS P WHERE O.CNUM=P.CNUM
        );
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3006 | 1098.16 | 1990-10-03 | 2008 | 1007 |
| 3010 | 1309.95 | 1990-10-06 | 2004 | 1002 |
| 3011 | 9891.88 | 1990-10-06 | 2006 | 1001 |
+------+---------+------------+------+------+

40) Write a query that selects the highest rating in each city. 

mysql> SELECT CITY, 
MAX(RATING) 
AS 'MAXIMUM RATING' 
FROM CUSTOMERS 
GROUP BY 
CITY;
+---------+----------------+
| CITY    | MAXIMUM RATING |
+---------+----------------+
| London  |            100 |
| Rome    |            200 |
| SanJose |            300 |
| Berlin  |            300 |
+---------+----------------+

41) Write a query that calculates the amount of the salesperson’s commission on each order 
by a customer with a rating above 100.00. 

mysql> SELECT S.SNUM,
S.SNAME,
O.ONUM,
O.AMT,
S.COMM,
(S.COMM*O.AMT/100) AS 
'COMMISSION' 
FROM ORDERS O 
JOIN SALESPEOPLE S 
ON S.SNUM=O.SNUM 
WHERE O.CNUM 
IN (
        SELECT CNUM 
        FROM CUSTOMERS 
        WHERE RATING>100
        );
+------+---------+------+---------+------+--------------------+
| SNUM | SNAME   | ONUM | AMT     | COMM | COMMISSION         |
+------+---------+------+---------+------+--------------------+
| 1003 | AxelRod | 3009 | 1713.23 |   10 |   171.322998046875 |
| 1002 | Serres  | 3005 | 5160.45 |   13 |   670.858525390625 |
| 1002 | Serres  | 3007 |   75.75 |   13 |             9.8475 |
| 1002 | Serres  | 3010 | 1309.95 |   13 | 170.29349365234376 |
| 1007 | Rofkin  | 3001 |   18.69 |   15 | 2.8035000801086425 |
| 1007 | Rofkin  | 3006 | 1098.16 |   15 | 164.72400512695313 |
+------+---------+------+---------+------+--------------------+


42) Count the customers with ratings above SanJose’s average. 

mysql> SELECT COUNT(CNUM) 
FROM CUSTOMERS 
WHERE RATING >(
        SELECT AVG(RATING) 
        FROM CUSTOMERS 
        WHERE CITY='SANJOSE'
        );
+-------------+
| COUNT(CNUM) |
+-------------+
|           2 |
+-------------+

43) Find all salespeople that are located in either Barcelona or London. 

mysql> SELECT * 
FROM 
SALESPEOPLE 
WHERE 
CITY ='BARCELONA' 
OR 
CITY='LONDON';
+------+--------+-----------+------+
| SNUM | SNAME  | CITY      | COMM |
+------+--------+-----------+------+
| 1001 | Peel   | London    |   12 |
| 1004 | Motika | London    |   11 |
| 1007 | Rofkin | Barcelona |   15 |
| 1008 | Fran   | London    |   25 |
+------+--------+-----------+------+

44) Find all salespeople with only one customer. 

SELECT * 
FROM SALESPEOPLE 
WHERE SNUM IN ( 
        SELECT SNUM FROM CUSTOMERS 
        GROUP BY SNUM 
        HAVING 
        COUNT(SNUM) =1
        );
+------+---------+-----------+------+
| SNUM | SNAME   | CITY      | COMM |
+------+---------+-----------+------+
| 1003 | AxelRod | New York  |   10 |
| 1004 | Motika  | London    |   11 |
| 1007 | Rofkin  | Barcelona |   15 |
+------+---------+-----------+------+

45) Write a query that joins the Customer table to itself to find all pairs or customers served by a single salesperson. 

mysql> SELECT C1.CNUM,
C1.CNAME,
C2.CNUM,
C2.CNAME 
FROM 
CUSTOMERS C1 
JOIN 
CUSTOMERS C2 
ON 
C1.SNUM=C2.SNUM 
WHERE 
C1.CNUM<C2.CNUM;
+------+---------+------+---------+
| CNUM | CNAME   | CNUM | CNAME   |
+------+---------+------+---------+
| 2001 | Hoffman | 2006 | Clemens |
| 2003 | Liu     | 2004 | Grass   |
+------+---------+------+---------+


46) Write a query that will give you all orders for more than $1000.00. 

mysql> SELECT * 
FROM ORDERS 
WHERE AMT> 1000.00;
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3002 |  1900.1 | 1990-10-03 | 2007 | 1004 |
| 3005 | 5160.45 | 1990-10-03 | 2003 | 1002 |
| 3006 | 1098.16 | 1990-10-03 | 2008 | 1007 |
| 3009 | 1713.23 | 1990-10-04 | 2002 | 1003 |
| 3008 |    4723 | 1990-10-05 | 2006 | 1001 |
| 3010 | 1309.95 | 1990-10-06 | 2004 | 1002 |
| 3011 | 9891.88 | 1990-10-06 | 2006 | 1001 |
+------+---------+------------+------+------+

47) Write a query that lists each order number followed by the name of the customer who made that order. 


mysql> SELECT O.ONUM, 
C.CNAME 
FROM ORDERS O 
JOIN CUSTOMERS C 
ON 
O.CNUM=C.CNUM;
+------+----------+
| ONUM | CNAME    |
+------+----------+
| 3003 | Hoffman  |
| 3009 | Giovanni |
| 3005 | Liu      |
| 3007 | Grass    |
| 3010 | Grass    |
| 3008 | Clemens  |
| 3011 | Clemens  |
| 3002 | Pereira  |
| 3001 | Cisneros |
| 3006 | Cisneros |
+------+----------+

48) Write a query that selects all the customers whose ratings are equal to or greater than ANY(in the SQL sense) of ‘Serres’. 

mysql> SELECT C.* 
FROM CUSTOMERS C 
JOIN SALESPEOPLE S 
ON 
C.SNUM=S.SNUM 
WHERE RATING>= ANY (
        SELECT MIN(RATING) 
        FROM CUSTOMERS WHERE SNUM=(
                SELECT SNUM FROM 
                SALESPEOPLE WHERE 
                SNAME ='SERRES')
                );
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+


49) Write two queries that will produce all orders taken on October 3 or October 4. 
mysql> SELECT * FROM ORDERS 
WHERE ODATE BETWEEN 
'1990-10-03' 
AND '1990-10-04';

mysql> SELECT * FROM ORDERS 
WHERE ODATE= '1990-10-03' 
OR ODATE ='1990-10-04';
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-10-03 | 2008 | 1007 |
| 3003 |  767.19 | 1990-10-03 | 2001 | 1001 |
| 3002 |  1900.1 | 1990-10-03 | 2007 | 1004 |
| 3005 | 5160.45 | 1990-10-03 | 2003 | 1002 |
| 3006 | 1098.16 | 1990-10-03 | 2008 | 1007 |
| 3009 | 1713.23 | 1990-10-04 | 2002 | 1003 |
| 3007 |   75.75 | 1990-10-04 | 2004 | 1002 |
+------+---------+------------+------+------+

50) Find only those customers whose ratings are higher than every customer in Rome. 

mysql> SELECT * FROM CUSTOMERS 
WHERE RATING>(SELECT MAX(RATING) 
FROM CUSTOMERS 
WHERE
CITY='ROME'
);
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+



51) Write a query on the Customers table whose output will exclude all customers with a rating= 100.00, unless they are located in Rome.

mysql> SELECT * 
FROM CUSTOMERS 
WHERE RATING !=100 
OR CITY='ROME';
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+

52) Find all rows from the customer’s table for which the salesperson number is 1001. 


mysql> SELECT * 
FROM CUSTOMERS 
WHERE SNUM=1001;
+------+---------+--------+--------+------+
| CNUM | CNAME   | CITY   | RATING | SNUM |
+------+---------+--------+--------+------+
| 2001 | Hoffman | London |    100 | 1001 |
| 2006 | Clemens | London |    100 | 1001 |
+------+---------+--------+--------+------+


53) Find the total amount in orders for each salesperson
where their total of amounts are greater than the amount of the largest order in the table.

mysql> SELECT SNUM, 
SUM(AMT) AS 'TOTAL AMOUNT' 
FROM ORDERS GROUP BY 
SNUM HAVING SUM(AMT)>(
        SELECT MAX(AMT)
        FROM ORDERS);
+------+--------------------+
| SNUM | TOTAL AMOUNT       |
+------+--------------------+
| 1001 | 15382.069885253906 |
+------+--------------------+


54) Write a query that selects all orders save those with zeroes or NULL in the amount file. 
// To Select all orders 
mysql> SELECT * FROM ORDERS 
WHERE AM<>0 
AND 
AMT IS NOT NULL;
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-10-03 | 2008 | 1007 |
| 3003 |  767.19 | 1990-10-03 | 2001 | 1001 |
| 3002 |  1900.1 | 1990-10-03 | 2007 | 1004 |
| 3005 | 5160.45 | 1990-10-03 | 2003 | 1002 |
| 3006 | 1098.16 | 1990-10-03 | 2008 | 1007 |
| 3009 | 1713.23 | 1990-10-04 | 2002 | 1003 |
| 3007 |   75.75 | 1990-10-04 | 2004 | 1002 |
| 3008 |    4723 | 1990-10-05 | 2006 | 1001 |
| 3010 | 1309.95 | 1990-10-06 | 2004 | 1002 |
| 3011 | 9891.88 | 1990-10-06 | 2006 | 1001 |
+------+---------+------------+------+------+

//To save output in file (AMMOUNT.TXT):-
mysql> SELECT * FROM ORDERS 
INTO OUTFILE 
'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/AMOUNT.TXT';


55) Produce all combinations of salespeople and customer names such that the former precedes the latter alphabetically, and the latter has a rating of less than 200. 

mysql> SELECT S.SNUM, S.SNAME,C.CNUM,C.CNAME,C.RATING FROM CUSTOMERS C,
SALESPEOPLE S WHERE
 C.RATING<200 AND
 C.CNAME>S.SNAME;
+------+---------+------+---------+--------+
| SNUM | SNAME   | CNUM | CNAME   | RATING |
+------+---------+------+---------+--------+
| 1001 | Peel    | 2007 | Pereira |    100 |
| 1003 | AxelRod | 2007 | Pereira |    100 |
| 1003 | AxelRod | 2006 | Clemens |    100 |
| 1003 | AxelRod | 2001 | Hoffman |    100 |
| 1004 | Motika  | 2007 | Pereira |    100 |
| 1008 | Fran    | 2007 | Pereira |    100 |
| 1008 | Fran    | 2001 | Hoffman |    100 |
+------+---------+------+---------+--------+


56) Find all salespeople name and commission. 

mysql> SELECT SNAME, COMM FROM SALESPEOPLE;
+---------+------+
| SNAME   | COMM |
+---------+------+
| Peel    |   12 |
| Serres  |   13 |
| Motika  |   11 |
| Rofkin  |   15 |
| AxelRod |   10 |
| Fran    |   25 |
+---------+------+


57) Write a query that produces the names and cities of all customers with the same rating as Hoffman. Write the query using Hoffman’s cnum rather than his rating, so that it would still be usable if his rating is changed. 

mysql> SELECT CNAME,CITY FROM CUSTOMERS 
WHERE RATING =(
        SELECT RATING FROM CUSTOMERS 
        WHERE CNUM =(
                SELECT CNUM FROM CUSTOMERS 
                WHERE CNAME ='HOFFMAN')
                );
+---------+--------+
| CNAME   | CITY   |
+---------+--------+
| Hoffman | London |
| Clemens | London |
| Pereira | Rome   |
+---------+--------+


58) Find all salespeople for whom there are customers that follow them in alphabetical order. 
mysql> SELECT SALESPEOPLE.*, 
CUSTOMERS.CNUM,
CUSTOMERS.CNAME 
FROM CUSTOMERS 
JOIN SALESPEOPLE 
ON 
SALESPEOPLE.SNUM=CUSTOMERS.SNUM 
WHERE 
SNAME<CNAME;

+------+---------+----------+------+------+----------+
| SNUM | SNAME   | CITY     | COMM | CNUM | CNAME    |
+------+---------+----------+------+------+----------+
| 1003 | AxelRod | New York |   10 | 2002 | Giovanni |
| 1004 | Motika  | London   |   11 | 2007 | Pereira  |
+------+---------+----------+------+------+----------+

59) Write a query that produces the names and ratings of all customers who have average orders. 

mysql> SELECT C.CNAME, 
C.RATING 
FROM 
CUSTOMERS C 
JOIN ORDERS O 
ON O.CNUM=C.CNUM 
WHERE O.AMT= (
        SELECT AVG(AMT) 
        FROM ORDERS
        );

Empty set (0.03 sec)


60) Find the SUM of all Amounts from the orders table. 

mysql> SELECT SUM(AMT) 
AS 'TOTAL AMOUNT' 
FROM ORDERS;
+--------------------+
| TOTAL AMOUNT       |
+--------------------+
| 26658.400022506714 |
+--------------------+


61) Write a SELECT command that produces the order number, amount, and the date from rows in the order table.

mysql> SELECT ONUM,AMT,ODATE FROM ORDERS;
+------+---------+------------+
| ONUM | AMT     | ODATE      |
+------+---------+------------+
| 3001 |   18.69 | 1990-10-03 |
| 3003 |  767.19 | 1990-10-03 |
| 3002 |  1900.1 | 1990-10-03 |
| 3005 | 5160.45 | 1990-10-03 |
| 3006 | 1098.16 | 1990-10-03 |
| 3009 | 1713.23 | 1990-10-04 |
| 3007 |   75.75 | 1990-10-04 |
| 3008 |    4723 | 1990-10-05 |
| 3010 | 1309.95 | 1990-10-06 |
| 3011 | 9891.88 | 1990-10-06 |
+------+---------+------------+


62) Count the number of non NULL rating fields in the Customers table (including repeats). 

mysql> SELECT COUNT(*) 
AS NonNullRatingsCount 
FROM Customers 
WHERE RATING IS NOT NULL;
+---------------------+
| NonNullRatingsCount |
+---------------------+
|                   7 |
+---------------------+


63) Write a query that gives the names of both the salesperson and the customer for each order after the order number. 

mysql> SELECT O.ONUM, C.CNAME,S.SNAME 
FROM 
ORDERS O JOIN CUSTOMERS C 
ON 
O.CNUM=C.CNUM 
JOIN SALESPEOPLE S 
ON O.SNUM=S.SNUM;
+------+----------+---------+
| ONUM | CNAME    | SNAME   |
+------+----------+---------+
| 3003 | Hoffman  | Peel    |
| 3009 | Giovanni | AxelRod |
| 3005 | Liu      | Serres  |
| 3010 | Grass    | Serres  |
| 3007 | Grass    | Serres  |
| 3011 | Cisneros | Peel    |
| 3008 | Cisneros | Peel    |
| 3002 | Pereira  | Motika  |
+------+----------+---------+


64) List the commissions of all salespeople servicing customers in London. 

mysql> SELECT S.SNUM,S.SNAME, 
S.COMM 
FROM 
SALESPEOPLE S 
JOIN 
CUSTOMERS C 
ON 
S.SNUM=C.SNUM 
WHERE C.CITY ='LONDON';
+------+-------+------+
| SNUM | SNAME | COMM |
+------+-------+------+
| 1001 | Peel  |   12 |
| 1001 | Peel  |   12 |
+------+-------+------+


65) Write a query using ANY or ALL that will find all salespeople who have no customers located in their city. 

mysql> SELECT DISTINCT S.* 
FROM SALESPEOPLE S 
JOIN CUSTOMERS C 
ON S.SNUM=C.SNUM 
WHERE S.CITY<> ALL ( 
        SELECT C.CITY FROM 
        CUSTOMERS C JOIN SALESPEOPLE S 
        ON C.SNUM=S.SNUM AND C.CITY=S.CITY
        );
+------+---------+-----------+------+
| SNUM | SNAME   | CITY      | COMM |
+------+---------+-----------+------+
| 1003 | AxelRod | New York  |   10 |
| 1007 | Rofkin  | Barcelona |   15 |
+------+---------+-----------+------+


66) Write a query using the EXISTS operator that selects all salespeople with customers located in their cities who are not assigned to them.

mysql> SELECT * FROM SALESPEOPLE WHERE EXISTS (SELECT * FROM CUSTOMERS WHERE
 CUSTOMERS.CITY=SALESPEOPLE.CITY AND CUSTOMERS.SNUM!=SALESPEOPLE.SNUM);
+------+--------+---------+------+
| SNUM | SNAME  | CITY    | COMM |
+------+--------+---------+------+
| 1002 | Serres | SanJose |   13 |
| 1004 | Motika | London  |   11 |
| 1008 | Fran   | London  |   25 |
+------+--------+---------+------+


 67) Write a query that selects all customers serviced by Peel or Motika. (Hint: The snum field relates the 2 tables to one another). 
 
mysql> SELECT C.* FROM CUSTOMERS C 
JOIN SALESPEOPLE S
 ON S.SNUM=C.SNUM 
 WHERE
 S.SNAME='PEEL' 
 OR S.SNAME='MOTIKA';
+------+---------+--------+--------+------+
| CNUM | CNAME   | CITY   | RATING | SNUM |
+------+---------+--------+--------+------+
| 2001 | Hoffman | London |    100 | 1001 |
| 2006 | Clemens | London |    100 | 1001 |
| 2007 | Pereira | Rome   |    100 | 1004 |
+------+---------+--------+--------+------+


 68) Count the number of salespeople registering orders for each day. (If a salesperson has more than one order on a given day, he or she should be counted only once.) 

mysql> SELECT ODATE, 
COUNT(DISTINCT SNUM) 
FROM ORDERS 
GROUP BY ODATE;
+------------+----------------------+
| ODATE      | COUNT(DISTINCT CNUM) |
+------------+----------------------+
| 1990-10-03 |                    4 |
| 1990-10-04 |                    2 |
| 1990-10-05 |                    1 |
| 1990-10-06 |                    2 |
+------------+----------------------+


69) Find all orders attributed to salespeople who live in London. 

mysql> SELECT O.* 
FROM ORDERS O 
JOIN SALESPEOPLE S 
ON S.SNUM=O.SNUM 
WHERE S.CITY='LONDON';
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3003 |  767.19 | 1990-10-03 | 2001 | 1001 |
| 3002 |  1900.1 | 1990-10-03 | 2007 | 1004 |
| 3008 |    4723 | 1990-10-05 | 2006 | 1001 |
| 3011 | 9891.88 | 1990-10-06 | 2006 | 1001 |
+------+---------+------------+------+------+


70) Find all orders by customers not located in the same cities as their salespeople. 

mysql> SELECT O.*,C.CITY 
AS "CUSTOMER'S CITY",
S.CITY AS "SALESPERSON'S CITY" 
FROM 
ORDERS O 
JOIN CUSTOMERS C 
ON O.CNUM=C.CNUM 
JOIN SALESPEOPLE S 
ON S.SNUM= O.SNUM
WHERE S.CITY<> C.CITY;
+------+---------+------------+------+------+-----------------+--------------------+
| ONUM | AMT     | ODATE      | CNUM | SNUM | CUSTOMER'S CITY | SALESPERSON'S CITY |
+------+---------+------------+------+------+-----------------+--------------------+
| 3009 | 1713.23 | 1990-10-04 | 2002 | 1003 | Rome            | New York           |
| 3010 | 1309.95 | 1990-10-06 | 2004 | 1002 | Berlin          | SanJose            |
| 3007 |   75.75 | 1990-10-04 | 2004 | 1002 | Berlin          | SanJose            |
| 3011 | 9891.88 | 1990-10-06 | 2006 | 1001 | SanJose         | London             |
| 3008 |    4723 | 1990-10-05 | 2006 | 1001 | SanJose         | London             |
| 3002 |  1900.1 | 1990-10-03 | 2007 | 1004 | Rome            | London             |
+------+---------+------------+------+------+-----------------+--------------------+


71) Find all salespeople who have customers with more than one current order. 

mysql> SELECT S.* 
FROM SALESPEOPLE S 
JOIN CUSTOMERS C 
ON C.SNUM=S.SNUM 
WHERE C.CNUM IN(
        SELECT CNUM FROM ORDERS 
        GROUP BY CNUM 
        HAVING COUNT(CNUM) >1);
+------+--------+-----------+------+
| SNUM | SNAME  | CITY      | COMM |
+------+--------+-----------+------+
| 1001 | Peel   | London    |   12 |
| 1002 | Serres | SanJose   |   13 |
| 1007 | Rofkin | Barcelona |   15 |
+------+--------+-----------+------+


72) Write a query that extracts from the customer’s table every customer assigned to a salesperson, 
who is currently having at least one another customer(besides the customer being selected)
with orders in the Orders Table. 

mysql> SELECT DISTINCT CUSTOMERS.* 
FROM ORDERS 
JOIN CUSTOMERS 
ON ORDERS.SNUM=CUSTOMERS.SNUM 
WHERE CUSTOMERS.CNUM<>ORDERS.CNUM;
+------+---------+---------+--------+------+
| CNUM | CNAME   | CITY    | RATING | SNUM |
+------+---------+---------+--------+------+
| 2001 | Hoffman | London  |    100 | 1001 |
| 2003 | Liu     | SanJose |    200 | 1002 |
| 2004 | Grass   | Berlin  |    300 | 1002 |
| 2006 | Clemens | London  |    100 | 1001 |
+------+---------+---------+--------+------+

73) Write a query on the customer’s table that will find the highest rating in each city.
Put the output in this form: for the city (city), the highest rating is (rating). 

mysql> SELECT CONCAT("FOR THE CITY " , CITY) 
AS "CITY", 
CONCAT("HIGHEST RATING IS ",MAX(RATING)) 
AS "HIGHEST RATING" 
FROM CUSTOMERS 
 GROUP BY CITY;
+----------------------+-----------------------+
| CITY                 | HIGHEST RATING        |
+----------------------+-----------------------+
| FOR THE CITY London  | HIGHEST RATING IS 100 |
| FOR THE CITY Rome    | HIGHEST RATING IS 200 |
| FOR THE CITY SanJose | HIGHEST RATING IS 300 |
| FOR THE CITY Berlin  | HIGHEST RATING IS 300 |
+----------------------+-----------------------+


74) Write a query that will produce the snum values of all salespeople with orders, 
having amt greater than 1000 in the Orders Table(without repeats). 

mysql> SELECT DISTINCT 
SNUM FROM 
ORDERS WHERE 
AMT>1000;
+------+
| SNUM |
+------+
| 1004 |
| 1002 |
| 1007 |
| 1003 |
| 1001 |
+------+


75) Write a query that lists customers in a descending order of rating. 
Output the rating field first, followed by the customer’s names and numbers.

mysql>  SELECT RATING, 
CNAME, 
CNUM 
FROM CUSTOMERS 
ORDER BY RATING 
DESC;
+--------+----------+------+
| RATING | CNAME    | CNUM |
+--------+----------+------+
|    300 | Grass    | 2004 |
|    300 | Cisneros | 2008 |
|    200 | Giovanni | 2002 |
|    200 | Liu      | 2003 |
|    100 | Hoffman  | 2001 |
|    100 | Clemens  | 2006 |
|    100 | Pereira  | 2007 |
+--------+----------+------+


76) Find the average commission for salespeople in London. 

mysql> SELECT AVG(COMM) 
AS 'AVERAGE COMMISSION' 
FROM SALESPEOPLE 
WHERE CITY='LONDON';
+--------------------+
| AVERAGE COMMISSION |
+--------------------+
|            16.0000 |
+--------------------+

77) Find all orders credited to the same salesperson who services Hoffman.(cnum 2001). 

mysql> SELECT * FROM ORDERS 
WHERE SNUM=(
        SELECT SNUM 
        FROM CUSTOMERS 
        WHERE CNUM=2001);
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3003 |  767.19 | 1990-10-03 | 2001 | 1001 |
| 3008 |    4723 | 1990-10-05 | 2006 | 1001 |
| 3011 | 9891.88 | 1990-10-06 | 2006 | 1001 |
+------+---------+------------+------+------+

78) Find all salespeople whose commission is in between 0.10 and 0.12(both inclusive). 

mysql> SELECT * 
FROM SALESPEOPLE 
WHERE COMM >= 10 
AND COMM<=12;
+------+---------+----------+------+
| SNUM | SNAME   | CITY     | COMM |
+------+---------+----------+------+
| 1001 | Peel    | London   |   12 |
| 1004 | Motika  | London   |   11 |
| 1003 | AxelRod | New York |   10 |
+------+---------+----------+------+


79) Write a query that will give you the names and cities of all salespeople in London with a commission above 0.10.

mysql> SELECT SNAME AS "Name", 
CITY FROM SALESPEOPLE 
WHERE CITY = "London" 
and COMM>10;
+--------+--------+
| Name   | CITY   |
+--------+--------+
| Peel   | London |
| Motika | London |
| Fran   | London |
+--------+--------+

80) Write a query that selects each customer’s smallest order. 

mysql> SELECT CNUM,
MIN(AMT) 
AS 
'MINIMUM ORDER' 
FROM ORDERS 
GROUP BY CNUM;
+------+---------------+
| CNUM | MINIMUM ORDER |
+------+---------------+
| 2008 |         18.69 |
| 2001 |        767.19 |
| 2007 |        1900.1 |
| 2003 |       5160.45 |
| 2002 |       1713.23 |
| 2004 |         75.75 |
| 2006 |          4723 |
+------+---------------+


81) Write a query that selects the first customer in alphabetical order whose name begins with ‘G’. 

mysql> SELECT * 
FROM CUSTOMERS 
WHERE CNAME LIKE 'G%' 
ORDER BY CNAME LIMIT 1;
+------+----------+------+--------+------+
| CNUM | CNAME    | CITY | RATING | SNUM |
+------+----------+------+--------+------+
| 2002 | Giovanni | Rome |    200 | 1003 |
+------+----------+------+--------+------+


82) Write a query that counts the number of different non NULL city values in the customers table. 

mysql> SELECT COUNT(DISTINCT CITY) 
AS 'COUNT' FROM CUSTOMERS 
WHERE CITY IS NOT NULL;
+-------+
| COUNT |
+-------+
|     4 |
+-------+


83) Find the average amount from the Orders Table. 

mysql> SELECT AVG(AMT) AS 'AVERAGE AMOUNT' FROM ORDERS;
+-------------------+
| AVERAGE AMOUNT    |
+-------------------+
| 2665.840002250671 |
+-------------------+


84) Find all customers who are not located in SanJose and whose rating is above 200. 

mysql> SELECT * FROM CUSTOMERS 
WHERE CITY!='SANJOSE' 
AND RATING>200;
+------+-------+--------+--------+------+
| CNUM | CNAME | CITY   | RATING | SNUM |
+------+-------+--------+--------+------+
| 2004 | Grass | Berlin |    300 | 1002 |
+------+-------+--------+--------+------+



85) Give a simpler way to write this query.
SELECT snum, sname, city, comm 
FROM salespeople WHERE (
        comm > + 0.12 OR 
        comm &lt; 0.14);

SELECT * 
FROM SALESPEOPLE 
WHERE COMM BETWEEN 
12 AND 14;


86) Which salespersons attend to customers not in the city they have been assigned to? 

mysql>  SELECT SALESPEOPLE.* 
FROM SALESPEOPLE 
JOIN CUSTOMERS 
ON SALESPEOPLE.SNUM=CUSTOMERS.SNUM 
WHERE SALESPEOPLE.CITY<>CUSTOMERS.CITY;
+------+---------+-----------+------+
| SNUM | SNAME   | CITY      | COMM |
+------+---------+-----------+------+
| 1003 | AxelRod | New York  |   10 |
| 1002 | Serres  | SanJose   |   13 |
| 1007 | Rofkin  | Barcelona |   15 |
| 1004 | Motika  | London    |   11 |
+------+---------+-----------+------+

87) Which salespeople get commission greater than 0.11 are serving customers rated less than 250? 

mysql> SELECT SALESPEOPLE.* ,
CUSTOMERS.CNUM,
CUSTOMERS.CNUM,
CUSTOMERS.RATING 
FROM CUSTOMERS 
JOIN SALESPEOPLE 
ON SALESPEOPLE.SNUM=CUSTOMERS.SNUM 
WHERE SALESPEOPLE.COMM>11 
AND CUSTOMERS.RATING<250;
+------+--------+---------+------+------+------+--------+
| SNUM | SNAME  | CITY    | COMM | CNUM | CNUM | RATING |
+------+--------+---------+------+------+------+--------+
| 1001 | Peel   | London  |   12 | 2001 | 2001 |    100 |
| 1001 | Peel   | London  |   12 | 2006 | 2006 |    100 |
| 1002 | Serres | SanJose |   13 | 2003 | 2003 |    200 |
+------+--------+---------+------+------+------+--------+

88) Which salespeople have been assigned to the same city but get different commission percentages? 

mysql> SELECT S.SNUM,
S.SNAME,
S1.SNUM,
S1.SNAME,
S.CITY 
FROM SALESPEOPLE S 
JOIN SALESPEOPLE S1 
ON S.CITY=S1.CITY 
WHERE S.SNUM<S1.SNUM 
AND S.COMM!=S1.COMM;
+------+--------+------+--------+--------+
| SNUM | SNAME  | SNUM | SNAME  | CITY   |
+------+--------+------+--------+--------+
| 1001 | Peel   | 1004 | Motika | London |
| 1004 | Motika | 1008 | Fran   | London |
| 1001 | Peel   | 1008 | Fran   | London |
+------+--------+------+--------+--------+


89) Which salesperson has earned the maximum commission? 

mysql> SELECT O.SNUM,S.SNAME,SUM(O.AMT*S.COMM/100) 
FROM ORDERS O JOIN SALESPEOPLE S 
ON O.SNUM=S.SNUM GROUP BY O.SNUM 
ORDER BY SUM(O.AMT*S.COMM/100) DESC LIMIT 1;
+------+-------+-----------------------+
| SNUM | SNAME | SUM(O.AMT*S.COMM/100) |
+------+-------+-----------------------+
| 1001 | Peel  |    1845.8483862304688 |
+------+-------+-----------------------+


90) Does the customer who has placed the maximum number of orders have the maximum rating? 

mysql> SELECT "YES" 
WHERE EXISTS(
        SELECT * FROM CUSTOMERS 
        WHERE CNUM IN (
                SELECT CNUM FROM ORDERS 
                GROUP BY CNUM 
                HAVING COUNT(CNUM) =(
                        SELECT COUNT(CNUM) 
                        FROM ORDERS 
                        GROUP BY CNUM 
                        ORDER BY COUNT(CNUM) 
                        DESC LIMIT 1)
                        ) 
                AND RATING =(SELECT MAX(RATING) FROM CUSTOMERS));
+-----+
| YES |
+-----+
| YES |
+-----+


91) List all customers in descending order of customer rating. 

mysql> SELECT * FROM CUSTOMERS 
ORDER BY RATING DESC;
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2001 | Hoffman  | London  |    100 | 1001 |
| 2006 | Clemens  | London  |    100 | 1001 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
+------+----------+---------+--------+------+

92) On which days has Hoffman placed orders? 

mysql> SELECT ODATE 
AS 'DATES ON WHICH HOFFMAN HAS PLACED ORDERS' 
FROM ORDERS 
WHERE CNUM=(
        SELECT CNUM FROM 
        CUSTOMERS WHERE 
        CNAME='HOFFMAN'
        );
+------------------------------------------+
| DATES ON WHICH HOFFMAN HAS PLACED ORDERS |
+------------------------------------------+
| 1990-10-03                               |
+------------------------------------------+


93) Which salesmen have no orders between 10/03/1990 and 10/05/1990? 

mysql> SELECT * 
FROM SALESPEOPLE 
WHERE SNUM NOT IN 
(SELECT  DISTINCT SNUM 
FROM ORDERS 
WHERE ODATE BETWEEN '1990-10-03' 
AND '1990-10-05');
+------+-------+--------+------+
| SNUM | SNAME | CITY   | COMM |
+------+-------+--------+------+
| 1008 | Fran  | London |   25 |
+------+-------+--------+------+


94) How many salespersons have succeeded in getting orders? 

mysql> SELECT * FROM SALESPEOPLE 
WHERE SNUM IN 
(SELECT DISTINCT SNUM FROM ORDERS);
+------+---------+-----------+------+
| SNUM | SNAME   | CITY      | COMM |
+------+---------+-----------+------+
| 1001 | Peel    | London    |   12 |
| 1002 | Serres  | SanJose   |   13 |
| 1004 | Motika  | London    |   11 |
| 1007 | Rofkin  | Barcelona |   15 |
| 1003 | AxelRod | New York  |   10 |
+------+---------+-----------+------+


95) How many customers have placed orders? 

mysql> SELECT * FROM CUSTOMERS 
WHERE CNUM IN 
(SELECT DISTINCT CNUM FROM ORDERS );
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2001 | Hoffman  | London  |    100 | 1001 |
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2006 | Clemens  | London  |    100 | 1001 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+

96) On which date has each salesman booked an order of maximum value? 

mysql> SELECT ODATE,SNUM,AMT FROM ORDERS 
WHERE (SNUM,AMT) IN 
(SELECT SNUM,MAX(AMT) FROM ORDERS GROUP BY SNUM);
+------------+------+---------+
| ODATE      | SNUM | AMT     |
+------------+------+---------+
| 1990-10-03 | 1004 |  1900.1 |
| 1990-10-03 | 1002 | 5160.45 |
| 1990-10-03 | 1007 | 1098.16 |
| 1990-10-04 | 1003 | 1713.23 |
| 1990-10-06 | 1001 | 9891.88 |
+------------+------+---------+

97) Who is the most successful salesperson? 

mysql> SELECT SNUM,SUM(AMT) FROM ORDERS 
GROUP BY SNUM 
ORDER BY SUM(AMT) DESC
 LIMIT 1;
+------+----------+
| SNUM | SUM(AMT) |
+------+----------+
| 1001 | 15382.07 |
+------+----------+


98) Which customers have the same rating? 

mysql> SELECT C.CNUM,C.CNAME,C1.CNUM,C1.CNAME, C.RATING 
FROM CUSTOMERS C 
JOIN CUSTOMERS C1 
ON C.RATING=C1.RATING 
WHERE C.CNUM<C1.CNUM;
+------+----------+------+----------+--------+
| CNUM | CNAME    | CNUM | CNAME    | RATING |
+------+----------+------+----------+--------+
| 2001 | Hoffman  | 2006 | Clemens  |    100 |
| 2001 | Hoffman  | 2007 | Pereira  |    100 |
| 2002 | Giovanni | 2003 | Liu      |    200 |
| 2004 | Grass    | 2008 | Cisneros |    300 |
| 2006 | Clemens  | 2007 | Pereira  |    100 |
+------+----------+------+----------+--------+


99) Find all orders greater than the average for October 4th. 

mysql> SELECT * FROM ORDERS 
WHERE AMT>(SELECT AVG(AMT) 
FROM ORDERS 
GROUP BY ODATE 
HAVING ODATE ='1990-10-04'
);
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3002 |  1900.1 | 1990-10-03 | 2007 | 1004 |
| 3005 | 5160.45 | 1990-10-03 | 2003 | 1002 |
| 3006 | 1098.16 | 1990-10-03 | 2008 | 1007 |
| 3009 | 1713.23 | 1990-10-04 | 2002 | 1003 |
| 3008 |    4723 | 1990-10-05 | 2006 | 1001 |
| 3010 | 1309.95 | 1990-10-06 | 2004 | 1002 |
| 3011 | 9891.88 | 1990-10-06 | 2006 | 1001 |
+------+---------+------------+------+------+


100.) List all customers with ratings above Grass’s average. 

mysql> SELECT * FROM CUSTOMERS WHERE RATING > 
(SELECT RATING FROM CUSTOMERS WHERE CNAME = "Grass");
Empty set (0.00 sec)


101) Which customers have above average orders? 

mysql> SELECT CNUM,ONUM,AMT 
FROM ORDERS 
WHERE AMT>(SELECT AVG(AMT) FROM ORDERS);
+------+------+---------+
| CNUM | ONUM | AMT     |
+------+------+---------+
| 2003 | 3005 | 5160.45 |
| 2006 | 3008 |    4723 |
| 2006 | 3011 | 9891.88 |
+------+------+---------+


102) Select the total amount in orders for each salesperson for which the total is greater than the amount of the largest order in the table.

mysql> SELECT SNUM, SUM(AMT) FROM ORDERS 
GROUP BY SNUM 
HAVING SUM(AMT)>(SELECT MAX(AMT) FROM ORDERS);
+------+--------------------+
| SNUM | SUM(AMT)           |
+------+--------------------+
| 1001 | 15382.069885253906 |
+------+--------------------+


103) Give names and numbers of all salespersons that have more than one customer? 

mysql> SELECT SNUM,SNAME FROM SALESPEOPLE 
WHERE SNUM IN 
(SELECT SNUM FROM CUSTOMERS 
GROUP BY SNUM HAVING COUNT(SNUM)>1);
+------+--------+
| SNUM | SNAME  |
+------+--------+
| 1001 | Peel   |
| 1002 | Serres |
+------+--------+

104) Select all salespeople by name and number who have customers in their city whom they don’t service. 

mysql> SELECT DISTINCT S.SNUM, S.SNAME 
FROM SALESPEOPLE S 
JOIN CUSTOMERS C 
ON S.CITY=C.CITY
WHERE S.SNUM<> C.SNUM;
+------+--------+
| SNUM | SNAME  |
+------+--------+
| 1008 | Fran   |
| 1004 | Motika |
| 1002 | Serres |
+------+--------+

105) Does the total amount in orders by customer in Rome and London, 
exceed the commission paid to salesperson in London, and New York by more than 5 times? 

mysql> SELECT IF(
 ( SELECT SUM(O.AMT) / 5 FROM ORDERS O JOIN CUSTOMERS C ON C.CNUM=O.CNUM WHERE C.CITY IN ('LONDON','ROME'))>
    ( SELECT SUM(O.AMT*S.COMM)/100 FROM ORDERS O JOIN SALESPEOPLE S ON S.SNUM=O.SNUM WHERE S.CITY IN 
    ('LONDON','NEW YORK')),'YES','NO');

+-------+
| YES
        |
+-------+


106) Which are the date, order number, amt and city for each salesperson (by name) for the maximum order he has obtained?

mysql> SELECT O.ODATE, 
O.ONUM,O.AMT ,
S.SNUM,S.SNAME 
FROM ORDERS O 
JOIN SALESPEOPLE S ON 
S.SNUM=O.SNUM 
WHERE (O.SNUM,O.AMT) IN 
( SELECT SNUM, MAX(AMT) FROM ORDERS GROUP BY SNUM);
+------------+------+---------+------+---------+
| ODATE      | ONUM | AMT     | SNUM | SNAME   |
+------------+------+---------+------+---------+
| 1990-10-03 | 3002 |  1900.1 | 1004 | Motika  |
| 1990-10-03 | 3005 | 5160.45 | 1002 | Serres  |
| 1990-10-03 | 3006 | 1098.16 | 1007 | Rofkin  |
| 1990-10-04 | 3009 | 1713.23 | 1003 | AxelRod |
| 1990-10-06 | 3011 | 9891.88 | 1001 | Peel    |
+------------+------+---------+------+---------+

107) Which salesperson is having lowest commission? 

mysql> SELECT * FROM SALESPEOPLE 
WHERE COMM=(
        SELECT MIN(COMM) 
        FROM SALESPEOPLE);
+------+---------+----------+------+
| SNUM | SNAME   | CITY     | COMM |
+------+---------+----------+------+
| 1003 | AxelRod | New York |   10 |
+------+---------+----------+------+

