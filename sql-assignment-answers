Customers:
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2001 | Hoffman  | London  |    100 | 1001 |
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2006 | Clemens  | London  |    100 | 1001 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+

Orders:
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-03-10 | 2008 | 1007 |
| 3002 | 1900.10 | 1990-03-10 | 2007 | 1004 |
| 3003 |  767.19 | 1990-03-10 | 2001 | 1001 |
| 3005 | 5160.45 | 1990-03-10 | 2003 | 1002 |
| 3006 | 1098.16 | 1990-03-10 | 2008 | 1007 |
| 3007 |   75.75 | 1990-04-10 | 2004 | 1002 |
| 3008 | 4723.00 | 1990-05-10 | 2006 | 1001 |
| 3009 | 1713.23 | 1990-04-10 | 2002 | 1003 |
| 3010 | 1309.95 | 1990-06-10 | 2004 | 1002 |
| 3011 | 9891.88 | 1990-06-10 | 2006 | 1001 |
+------+---------+------------+------+------+


Salespeople:
+------+---------+-----------+------+
| SNUM | SNAME   | CITY      | COMM |
+------+---------+-----------+------+
| 1001 | Peel    | London    |   12 |
| 1002 | Serres  | SanJose   |   13 |
| 1003 | AxelRod | New York  |   10 |
| 1004 | Motika  | London    |   11 |
| 1007 | Rifkin  | Barcelona |   15 |
| 1008 | Fran    | London    |   25 |
+------+---------+-----------+------+


*********************************************************************************************


1) List all the columns of the Salespeople table. 

mysql> SELECT * FROM Salespeople;

+------+---------+-----------+------+
| SNUM | SNAME   | CITY      | COMM |
+------+---------+-----------+------+
| 1001 | Peel    | London    |   12 |
| 1002 | Serres  | SanJose   |   13 |
| 1003 | AxelRod | New York  |   10 |
| 1004 | Motika  | London    |   11 |
| 1007 | Rifkin  | Barcelona |   15 |
| 1008 | Fran    | London    |   25 |
+------+---------+-----------+------+

mysql> SHOW columns FROM Salespeople;

+-------+-------------+------+-----+---------+-------+
| Field | Type        | Null | Key | Default | Extra |
+-------+-------------+------+-----+---------+-------+
| SNUM  | int(11)     | NO   | PRI | NULL    |       |
| SNAME | varchar(45) | YES  |     | NULL    |       |
| CITY  | varchar(45) | YES  |     | NULL    |       |
| COMM  | int(11)     | YES  |     | NULL    |       |
+-------+-------------+------+-----+---------+-------+

mysql> DESC Salespeople;

+-------+-------------+------+-----+---------+-------+
| Field | Type        | Null | Key | Default | Extra |
+-------+-------------+------+-----+---------+-------+
| SNUM  | int(11)     | NO   | PRI | NULL    |       |
| SNAME | varchar(45) | YES  |     | NULL    |       |
| CITY  | varchar(45) | YES  |     | NULL    |       |
| COMM  | int(11)     | YES  |     | NULL    |       |
+-------+-------------+------+-----+---------+-------+


mysql> SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'Salespeople';

+-------------+
| COLUMN_NAME |
+-------------+
| SNUM        |
| SNAME       |
| CITY        |
| COMM        |
+-------------+

2) List all customers with a rating of 100. 

mysql> SELECT * FROM Customers WHERE Rating=100;

+------+---------+--------+--------+------+
| CNUM | CNAME   | CITY   | RATING | SNUM |
+------+---------+--------+--------+------+
| 2001 | Hoffman | London |    100 | 1001 |
| 2006 | Clemens | London |    100 | 1001 |
| 2007 | Pereira | Rome   |    100 | 1004 |
+------+---------+--------+--------+------+


3) Find the largest order taken by each salesperson on each date.

mysql> SELECT SNAME, ODATE, ONUM, AMT FROM Salespeople, Orders WHERE Salespeople.SNUM = Orders.SNUM AND AMT IN (SELECT MAX(AMT) FROM Orders GROUP BY ODATE);

+---------+------------+------+---------+
| SNAME   | ODATE      | ONUM | AMT     |
+---------+------------+------+---------+
| Serres  | 1990-03-10 | 3005 | 5160.45 |
| Peel    | 1990-05-10 | 3008 | 4723.00 |
| AxelRod | 1990-04-10 | 3009 | 1713.23 |
| Peel    | 1990-06-10 | 3011 | 9891.88 |
+---------+------------+------+---------+


4) Arrange the Order table by descending customer number. 

mysql> SELECT * FROM Orders ORDER BY CNUM DESC;

+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-03-10 | 2008 | 1007 |
| 3006 | 1098.16 | 1990-03-10 | 2008 | 1007 |
| 3002 |  1900.1 | 1990-03-10 | 2007 | 1004 |
| 3008 | 4723.00 | 1990-05-10 | 2006 | 1001 |
| 3011 | 9891.88 | 1990-06-10 | 2006 | 1001 |
| 3007 |   75.75 | 1990-04-10 | 2004 | 1002 |
| 3010 | 1309.95 | 1990-06-10 | 2004 | 1002 |
| 3005 | 5160.45 | 1990-03-10 | 2003 | 1002 |
| 3009 | 1713.23 | 1990-04-10 | 2002 | 1003 |
| 3003 |  767.19 | 1990-03-10 | 2001 | 1001 |
+------+---------+------------+------+------+


5) Find which salespeople currently have orders in the order table. 

mysql> SELECT DISTINCT Orders.SNUM, Salespeople.SNAME FROM Orders INNER JOIN Salespeople ON Orders.SNUM = Salespeople.SNUM;

+------+---------+
| SNUM | SNAME   |
+------+---------+
| 1007 | Rifkin  |
| 1004 | Motika  |
| 1001 | Peel    |
| 1002 | Serres  |
| 1003 | AxelRod |
+------+---------+


6) List names of all customers matched with the salespeople serving them. 

mysql> SELECT c.CNAME, s.SNAME FROM Customers c, Salespeople s WHERE c.SNUM=s.SNUM;

+----------+---------+
| CNAME    | SNAME   |
+----------+---------+
| Hoffman  | Peel    |
| Giovanni | AxelRod |
| Liu      | Serres  |
| Grass    | Serres  |
| Clemens  | Peel    |
| Pereira  | Motika  |
| Cisneros | Rifkin  |
+----------+---------+

mysql> SELECT Customers.CNAME, Salespeople.SNAME FROM Customers INNER JOIN Salespeople ON Customers.CNUM = Salespeople.SNUM;

+----------+---------+
| CNAME    | SNAME   |
+----------+---------+
| Hoffman  | Peel    |
| Giovanni | AxelRod |
| Liu      | Serres  |
| Grass    | Serres  |
| Clemens  | Peel    |
| Pereira  | Motika  |
| Cisneros | Rifkin  |
+----------+---------+


7) Find the names and numbers of all salespeople who have more than one customer.


mysql> SELECT SNUM,SNAME FROM Salespeople WHERE 1<(SELECT COUNT(*) FROM Customers WHERE Salespeople.SNUM = Customers.SNUM);

+------+--------+
| SNUM | SNAME  |
+------+--------+
| 1001 | Peel   |
| 1002 | Serres |
+------+--------+

mysql> SELECT SALESPEOPLE.SNAME, SALESPEOPLE.SNUM FROM SALESPEOPLE
    -> JOIN CUSTOMERS ON SALESPEOPLE.SNUM=CUSTOMERS.SNUM
    -> GROUP BY SNUM HAVING COUNT(SALESPEOPLE.SNUM)>1;

+--------+------+
| SNAME  | SNUM |
+--------+------+
| Peel   | 1001 |
| Serres | 1002 |
+--------+------+



8) Count the orders of each of the salespeople and output the results in descending order. 

mysql> SELECT COUNT(ONUM) AS 'NO_OF_ORDERS', SNUM FROM Orders GROUP BY SNUM ORDER BY NO_OF_ORDERS DESC;

+--------------+------+
| NO_OF_ORDERS | SNUM |
+--------------+------+
|            3 | 1002 |
|            3 | 1001 |
|            2 | 1007 |
|            1 | 1003 |
|            1 | 1004 |
+--------------+------+

Edge Case: 0 order salespeople are not included.


9) List the customer table if and only if one or more of the customers in the Customer table are located in SanJose. 

mysql> SELECT * FROM Customers WHERE (SELECT COUNT(CITY) FROM Customers WHERE CITY = "SanJose")>=1;

+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2001 | Hoffman  | London  |    100 | 1001 |
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2006 | Clemens  | London  |    100 | 1001 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+


10) Match salespeople to customers according to what city they live in. 

mysql> SELECT Salespeople.SNAME,Customers.CNAME,Customers.CITY FROM Salespeople,Customers WHERE Customers.CITY = Salespeople.CITY;

+--------+----------+---------+
| SNAME  | CNAME    | CITY    |
+--------+----------+---------+
| Peel   | Hoffman  | London  |
| Motika | Hoffman  | London  |
| Fran   | Hoffman  | London  |
| Serres | Liu      | SanJose |
| Peel   | Clemens  | London  |
| Motika | Clemens  | London  |
| Fran   | Clemens  | London  |
| Serres | Cisneros | SanJose |
+--------+----------+---------+



11) Find all the customers in SanJose who have a rating above 200. 

mysql> SELECT * FROM Customers WHERE CITY='SanJose' AND RATING>200;

+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+

mysql> SELECT CNUM, CNAME FROM Customers WHERE CITY='SanJose' AND RATING>200;

+------+----------+
| CNUM | CNAME    |
+------+----------+
| 2008 | Cisneros |
+------+----------+


12) List the names and commissions of all salespeople in London. 

mysql>  SELECT SNAME, COMM FROM Salespeople WHERE CITY='London';

+--------+------+
| SNAME  | COMM |
+--------+------+
| Peel   |   12 |
| Motika |   11 |
| Fran   |   25 |
+--------+------+



13) List all the orders of Salesperson Motika from the orders table.

mysql> SELECT * FROM Orders WHERE SNUM = (SELECT SNUM FROM Salespeople WHERE SNAME='Motika');

+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3002 | 1900.10 | 1990-03-10 | 2007 | 1004 |
+------+---------+------------+------+------+



14) Find all customers who booked orders on October 3. 

mysql> SELECT * FROM Orders WHERE ODATE LIKE '%-03-10';

+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-03-10 | 2008 | 1007 |
| 3002 | 1900.10 | 1990-03-10 | 2007 | 1004 |
| 3003 |  767.19 | 1990-03-10 | 2001 | 1001 |
| 3005 | 5160.45 | 1990-03-10 | 2003 | 1002 |
| 3006 | 1098.16 | 1990-03-10 | 2008 | 1007 |
+------+---------+------------+------+------+

mysql> SELECT Customers.CNUM, Customers.CNAME FROM Customers INNER JOIN Orders ON Customers.CNUM=Orders.CNUM AND Orders.ODATE LIKE '%-03-10';

+------+----------+
| CNUM | CNAME    |
+------+----------+
| 2008 | Cisneros |
| 2007 | Pereira  |
| 2001 | Hoffman  |
| 2003 | Liu      |
| 2008 | Cisneros |
+------+----------+


15) Give the sums of the amounts from the Orders table, grouped by date, eliminating all those dates where the SUM was not at least 2000 above the maximum Amount. 

mysql> SELECT ODATE, TOTAL FROM (SELECT ODATE,SUM(AMT) AS TOTAL FROM Orders GROUP BY ODATE) AS a WHERE TOTAL >= (SELECT MAX(AMT)+2000 FROM Orders);

Empty set (0.00 sec)

16) Select all orders that had amounts that were greater than at least one of the orders from October 6. 

mysql> SELECT * FROM Orders WHERE AMT > ANY (SELECT AMT FROM Orders WHERE ODATE='1990-06-10');

+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3002 | 1900.10 | 1990-03-10 | 2007 | 1004 |
| 3005 | 5160.45 | 1990-03-10 | 2003 | 1002 |
| 3008 | 4723.00 | 1990-05-10 | 2006 | 1001 |
| 3009 | 1713.23 | 1990-04-10 | 2002 | 1003 |
| 3011 | 9891.88 | 1990-06-10 | 2006 | 1001 |
+------+---------+------------+------+------+

mysql> SELECT ONUM FROM Orders WHERE AMT > ANY (SELECT AMT FROM Orders WHERE ODATE='1990-06-10');

+------+
| ONUM |
+------+
| 3002 |
| 3005 |
| 3008 |
| 3009 |
| 3011 |
+------+

17) Write a query that uses the EXISTS operator to extract all salespeople who have customers with a rating of 300.

mysql> SELECT * FROM Salespeople WHERE EXISTS (SELECT * FROM Customers WHERE RATING=300 and Salespeople.SNUM = Customers.SNUM);

+------+--------+-----------+------+
| SNUM | SNAME  | CITY      | COMM |
+------+--------+-----------+------+
| 1002 | Serres | SanJose   |   13 |
| 1007 | Rifkin | Barcelona |   15 |
+------+--------+-----------+------+


18) Find all customers whose cnum is 1000 above the snum of Serres. 

mysql> SELECT * FROM Customers WHERE CNUM > 1000 + (SELECT SNUM FROM Salespeople WHERE SNAME='Serres');

+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2006 | Clemens  | London  |    100 | 1001 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+

mysql> SELECT Customers.CNAME, Customers.CNUM FROM Customers INNER JOIN Salespeople ON Customers.CNUM > 1000 + Salespeople.SNUM AND SNAME='Serres';

+----------+------+
| CNAME    | CNUM |
+----------+------+
| Liu      | 2003 |
| Grass    | 2004 |
| Clemens  | 2006 |
| Pereira  | 2007 |
| Cisneros | 2008 |
+----------+------+


19) Give the salespeople’s commissions as percentages instead of decimal numbers. 

mysql> SELECT SNUM,SNAME,CONVERT(COMM,char)+'%' AS COMMISSION FROM Salespeople;

+------+---------+------------+
| SNUM | SNAME   | COMMISSION |
+------+---------+------------+
| 1001 | Peel    |         12 |
| 1002 | Serres  |         13 |
| 1003 | AxelRod |         10 |
| 1004 | Motika  |         11 |
| 1007 | Rifkin  |         15 |
| 1008 | Fran    |         25 |
+------+---------+------------+


20) Find the largest order taken by each salesperson on each date, eliminating those Maximum orders, which are less than 3000. 

mysql> SELECT SNAME, ODATE, ONUM, AMT FROM Salespeople, Orders WHERE Salespeople.SNUM = Orders.SNUM AND AMT IN (SELECT MAX(AMT) FROM Orders GROUP BY ODATE) AND AMT >= 3000;

+--------+------------+------+---------+
| SNAME  | ODATE      | ONUM | AMT     |
+--------+------------+------+---------+
| Serres | 1990-03-10 | 3005 | 5160.45 |
| Peel   | 1990-05-10 | 3008 | 4723.00 |
| Peel   | 1990-06-10 | 3011 | 9891.88 |
+--------+------------+------+---------+



21) List all the largest orders for October 3, for each salesperson. 

mysql> SELECT MAX(AMT), SNUM FROM Orders WHERE ODATE='1990-03-10' GROUP BY SNUM;

+----------+------+
| MAX(AMT) | SNUM |
+----------+------+
|   767.19 | 1001 |
|  5160.45 | 1002 |
|  1900.10 | 1004 |
|  1098.16 | 1007 |
+----------+------+


22) Find all customers located in cities where Serres has customers. 

mysql> SELECT * FROM Customers WHERE CITY = ANY (SELECT CITY FROM Customers WHERE SNUM=(SELECT SNUM FROm Salespeople WHERE SNAME='Serres'));

+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
+------+----------+---------+--------+------+

mysql> SELECT CNUM, CNAME FROM Customers WHERE CITY = ANY (SELECT CITY FROM Customers WHERE SNUM=(SELECT SNUM FROm Salespeople WHERE SNAME='Serres'));

+------+----------+
| CNUM | CNAME    |
+------+----------+
| 2003 | Liu      |
| 2008 | Cisneros |
| 2004 | Grass    |
+------+----------+

23) Select all customers with a rating above 200. 

mysql> SELECT CNUM, CNAME FROM Customers WHERE RATING>200;

+------+----------+
| CNUM | CNAME    |
+------+----------+
| 2004 | Grass    |
| 2008 | Cisneros |
+------+----------+


24) Count the number of salespeople currently having orders in the orders table.

mysql> SELECT COUNT( DISTINCT SNUM) FROM Orders;

+-----------------------+
| COUNT( DISTINCT SNUM) |
+-----------------------+
|                     5 |
+-----------------------+
 

25) Write a query that produces all customers serviced by salespeople with a commission above 12%. Output the customer’s name, salesperson’s name and the salesperson’s rate of commission.

mysql> SELECT CNAME, SNAME, COMM FROM Customers, Salespeople WHERE Salespeople.SNUM = Customers.SNUM AND COMM > 12;

+----------+--------+------+
| CNAME    | SNAME  | COMM |
+----------+--------+------+
| Liu      | Serres |   13 |
| Grass    | Serres |   13 |
| Cisneros | Rifkin |   15 |
+----------+--------+------+
 


26) Find salespeople who have multiple customers.

mysql> SELECT * FROM Salespeople WHERE 1 < ANY(SELECT COUNT(*) FROM Customers WHERE Salespeople.SNUM = Customers.SNUM GROUP BY Customers.SNUM);

+------+--------+---------+------+
| SNUM | SNAME  | CITY    | COMM |
+------+--------+---------+------+
| 1001 | Peel   | London  |   12 |
| 1002 | Serres | SanJose |   13 |
+------+--------+---------+------+
 


mysql> SELECT * FROM Salespeople WHERE 1 < (SELECT COUNT(DISTINCT CNUM) FROM Orders WHERE Orders.SNUM = Salespeople.SNUM GROUP BY SNUM);

+------+--------+---------+------+
| SNUM | SNAME  | CITY    | COMM |
+------+--------+---------+------+
| 1001 | Peel   | London  |   12 |
| 1002 | Serres | SanJose |   13 |
+------+--------+---------+------+




27) Find salespeople with customers located in their own cities. 

mysql> SELECT s.SNUM, s.SNAME, s.CITY, c.CNUM, c.CNAME FROM Salespeople s, Customers c WHERE s.SNUM=c.SNUM AND s.CITY=c.CITY;

+------+--------+---------+------+---------+
| SNUM | SNAME  | CITY    | CNUM | CNAME   |
+------+--------+---------+------+---------+
| 1001 | Peel   | London  | 2001 | Hoffman |
| 1002 | Serres | SanJose | 2003 | Liu     |
| 1001 | Peel   | London  | 2006 | Clemens |
+------+--------+---------+------+---------+



28) Find all salespeople whose name starts with ‘P’ and fourth character is ‘I’. 

mysql> SELECT * FROM Salespeople WHERE SNAME LIKE 'P__i';

Empty set (0.00 sec)


29) Write a query that uses a subquery to obtain all orders for the customer named ‘Cisneros’. Assume you do not know his customer number. 

mysql> SELECT * FROM Orders WHERE CNUM=(SELECT CNUM FROM Customers WHERE CNAME='Cisneros');

+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-03-10 | 2008 | 1007 |
| 3006 | 1098.16 | 1990-03-10 | 2008 | 1007 |
+------+---------+------------+------+------+


30) Find the largest orders for Serres and Rifkin. 

mysql> SELECT MAX(AMT), SNUM FROM Orders WHERE SNUM='1002' OR SNUM='1007' GROUP BY SNUM;

+----------+------+
| MAX(AMT) | SNUM |
+----------+------+
|  5160.45 | 1002 |
|  1098.16 | 1007 |
+----------+------+

mysql> SELECT SNAME, MAX_AMT FROM Salespeople INNER JOIN (SELECT MAX(AMT) AS 'MAX_AMT', SNUM FROM Orders WHERE SNUM='1002' OR SNUM='1007' GROUP BY SNUM) AS a ON  a.SNUM=Salespeople.SNUM;

+--------+---------+
| SNAME  | MAX_AMT |
+--------+---------+
| Serres | 5160.45 |
| Rifkin | 1098.16 |
+--------+---------+



31) Sort the salespeople table in the following order: snum, sname, commission, city. 


mysql> SELECT SNUM, SNAME, COMM, CITY FROM Salespeople;

+------+---------+------+-----------+
| SNUM | SNAME   | COMM | CITY      |
+------+---------+------+-----------+
| 1001 | Peel    |   12 | London    |
| 1002 | Serres  |   13 | SanJose   |
| 1003 | AxelRod |   10 | New York  |
| 1004 | Motika  |   11 | London    |
| 1007 | Rifkin  |   15 | Barcelona |
| 1008 | Fran    |   25 | London    |
+------+---------+------+-----------+

mysql> SELECT * FROM Salespeople ORDER BY SNUM, SNAME, COMM, CITY;

+------+---------+-----------+------+
| SNUM | SNAME   | CITY      | COMM |
+------+---------+-----------+------+
| 1001 | Peel    | London    |   12 |
| 1002 | Serres  | SanJose   |   13 |
| 1003 | AxelRod | New York  |   10 |
| 1004 | Motika  | London    |   11 |
| 1007 | Rifkin  | Barcelona |   15 |
| 1008 | Fran    | London    |   25 |
+------+---------+-----------+------+





32) Select all customers whose names fall in between ‘A’ and ‘G’ alphabetical range. 

mysql> SELECT * FROM Customers WHERE CNAME BETWEEN 'A' and 'G';

+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2006 | Clemens  | London  |    100 | 1001 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+

mysql> SELECT CNUM, CNAME FROM Customers WHERE CNAME BETWEEN 'A' AND 'G';

+------+----------+
| CNUM | CNAME    |
+------+----------+
| 2006 | Clemens  |
| 2008 | Cisneros |
+------+----------+


33) Select all the possible combinations of customers you can assign. 

mysql> SELECT C1.CNAME,C2.CNAME FROM Customers C1,Customers C2 WHERE C1.SNUM = C2.SNUM AND C1.CNUM != C2.CNUM;

+---------+---------+
| CNAME   | CNAME   |
+---------+---------+
| Clemens | Hoffman |
| Grass   | Liu     |
| Liu     | Grass   |
| Hoffman | Clemens |
+---------+---------+



34) Select all orders that are greater than the average for October 4. 

mysql> SELECT * FROM Orders WHERE AMT>(SELECT AVG(AMT) FROM Orders WHERE ODATE='1990-04-10');

+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3002 | 1900.10 | 1990-03-10 | 2007 | 1004 |
| 3005 | 5160.45 | 1990-03-10 | 2003 | 1002 |
| 3006 | 1098.16 | 1990-03-10 | 2008 | 1007 |
| 3008 | 4723.00 | 1990-05-10 | 2006 | 1001 |
| 3009 | 1713.23 | 1990-04-10 | 2002 | 1003 |
| 3010 | 1309.95 | 1990-06-10 | 2004 | 1002 |
| 3011 | 9891.88 | 1990-06-10 | 2006 | 1001 |
+------+---------+------------+------+------+

mysql> SELECT ONUM FROM Orders WHERE AMT>(SELECT AVG(AMT) FROM Orders WHERE ODATE='1990-04-10');

+------+
| ONUM |
+------+
| 3002 |
| 3005 |
| 3006 |
| 3008 |
| 3009 |
| 3010 |
| 3011 |
+------+


35) Write a select command using correlated subquery that selects the names and numbers of all customers with ratings equal to the maximum for their city. 

mysql> SELECT CNUM,CNAME,RATING,CITY FROM Customers C1 WHERE RATING IN (SELECT MAX(RATING) FROM Customers C2 WHERE C1.CITY = C2.CITY);

+------+----------+--------+---------+
| CNUM | CNAME    | RATING | CITY    |
+------+----------+--------+---------+
| 2001 | Hoffman  |    100 | London  |
| 2002 | Giovanni |    200 | Rome    |
| 2004 | Grass    |    300 | Berlin  |
| 2006 | Clemens  |    100 | London  |
| 2008 | Cisneros |    300 | SanJose |
+------+----------+--------+---------+



36) Write a query that totals the orders for each day and places the results in descending order. 

mysql> SELECT SUM(AMT), ODATE FROm Orders GROUP BY ODATE ORDER BY SUM(AMT) DESC;

+----------+------------+
| SUM(AMT) | ODATE      |
+----------+------------+
| 11201.83 | 1990-06-10 |
|  8944.59 | 1990-03-10 |
|  4723.00 | 1990-05-10 |
|  1788.98 | 1990-04-10 |
+----------+------------+



37) Write a select command that produces the rating followed by the name of each customer in SanJose.

mysql> SELECT RATING, CNAME FROM Customers WHERE CITY='SanJose';

+--------+----------+
| RATING | CNAME    |
+--------+-------Vue Storefront - PWA for eCommerce. 100% offline, platform agnostic, headless, Magento 2 supported. Always Open Source, MIT license. Join us as contributor (contributors@vuestorefront.io). Check out our new blog: https://blog.vuestorefront.io/ and the new community initiative for improving Headless Security standards https://headless-security.or…---+
|    200 | Liu      |
|    300 | Cisneros |
+--------+----------+


38) Find all orders with amounts smaller than any amount for a customer in SanJose. 

mysql> SELECT * FROM Orders WHERE AMT < ANY (SELECT AMT FROM Orders WHERE CNUM= ANY (SELECT CNUM FROM Customers WHERE CITY='SanJose'));

+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-03-10 | 2008 | 1007 |
| 3002 | 1900.10 | 1990-03-10 | 2007 | 1004 |
| 3003 |  767.19 | 1990-03-10 | 2001 | 1001 |
| 3006 | 1098.16 | 1990-03-10 | 2008 | 1007 |
| 3007 |   75.75 | 1990-04-10 | 2004 | 1002 |
| 3008 | 4723.00 | 1990-05-10 | 2006 | 1001 |
| 3009 | 1713.23 | 1990-04-10 | 2002 | 1003 |
| 3010 | 1309.95 | 1990-06-10 | 2004 | 1002 |
+------+---------+------------+------+------+


39) Find all orders with above average amounts for their customers. 

mysql> SELECT * FROM Orders WHERE AMT > (SELECT AVG(AMT) FROM Orders);

+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3005 | 5160.45 | 1990-03-10 | 2003 | 1002 |
| 3008 | 4723.00 | 1990-05-10 | 2006 | 1001 |
| 3011 | 9891.88 | 1990-06-10 | 2006 | 1001 |
+------+---------+------------+------+------+


40) Write a query that selects the highest rating in each city. 

mysql> SELECT MAX(RATING), CITY FROM Customers GROUP BY CITY;

+-------------+---------+
| MAX(RATING) | CITY    |
+-------------+---------+
|         300 | Berlin  |
|         100 | London  |
|         200 | Rome    |
|         300 | SanJose |
+-------------+---------+


41) Write a query that calculates the amount of the salesperson’s commission on each order by a customer with a rating above 100.00. 


mysql> SELECT SNAME,COMM AS 'COMMISSION IN %', AMT AS AMOUNT, (AMT/100)*COMM AS COMMISSION, ONUM FROM Orders, Salespeople WHERE CNUM IN (SELECT CNUM FROM Customers WHERE RATING > 100) AND Orders.SNUM = Salespeople.SNUM;

+---------+-----------------+---------+------------+------+
| SNAME   | COMMISSION IN % | AMOUNT  | COMMISSION | ONUM |
+---------+-----------------+---------+------------+------+
| Rifkin  |              15 |   18.69 |   2.803500 | 3001 |
| Serres  |              13 | 5160.45 | 670.858500 | 3005 |
| Rifkin  |              15 | 1098.16 | 164.724000 | 3006 |
| Serres  |              13 |   75.75 |   9.847500 | 3007 |
| AxelRod |              10 | 1713.23 | 171.323000 | 3009 |
| Serres  |              13 | 1309.95 | 170.293500 | 3010 |
+---------+-----------------+---------+------------+------+



42) Count the customers with ratings above SanJose’s average. 

mysql> SELECT COUNT(CNUM) FROM Customers WHERE RATING > (SELECT AVG(RATING) FROM Customers WHERE CITY='SanJose');

+-------------+
| COUNT(CNUM) |
+-------------+
|           2 |
+-------------+



43) Find all salespeople that are located in either Barcelona or London.

mysql> SELECT * FROM Salespeople WHERE CITY='Barcelona' OR CITY='London'; 

+------+--------+-----------+------+
| SNUM | SNAME  | CITY      | COMM |
+------+--------+-----------+------+
| 1001 | Peel   | London    |   12 |
| 1004 | Motika | London    |   11 |
| 1007 | Rifkin | Barcelona |   15 |
| 1008 | Fran   | London    |   25 |
+------+--------+-----------+------+



44) Find all salespeople with only one customer. 

mysql> SELECT * FROM Salespeople WHERE 1 IN (SELECT COUNT(CNUM) FROM Orders WHERE Orders.SNUM = Salespeople.SNUM GROUP BY SNUM);

+------+---------+----------+------+
| SNUM | SNAME   | CITY     | COMM |
+------+---------+----------+------+
| 1003 | AxelRod | New York |   10 |
| 1004 | Motika  | London   |   11 |
+------+---------+----------+------+



45) Write a query that joins the Customer table to itself to find all pairs or customers served by a single salesperson. 

mysql> SELECT C1.CNAME, C2.CNAME FROM Customers C1 JOIN Customers C2 ON C1.SNUM = C2.SNUM AND C1.CNUM != C2.CNUM;

+---------+---------+
| CNAME   | CNAME   |
+---------+---------+
| Clemens | Hoffman |
| Grass   | Liu     |
| Liu     | Grass   |
| Hoffman | Clemens |
+---------+---------+



46) Write a query that will give you all orders for more than $1000.00. 

mysql> SELECT * FROM Orders WHERE AMT>'1000';

+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3002 | 1900.10 | 1990-03-10 | 2007 | 1004 |
| 3005 | 5160.45 | 1990-03-10 | 2003 | 1002 |
| 3006 | 1098.16 | 1990-03-10 | 2008 | 1007 |
| 3008 | 4723.00 | 1990-05-10 | 2006 | 1001 |
| 3009 | 1713.23 | 1990-04-10 | 2002 | 1003 |
| 3010 | 1309.95 | 1990-06-10 | 2004 | 1002 |
| 3011 | 9891.88 | 1990-06-10 | 2006 | 1001 |
+------+---------+------------+------+------+

mysql> SELECT ONUM, AMT FROM Orders WHERE AMT>'1000';

+------+---------+
| ONUM | AMT     |
+------+---------+
| 3002 | 1900.10 |
| 3005 | 5160.45 |
| 3006 | 1098.16 |
| 3008 | 4723.00 |
| 3009 | 1713.23 |
| 3010 | 1309.95 |
| 3011 | 9891.88 |
+------+---------+


47) Write a query that lists each order number followed by the name of the customer who made that order. 

mysql> SELECT ONUM, CNAME FROM Orders INNER JOIN Customers ON Orders.CNUM = Customers.CNUM;

+------+----------+
| ONUM | CNAME    |
+------+----------+
| 3001 | Cisneros |
| 3002 | Pereira  |
| 3003 | Hoffman  |
| 3005 | Liu      |
| 3006 | Cisneros |
| 3007 | Grass    |
| 3008 | Clemens  |
| 3009 | Giovanni |
| 3010 | Grass    |
| 3011 | Clemens  |
+------+----------+


48) Write a query that selects all the customers whose ratings are equal to or greater than ANY(in the SQL sense) of ‘Serres’. 

mysql> SELECT * FROM Customers WHERE RATING >= ANY(SELECT RATING FROM Customers WHERE SNUM IN (SELECT SNUM FROM Salespeople WHERE SNAME = 'Serres'));

+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+



49) Write two queries that will produce all orders taken on October 3 or October 4. 

mysql> SELECT * FROM Orders WHERE ODATE='1990-04-10' UNION SELECT * FROM Orders WHERE ODATE='1990-03-10';

+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3007 |   75.75 | 1990-04-10 | 2004 | 1002 |
| 3009 | 1713.23 | 1990-04-10 | 2002 | 1003 |
| 3001 |   18.69 | 1990-03-10 | 2008 | 1007 |
| 3002 | 1900.10 | 1990-03-10 | 2007 | 1004 |
| 3003 |  767.19 | 1990-03-10 | 2001 | 1001 |
| 3005 | 5160.45 | 1990-03-10 | 2003 | 1002 |
| 3006 | 1098.16 | 1990-03-10 | 2008 | 1007 |
+------+---------+------------+------+------+


50) Find only those customers whose ratings are higher than every customer in Rome. 

mysql> SELECT * FROM Customers WHERE RATING > (SELECT MAX(RATING) FROM Customers WHERE CITY='Rome');

+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+


51) Write a query on the Customers table whose output will exclude all customers with a rating <= 100.00, unless they are located in Rome. 

mysql> SELECT * FROM Customers WHERE RATING NOT IN(SELECT RATING FROM Customers WHERE RATING <= 100) OR CITY = 'Rome';

+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+

mysql> SELECT * FROM Customers WHERE RATING>100.00 OR CITY="Rome";

+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+


52) Find all rows from the customer’s table for which the salesperson number is 1001. 

mysql> SELECT * FROM Customers WHERE SNUM='1001';

+------+---------+--------+--------+------+
| CNUM | CNAME   | CITY   | RATING | SNUM |
+------+---------+--------+--------+------+
| 2001 | Hoffman | London |    100 | 1001 |
| 2006 | Clemens | London |    100 | 1001 |
+------+---------+--------+--------+------+


53) Find the total amount in orders for each salesperson where their total of amounts are greater than the amount of the largest order in the table. 

mysql> SELECT Total,SNUM FROM (SELECT SUM(AMT) AS TOTAL,SNUM FROM Orders GROUP BY SNUM) AS O WHERE Total > (SELECT MAX(AMT) FROM Orders);

+----------+------+
| Total    | SNUM |
+----------+------+
| 15382.07 | 1001 |
+----------+------+


54) Write a query that selects all orders save those with zeroes or NULL in the amount file. 

mysql> SELECT * FROM Orders WHERE AMT = 0 OR NULL;

Empty set (0.00 sec)


55) Produce all combinations of salespeople and customer names such that the former precedes the latter alphabetically, and the latter has a rating of less than 200. 




56) Find all salespeople name and commission. 

mysql> SELECT SNAME, COMM FROM Salespeople;

+---------+------+
| SNAME   | COMM |
+---------+------+
| Peel    |   12 |
| Serres  |   13 |
| AxelRod |   10 |
| Motika  |   11 |
| Rifkin  |   15 |
| Fran    |   25 |
+---------+------+


57) Write a query that produces the names and cities of all customers with the same rating as Hoffman. Write the query using Hoffman’s cnum rather than his rating, so that it would still be usable if his rating is changed.

mysql> SELECT CNAME, CITY FROM Customers WHERE RATING=(SELECT RATING FROM Customers WHERE CNUM='2001');

+---------+--------+
| CNAME   | CITY   |
+---------+--------+
| Hoffman | London |
| Clemens | London |
| Pereira | Rome   |
+---------+--------+


58) Find all salespeople for whom there are customers that follow them in alphabetical order. 

mysql> SELECT SNAME,CNAME FROM Salespeople, Customers WHERE Salespeople.SNUM = Customers.SNUM ORDER BY CNAME;

+---------+----------+
| SNAME   | CNAME    |
+---------+----------+
| Rifkin  | Cisneros |
| Peel    | Clemens  |
| AxelRod | Giovanni |
| Serres  | Grass    |
| Peel    | Hoffman  |
| Serres  | Lui      |
| Motika  | Pereira  |
+---------+----------+

mysql> SELECT SNAME,CNAME FROM Salespeople INNER JOIN Customers ON Salespeople.SNUM = Customers.SNUM AND Salespeople.SNAME < Customers.CNAME;

+---------+----------+
| SNAME   | CNAME    |
+---------+----------+
| AxelRod | Giovanni |
| Motika  | Pereira  |
+---------+----------+


59) Write a query that produces the names and ratings of all customers who have average orders. 

mysql> SELECT CNAME,RATING FROM Customers WHERE CNUM = (SELECT CNUM FROM Orders WHERE AMT=(SELECT AVG(AMT) FROM Orders));

Empty set (0.00 sec)

mysql> SELECT CNAME,RATING FROM Customers WHERE CNUM = ANY(SELECT CNUM FROM Orders WHERE AMT>(SELECT AVG(AMT) FROM Orders));

+---------+--------+
| CNAME   | RATING |
+---------+--------+
| Liu     |    200 |
| Clemens |    100 |
+---------+--------+

60) Find the SUM of all Amounts from the orders table. 

mysql> SELECT SUM(AMT) FROM Orders;

+----------+
| SUM(AMT) |
+----------+
| 26658.40 |
+----------+


61) Write a SELECT command that produces the order number, amount, and the date from rows in the order table. 

mysql> SELECT ONUM, AMT, ODATE FROM Orders;

+------+---------+------------+
| ONUM | AMT     | ODATE      |
+------+---------+------------+
| 3001 |   18.69 | 1990-03-10 |
| 3002 | 1900.10 | 1990-03-10 |
| 3003 |  767.19 | 1990-03-10 |
| 3005 | 5160.45 | 1990-03-10 |
| 3006 | 1098.16 | 1990-03-10 |
| 3007 |   75.75 | 1990-04-10 |
| 3008 | 4723.00 | 1990-05-10 |
| 3009 | 1713.23 | 1990-04-10 |
| 3010 | 1309.95 | 1990-06-10 |
| 3011 | 9891.88 | 1990-06-10 |
+------+---------+------------+


62) Count the number of non NULL rating fields in the Customers table (including repeats). 

mysql> SELECT COUNT(RATING) FROM Customers WHERE RATING IS NOT NULL;

+---------------+
| COUNT(RATING) |
+---------------+
|             7 |
+---------------+


63) Write a query that gives the names of both the salesperson and the customer for each order after the order number. 

mysql> Select o.ONUM, o.ODATE, s.SNAME, c.CNAME FROM Orders AS o LEFT JOIN Salespeople AS s ON s.SNUM=o.SNUM LEFT JOIN Customers AS c ON c.CNUM=o.CNUM;

+------+------------+---------+----------+
| ONUM | ODATE      | SNAME   | CNAME    |
+------+------------+---------+----------+
| 3001 | 1990-03-10 | Rifkin  | Cisneros |
| 3002 | 1990-03-10 | Motika  | Pereira  |
| 3003 | 1990-03-10 | Peel    | Hoffman  |
| 3005 | 1990-03-10 | Serres  | Liu      |
| 3006 | 1990-03-10 | Rifkin  | Cisneros |
| 3007 | 1990-04-10 | Serres  | Grass    |
| 3008 | 1990-05-10 | Peel    | Clemens  |
| 3009 | 1990-04-10 | AxelRod | Giovanni |
| 3010 | 1990-06-10 | Serres  | Grass    |
| 3011 | 1990-06-10 | Peel    | Clemens  |
+------+------------+---------+----------+


64) List the commissions of all salespeople servicing customers in London.

mysql> SELECT SNAME, COMM FROM Salespeople WHERE SNUM = ANY (SELECT SNUM FROM Customers WHERE CITY='London');

+-------+------+
| SNAME | COMM |
+-------+------+
| Peel  |   12 |
+-------+------+


65) Write a query using ANY or ALL that will find all salespeople who have no customers located in their city. 

mysql> SELECT SNUM, SNAME FROM Salespeople WHERE SNUM = ANY(SELECT SNUM FROM Customers WHERE Salespeople.CITY != Customers.CITY);

+------+---------+
| SNUM | SNAME   |
+------+---------+
| 1002 | Serres  |
| 1003 | AxelRod |
| 1004 | Motika  |
| 1007 | Rifkin  |
+------+---------+

mysql> SELECT SNUM, SNAME FROM Salespeople WHERE SNUM != ALL(SELECT SNUM FROM Customers WHERE Salespeople.CITY = Customers.CITY);

+------+---------+
| SNUM | SNAME   |
+------+---------+
| 1003 | AxelRod |
| 1004 | Motika  |
| 1007 | Rifkin  |
| 1008 | Fran    |
+------+---------+



66) Write a query using the EXISTS operator that selects all salespeople with customers located in their cities who are not assigned to them. 


mysql> SELECT * FROM Salespeople WHERE EXISTS(SELECT SNUM FROM Customers WHERE Salespeople.CITY = Customers.CITY AND Salespeople.SNUM != Customers.SNUM);

+------+--------+---------+------+
| SNUM | SNAME  | CITY    | COMM |
+------+--------+---------+------+
| 1002 | Serres | SanJose |   13 |
| 1004 | Motika | London  |   11 |
| 1008 | Fran   | London  |   25 |
+------+--------+---------+------+


67) Write a query that selects all customers serviced by Peel or Motika. (Hint: The snum field relates the 2 tables to one another.) 

mysql> SELECT * FROM Customers WHERE SNUM = ANY (SELECT SNUM FROM Salespeople WHERE SNAME='Peel' OR SNAME='Motika');

+------+---------+--------+--------+------+
| CNUM | CNAME   | CITY   | RATING | SNUM |
+------+---------+--------+--------+------+
| 2001 | Hoffman | London |    100 | 1001 |
| 2006 | Clemens | London |    100 | 1001 |
| 2007 | Pereira | Rome   |    100 | 1004 |
+------+---------+--------+--------+------+


68) Count the number of salespeople registering orders for each day. (If a salesperson has more than one order on a given day, he or she should be counted only once.) 


mysql> SELECT COUNT(DISTINCT SNUM), ODATE FROM Orders GROUP BY ODATE;

+----------------------+------------+
| COUNT(DISTINCT SNUM) | ODATE      |
+----------------------+------------+
|                    4 | 1990-03-10 |
|                    2 | 1990-04-10 |
|                    1 | 1990-05-10 |
|                    2 | 1990-06-10 |
+----------------------+------------+


69) Find all orders attributed to salespeople who live in London. 

mysql> SELECT * FROM Orders WHERE SNUM IN (SELECT SNUM FROM Salespeople WHERE CITY='London');

+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3002 | 1900.10 | 1990-03-10 | 2007 | 1004 |
| 3003 |  767.19 | 1990-03-10 | 2001 | 1001 |
| 3008 | 4723.00 | 1990-05-10 | 2006 | 1001 |
| 3011 | 9891.88 | 1990-06-10 | 2006 | 1001 |
+------+---------+------------+------+------+


70) Find all orders by customers not located in the same cities as their salespeople. 


mysql> SELECT * FROM Orders WHERE CNUM = ANY (SELECT CNUM FROM Customers AS c INNER JOIN Salespeople AS s ON c.CITY!=s.CITY AND s.SNUM=c.SNUM);

+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1990-03-10 | 2008 | 1007 |
| 3002 | 1900.10 | 1990-03-10 | 2007 | 1004 |
| 3006 | 1098.16 | 1990-03-10 | 2008 | 1007 |
| 3007 |   75.75 | 1990-04-10 | 2004 | 1002 |
| 3009 | 1713.23 | 1990-04-10 | 2002 | 1003 |
| 3010 | 1309.95 | 1990-06-10 | 2004 | 1002 |
+------+---------+------------+------+------+



71) Find all salespeople who have customers with more than one current order. 

mysql> SELECT * FROM Salespeople WHERE SNUM IN (SELECT SNUM FROM Customers WHERE 1 < (SELECT COUNT(*) FROM Orders WHERE Customers.CNUM = CNUM));

+------+--------+-----------+------+
| SNUM | SNAME  | CITY      | COMM |
+------+--------+-----------+------+
| 1002 | Serres | SanJose   |   13 |
| 1001 | Peel   | London    |   12 |
| 1007 | Rifkin | Barcelona |   15 |
+------+--------+-----------+------+

mysql> SELECT s.* FROM Salespeople s, Orders o WHERE s.SNUM = o.SNUM GROUP BY o.SNUM HAVING COUNT(s.SNUM)> 1;

+------+--------+-----------+------+
| SNUM | SNAME  | CITY      | COMM |
+------+--------+-----------+------+
| 1001 | Peel   | London    |   12 |
| 1002 | Serres | SanJose   |   13 |
| 1007 | Rifkin | Barcelona |   15 |
+------+--------+-----------+------+


72) Write a query that extracts from the customer’s table every customer assigned to a salesperson, who is currently having at least one another customer(besides the customer being selected) with orders in the Orders Table.

mysql> SELECT * FROM Customers WHERE SNUM IN(SELECT SNUM FROM Orders WHERE 1<(SELECT COUNT(DISTINCT CNUM) FROM Orders WHERE Customers.SNUM = SNUM));

+------+---------+---------+--------+------+
| CNUM | CNAME   | CITY    | RATING | SNUM |
+------+---------+---------+--------+------+
| 2001 | Hoffman | London  |    100 | 1001 |
| 2006 | Clemens | London  |    100 | 1001 |
| 2003 | Liu     | SanJose |    200 | 1002 |
| 2004 | Grass   | Berlin  |    300 | 1002 |
+------+---------+---------+--------+------+


73) Write a query on the customer’s table that will find the highest rating in each city. Put the output in this form: for the city (city), the highest rating is (rating). 

mysql> SELECT CITY AS 'For the city', MAX(RATING) AS 'The highest rating' FROM Customers GROUP BY CITY;

+--------------+--------------------+
| For the city | The highest rating |
+--------------+--------------------+
| Berlin       |                300 |
| London       |                100 |
| Rome         |                200 |
| SanJose      |                300 |
+--------------+--------------------+


74) Write a query that will produce the snum values of all salespeople with orders, having amt greater than 1000 in the Orders Table(without repeats).

mysql> SELECT DISTINCT(SNUM) FROM Orders WHERE AMT>1000;

+------+
| SNUM |
+------+
| 1004 |
| 1002 |
| 1007 |
| 1001 |
| 1003 |
+------+



75) Write a query that lists customers in a descending order of rating. Output the rating field first, followed by the customer’s names and numbers. 

mysql> SELECT RATING, CNAME, CNUM FROM Customers ORDER BY RATING DESC;

+--------+----------+------+
| RATING | CNAME    | CNUM |
+--------+----------+------+
|    300 | Grass    | 2004 |
|    300 | Cisneros | 2008 |
|    200 | Giovanni | 2002 |
|    200 | Liu      | 2003 |
|    100 | Hoffman  | 2001 |
|    100 | Clemens  | 2006 |
|    100 | Pereira  | 2007 |
+--------+----------+------+



76) Find the average commission for salespeople in London. 

mysql> SELECT AVG(COMM) FROM Salespeople WHERE CITY='London';

+-----------+
| AVG(COMM) |
+-----------+
|   16.0000 |
+-----------+


77) Find all orders credited to the same salesperson who services Hoffman.(cnum 2001). 

mysql> SELECT * FROM Orders WHERE SNUM IN (SELECT SNUM FROM Customers WHERE CNUM = 2001);

+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3003 |  767.19 | 1990-03-10 | 2001 | 1001 |
| 3008 | 4723.00 | 1990-05-10 | 2006 | 1001 |
| 3011 | 9891.88 | 1990-06-10 | 2006 | 1001 |
+------+---------+------------+------+------+




78) Find all salespeople whose commission is in between 0.10 and 0.12(both inclusive). 

mysql> SELECT * FROM Salespeople WHERE COMM BETWEEN 10 AND 12;

+------+---------+----------+------+
| SNUM | SNAME   | CITY     | COMM |
+------+---------+----------+------+
| 1001 | Peel    | London   |   12 |
| 1003 | AxelRod | New York |   10 |
| 1004 | Motika  | London   |   11 |
+------+---------+----------+------+


79) Write a query that will give you the names and cities of all salespeople in London with a commission above 0.10.

mysql> SELECT SNAME, CITY FROM Salespeople WHERE CITY='London' AND COMM>10;

+--------+--------+
| SNAME  | CITY   |
+--------+--------+
| Peel   | London |
| Motika | London |
| Fran   | London |
+--------+--------+


80) Write a query that selects each customer’s smallest order. 

mysql> SELECT MIN(AMT), CNUM FROM Orders GROUP BY CNUM;

+----------+------+
| MIN(AMT) | CNUM |
+----------+------+
|   767.19 | 2001 |
|  1713.23 | 2002 |
|  5160.45 | 2003 |
|    75.75 | 2004 |
|  4723.00 | 2006 |
|  1900.10 | 2007 |
|    18.69 | 2008 |
+----------+------+


81) Write a query that selects the first customer in alphabetical order whose name begins with ‘G’. 

mysql> SELECT MIN(CNAME) FROM Customers WHERE CNAME LIKE 'G%'; 

+------------+
| MIN(CNAME) |
+------------+
| Giovanni   |
+------------+




82) Write a query that counts the number of different non NULL city values in the customers table. 

mysql> SELECT COUNT(DISTINCT CITY) FROM Customers;

+----------------------+
| COUNT(DISTINCT CITY) |
+----------------------+
|                    4 |
+----------------------+



83) Find the average amount from the Orders Table. 

mysql> SELECT AVG(AMT) FROM Orders; 

+-------------+
| AVG(AMT)    |
+-------------+
| 2665.840000 |
+-------------+


84) Find all customers who are not located in SanJose and whose rating is above 200. 

mysql> SELECT * FROM Customers WHERE CITY!='SanJose' AND RATING>200;

+------+-------+--------+--------+------+
| CNUM | CNAME | CITY   | RATING | SNUM |
+------+-------+--------+--------+------+
| 2004 | Grass | Berlin |    300 | 1002 |
+------+-------+--------+--------+------+


85) Give a simpler way to write this query.SELECT snum, sname, city, comm FROM salespeople WHERE (comm > 0.12 OR comm < 0.14); 


mysql> SELECT * FROM Salespeople;

+------+---------+-----------+------+
| SNUM | SNAME   | CITY      | COMM |
+------+---------+-----------+------+
| 1001 | Peel    | London    |   12 |
| 1002 | Serres  | SanJose   |   13 |
| 1003 | AxelRod | New York  |   10 |
| 1004 | Motika  | London    |   11 |
| 1007 | Rifkin  | Barcelona |   15 |
| 1008 | Fran    | London    |   25 |
+------+---------+-----------+------+


86) Which salespersons attend to customers not in the city they have been assigned to? 


mysql> SELECT * FROM Salespeople WHERE SNUM IN (SELECT SNUM FROM Customers WHERE Salespeople.CITY != Customers.CITY AND Salespeople.SNUM = Customers.SNUM);

+------+---------+-----------+------+
| SNUM | SNAME   | CITY      | COMM |
+------+---------+-----------+------+
| 1003 | AxelRod | New York  |   10 |
| 1002 | Serres  | SanJose   |   13 |
| 1004 | Motika  | London    |   11 |
| 1007 | Rifkin  | Barcelona |   15 |
+------+---------+-----------+------+


87) Which salespeople get commission greater than 0.11 are serving customers rated less than 250? 

mysql> SELECT * FROM Salespeople WHERE COMM > '11' AND SNUM IN (SELECT SNUM FROM Customers WHERE RATING < 250 AND Salespeople.SNUM = Customers.SNUM);

+------+--------+---------+------+
| SNUM | SNAME  | CITY    | COMM |
+------+--------+---------+------+
| 1001 | Peel   | London  |   12 |
| 1002 | Serres | SanJose |   13 |
+------+--------+---------+------+



88) Which salespeople have been assigned to the same city but get different commission percentages? 

mysql> SELECT SNUM,SNAME FROM Salespeople WHERE SNUM IN (SELECT c1.SNUM FROM Customers c1 JOIN Customers c2 ON c1.CITY = c2.CITY AND c1.SNUM != c2.SNUM);

+------+---------+
| SNUM | SNAME   |
+------+---------+
| 1004 | Motika  |
| 1007 | Rifkin  |
| 1003 | AxelRod |
| 1002 | Serres  |
+------+---------+



89) Which salesperson has earned the maximum commission? 

mysql> SELECT * FROM Salespeople WHERE COMM =(SELECT MAX(COMM) FROM Salespeople);

+------+-------+--------+------+
| SNUM | SNAME | CITY   | COMM |
+------+-------+--------+------+
| 1008 | Fran  | London |   25 |
+------+-------+--------+------+


90) Does the customer who has placed the maximum number of orders have the maximum rating? 

ans-> Yes, the customer with highest rating have max umber of orders. We can see in table below.

mysql> SELECT COUNT(ONUM) AS NO_OF_ORDERS, Customers.CNUM, RATING FROM Orders INNER JOIN Customers ON Orders.CNUM=Customers.CNUM GROUP BY CNUM ORDER BY NO_OF_ORDERS DESC, RATING DESC;

+--------------+------+--------+
| NO_OF_ORDERS | CNUM | RATING |
+--------------+------+--------+
|            2 | 2004 |    300 |
|            2 | 2008 |    300 |
|            2 | 2006 |    100 |
|            1 | 2003 |    200 |
|            1 | 2002 |    200 |
|            1 | 2001 |    100 |
|            1 | 2007 |    100 |
+--------------+------+--------+


91) List all customers in descending order of customer rating. 

mysql> SELECT * FROM Customers ORDER BY RATING DESC;

+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2001 | Hoffman  | London  |    100 | 1001 |
| 2006 | Clemens  | London  |    100 | 1001 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
+------+----------+---------+--------+------+



92) On which days has Hoffman placed orders? 

mysql> SELECT ONUM, ODATE FROM Orders WHERE CNUM = (SELECT CNUM FROM Customers WHERE CNAME='Hoffman');

+------+------------+
| ONUM | ODATE      |
+------+------------+
| 3003 | 1990-03-10 |
+------+------------+


93) Which salesmen have no orders between 10/03/1990 and 10/05/1990? 

mysql> SELECT SNUM FROM Orders WHERE ODATE NOT BETWEEN '1990-03-10' AND '1990-05-10';

+------+
| SNUM |
+------+
| 1002 |
| 1001 |
+------+



94) How many salespersons have succeeded in getting orders? 

mysql> SELECT COUNT(DISTINCT SNUM) AS 'NO_OF_SALESPEOPLE_GET_ORDERS' FROM Orders;

+------------------------------+
| NO_OF_SALESPEOPLE_GET_ORDERS |
+------------------------------+
|                            5 |
+------------------------------+


95) How many customers have placed orders? 

mysql> SELECT COUNT(DISTINCT CNUM) AS 'NO_OF_CUSTOMERS_PLACED_ORDERS' FROM Orders;

+-------------------------------+
| NO_OF_CUSTOMERS_PLACED_ORDERS |
+-------------------------------+
|                             7 |
+-------------------------------+


96) On which date has each salesman booked an order of maximum value? 


mysql> SELECT MAX(AMT), ODATE, SNUM FROM Orders GROUP BY ODATE, SNUM;

+----------+------------+------+
| MAX(AMT) | ODATE      | SNUM |
+----------+------------+------+
|   767.19 | 1990-03-10 | 1001 |
|  5160.45 | 1990-03-10 | 1002 |
|  1900.10 | 1990-03-10 | 1004 |
|  1098.16 | 1990-03-10 | 1007 |
|    75.75 | 1990-04-10 | 1002 |
|  1713.23 | 1990-04-10 | 1003 |
|  4723.00 | 1990-05-10 | 1001 |
|  9891.88 | 1990-06-10 | 1001 |
|  1309.95 | 1990-06-10 | 1002 |
+----------+------------+------+



97) Who is the most successful salesperson? 

mysql> SELECT s.SNAME, s.SNUM, SUM(o.AMT) AS Maximum_AMT FROM Salespeople s, Orders o WHERE s.SNUM = o.SNUM GROUP BY s.SNUM ORDER BY Maximum_AMT LIMIT 1;

+--------+------+-------------+
| SNAME  | SNUM | Maximum_AMT |
+--------+------+-------------+
| Rifkin | 1007 |     1116.85 |
+--------+------+-------------+



98) Which customers have the same rating? 

mysql> SELECT c1.CNAME, c2.CNAME FROM Customers AS c1 JOIN Customers AS c2 ON c1.CNUM!=c2.CNUM AND c1.RATING=c2.RATING;

+----------+----------+
| CNAME    | CNAME    |
+----------+----------+
| Clemens  | Hoffman  |
| Pereira  | Hoffman  |
| Liu      | Giovanni |
| Giovanni | Liu      |
| Cisneros | Grass    |
| Hoffman  | Clemens  |
| Pereira  | Clemens  |
| Hoffman  | Pereira  |
| Clemens  | Pereira  |
| Grass    | Cisneros |
+----------+----------+



99) Find all orders greater than the average for October 4th. 

mysql> SELECT * FROM Orders WHERE AMT > (SELECT AVG(AMT) FROM Orders WHERE ODATE LIKE '1990-04-10');

+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3002 | 1900.10 | 1990-03-10 | 2007 | 1004 |
| 3005 | 5160.45 | 1990-03-10 | 2003 | 1002 |
| 3006 | 1098.16 | 1990-03-10 | 2008 | 1007 |
| 3008 | 4723.00 | 1990-05-10 | 2006 | 1001 |
| 3009 | 1713.23 | 1990-04-10 | 2002 | 1003 |
| 3010 | 1309.95 | 1990-06-10 | 2004 | 1002 |
| 3011 | 9891.88 | 1990-06-10 | 2006 | 1001 |
+------+---------+------------+------+------+



100) List all customers with ratings above Grass’s Rating. 

mysql> SELECT * FROM Customers WHERE RATING > (SELECT RATING FROM Customers WHERE CNAME='Grass');

Empty set (0.00 sec)



101) Which customers have above average orders? 

mysql> SELECT * FROM Orders WHERE AMT > (SELECT AVG(AMT) FROM Orders);

+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3005 | 5160.45 | 1990-03-10 | 2003 | 1002 |
| 3008 | 4723.00 | 1990-05-10 | 2006 | 1001 |
| 3011 | 9891.88 | 1990-06-10 | 2006 | 1001 |
+------+---------+------------+------+------+


102) Select the total amount in orders for each salesperson for which the total is greater than the amount of the largest order in the table. 

mysql> SELECT s.SNAME, SUM(o.AMT) as TOTAL FROM Salespeople s JOIN Orders o on s.SNUM = o.SNUM GROUP BY o.SNUM HAVING TOTAL > (SELECT MAX(AMT) FROM Orders);

+-------+----------+
| SNAME | TOTAL    |
+-------+----------+
| Peel  | 15382.07 |
+-------+----------+



103) Give names and numbers of all salespersons that have more than one customer? 

mysql> SELECT SNUM,SNAME FROM Salespeople WHERE SNUM IN (SELECT SNUM FROM Customers c1 WHERE 1<(SELECT COUNT(*) FROM Customers c2 WHERE c1.SNUM = c2.SNUM GROUP BY SNUM));

+------+--------+
| SNUM | SNAME  |
+------+--------+
| 1001 | Peel   |
| 1002 | Serres |
+------+--------+


104) Select all salespeople by name and number who have customers in their city whom they don’t service. 

mysql> SELECT DISTINCT SNAME, Customers.SNUM FROM Salespeople INNER JOIN Customers ON Salespeople.CITY=Customers.CITY AND Customers.SNUM != Salespeople.SNUM;

+--------+------+
| SNAME  | SNUM |
+--------+------+
| Motika | 1001 |
| Fran   | 1001 |
| Serres | 1007 |
+--------+------+



105) Does the total amount in orders by customer in Rome and London, exceed the commission paid to salesperson in London, and New York by more than 5 times? 

ans-> No, MAX_ORDER != 5*MAX_COMM

mysql> SELECT (SELECT SUM(o.AMT) AS TOTAL_AMT FROM Customers c, Orders o WHERE c.CNUM = o.CNUM AND c.CITY IN('Rome', 'London') ) AS MAX_ORDER, ( SELECT SUM((o.AMT / 100)*s.COMM )*5 AS TOTAL_COMM FROM Salespeople s, Orders o WHERE s.SNUM = o.SNUM AND s.CITY IN('New York', 'London') ) AS MAX_COMM;

+-----------+--------------+
| MAX_ORDER | MAX_COMM     |
+-----------+--------------+
|  18995.40 | 11130.912000 |
+-----------+--------------+



106) Which are the date, order number, amt and city for each salesperson (by name) for themaximum order he has obtained? 

mysql> SELECT o.ODATE, o.ONUM, o.AMT, s.CITY, s.SNAME FROM Orders AS o JOIN Salespeople AS s ON o.SNUM = s.SNUM WHERE (s.SNUM, o.AMT) IN (SELECT SNUM, MAX(AMT) FROM Orders GROUP BY SNUM) ORDER BY s.SNAME;

+------------+------+---------+-----------+---------+
| ODATE      | ONUM | AMT     | CITY      | SNAME   |
+------------+------+---------+-----------+---------+
| 1990-04-10 | 3009 | 1713.23 | New York  | AxelRod |
| 1990-03-10 | 3002 | 1900.10 | London    | Motika  |
| 1990-06-10 | 3011 | 9891.88 | London    | Peel    |
| 1990-03-10 | 3006 | 1098.16 | Barcelona | Rifkin  |
| 1990-03-10 | 3005 | 5160.45 | SanJose   | Serres  |
+------------+------+---------+-----------+---------+



107) Which salesperson is having lowest commission? 

mysql> SELECT SNUM, SNAME, COMM FROM Salespeople WHERE COMM=(SELECT MIN(COMM) FROM Salespeople);
+------+---------+------+
| SNUM | SNAME   | COMM |
+------+---------+------+
| 1003 | AxelRod |   10 |
+------+---------+------+








