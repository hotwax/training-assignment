Case 1: Serializing the data.

Input:
User needs to give the file name while excuting the program. i.e, node serialization.js output1.ser

Output:
Serilization done.

Case 2: Deserializing the data.
Input:
User needs to run the Deserilization.js file with file name as an argument.

Output:
[
  {
    name: 'vishal',
    dob: '3/28/2001',
    address: {
      city: 'Indore',
      state: 'Madhya pradesh',
      pinCode: '452010',
      country: 'India'
    }
  },
  {
    name: 'Sanskar',
    dob: '4/8/2002',
    address: {
      city: 'Indore',
      state: 'Madhya pradesh',
      pinCode: '452010',
      country: 'India'
    }
  },
  {
    name: 'Varun',
    dob: '5/17/2003',
    address: {
      city: 'Indore',
      state: 'Madhya pradesh',
      pinCode: '452010',
      country: 'India'
    }
  },
  {
    name: 'Vicky',
    dob: '1/18/2004',
    address: {
      city: 'Indore',
      state: 'Madhya pradesh',
      pinCode: '452010',
      country: 'India'
    }
  },
  {
    name: 'Samyukth',
    dob: '6/29/2001',
    address: {
      city: 'Indore',
      state: 'Madhya pradesh',
      pinCode: '452010',
      country: 'India'
    }
  },
  {
    name: 'Shivam',
    dob: '9/20/2000',
    address: {
      city: 'Indore',
      state: 'Madhya pradesh',
      pinCode: '452010',
      country: 'India'
    }
  }
]
All data.

Case 3: User chooses a file which contains no data.

Input:
user enters a file name "output.txt" which does not contains any data

Output::
Data not available in the file provided.

Case 4: User chooses a file which does not exists.

Input:
User enters a file name "demo.ser" which does not exist

Output:
The program displays an message "File not found".